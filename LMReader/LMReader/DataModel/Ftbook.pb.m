// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Ftbook.pb.h"
// @@protoc_insertion_point(imports)

@implementation FtbookRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FtbookRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL BookStateIsValidValue(BookState value) {
  switch (value) {
    case BookStateStateUnknown:
    case BookStateStateWriting:
    case BookStateStateFinished:
    case BookStateStatePause:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromBookState(BookState value) {
  switch (value) {
    case BookStateStateUnknown:
      return @"BookStateStateUnknown";
    case BookStateStateWriting:
      return @"BookStateStateWriting";
    case BookStateStateFinished:
      return @"BookStateStateFinished";
    case BookStateStatePause:
      return @"BookStateStatePause";
    default:
      return nil;
  }
}

BOOL SourceStateIsValidValue(SourceState value) {
  switch (value) {
    case SourceStateSourcestateUnknown:
    case SourceStateSourcestateWorking:
    case SourceStateSourcestateStop:
    case SourceStateSourcestatePause:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromSourceState(SourceState value) {
  switch (value) {
    case SourceStateSourcestateUnknown:
      return @"SourceStateSourcestateUnknown";
    case SourceStateSourcestateWorking:
      return @"SourceStateSourcestateWorking";
    case SourceStateSourcestateStop:
      return @"SourceStateSourcestateStop";
    case SourceStateSourcestatePause:
      return @"SourceStateSourcestatePause";
    default:
      return nil;
  }
}

BOOL CopyrightStateIsValidValue(CopyrightState value) {
  switch (value) {
    case CopyrightStateCopyrightstateHave:
    case CopyrightStateCopyrightstateNo:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromCopyrightState(CopyrightState value) {
  switch (value) {
    case CopyrightStateCopyrightstateHave:
      return @"CopyrightStateCopyrightstateHave";
    case CopyrightStateCopyrightstateNo:
      return @"CopyrightStateCopyrightstateNo";
    default:
      return nil;
  }
}

BOOL GenderTypeIsValidValue(GenderType value) {
  switch (value) {
    case GenderTypeGenderUnknown:
    case GenderTypeGenderMale:
    case GenderTypeGenderFemale:
    case GenderTypeGenderOther:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromGenderType(GenderType value) {
  switch (value) {
    case GenderTypeGenderUnknown:
      return @"GenderTypeGenderUnknown";
    case GenderTypeGenderMale:
      return @"GenderTypeGenderMale";
    case GenderTypeGenderFemale:
      return @"GenderTypeGenderFemale";
    case GenderTypeGenderOther:
      return @"GenderTypeGenderOther";
    default:
      return nil;
  }
}

BOOL ErrCodeIsValidValue(ErrCode value) {
  switch (value) {
    case ErrCodeErrNone:
    case ErrCodeErrCannotdecode:
    case ErrCodeErrCannotdecodein:
    case ErrCodeErrCannotadddelmodify:
    case ErrCodeErrBooknotexist:
    case ErrCodeErrCannotsendsms:
    case ErrCodeErrTimelimit:
    case ErrCodeErrCountlimit:
    case ErrCodeErrPhonecannotreg:
    case ErrCodeErrPhonesmsnotequal:
    case ErrCodeErrOldpwdnotequal:
    case ErrCodeErrPwdsetfail:
    case ErrCodeErrNotlogined:
    case ErrCodeErrPhonenumnotreg:
    case ErrCodeErrPhonenumhavereg:
    case ErrCodeErrUidnotexist:
    case ErrCodeErrParaminvalieformat:
    case ErrCodeErrUnknow:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromErrCode(ErrCode value) {
  switch (value) {
    case ErrCodeErrNone:
      return @"ErrCodeErrNone";
    case ErrCodeErrCannotdecode:
      return @"ErrCodeErrCannotdecode";
    case ErrCodeErrCannotdecodein:
      return @"ErrCodeErrCannotdecodein";
    case ErrCodeErrCannotadddelmodify:
      return @"ErrCodeErrCannotadddelmodify";
    case ErrCodeErrBooknotexist:
      return @"ErrCodeErrBooknotexist";
    case ErrCodeErrCannotsendsms:
      return @"ErrCodeErrCannotsendsms";
    case ErrCodeErrTimelimit:
      return @"ErrCodeErrTimelimit";
    case ErrCodeErrCountlimit:
      return @"ErrCodeErrCountlimit";
    case ErrCodeErrPhonecannotreg:
      return @"ErrCodeErrPhonecannotreg";
    case ErrCodeErrPhonesmsnotequal:
      return @"ErrCodeErrPhonesmsnotequal";
    case ErrCodeErrOldpwdnotequal:
      return @"ErrCodeErrOldpwdnotequal";
    case ErrCodeErrPwdsetfail:
      return @"ErrCodeErrPwdsetfail";
    case ErrCodeErrNotlogined:
      return @"ErrCodeErrNotlogined";
    case ErrCodeErrPhonenumnotreg:
      return @"ErrCodeErrPhonenumnotreg";
    case ErrCodeErrPhonenumhavereg:
      return @"ErrCodeErrPhonenumhavereg";
    case ErrCodeErrUidnotexist:
      return @"ErrCodeErrUidnotexist";
    case ErrCodeErrParaminvalieformat:
      return @"ErrCodeErrParaminvalieformat";
    case ErrCodeErrUnknow:
      return @"ErrCodeErrUnknow";
    default:
      return nil;
  }
}

BOOL UserBookStoreOperateTypeIsValidValue(UserBookStoreOperateType value) {
  switch (value) {
    case UserBookStoreOperateTypeOperateAdd:
    case UserBookStoreOperateTypeOperateDel:
    case UserBookStoreOperateTypeOperateTop:
    case UserBookStoreOperateTypeOperateUntop:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromUserBookStoreOperateType(UserBookStoreOperateType value) {
  switch (value) {
    case UserBookStoreOperateTypeOperateAdd:
      return @"UserBookStoreOperateTypeOperateAdd";
    case UserBookStoreOperateTypeOperateDel:
      return @"UserBookStoreOperateTypeOperateDel";
    case UserBookStoreOperateTypeOperateTop:
      return @"UserBookStoreOperateTypeOperateTop";
    case UserBookStoreOperateTypeOperateUntop:
      return @"UserBookStoreOperateTypeOperateUntop";
    default:
      return nil;
  }
}

BOOL SmsTypeIsValidValue(SmsType value) {
  switch (value) {
    case SmsTypeSmsReg:
    case SmsTypeSmsForgotpwd:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromSmsType(SmsType value) {
  switch (value) {
    case SmsTypeSmsReg:
      return @"SmsTypeSmsReg";
    case SmsTypeSmsForgotpwd:
      return @"SmsTypeSmsForgotpwd";
    default:
      return nil;
  }
}

@interface Book ()
@property UInt32 bookId;
@property (strong) NSString* name;
@property (strong) NSMutableArray * bookTypeArray;
@property UInt32 bookLength;
@property (strong) NSString* author;
@property (strong) NSMutableArray * keyWordArray;
@property (strong) NSString* abstract;
@property UInt32 clicked;
@property (strong) NSString* pic;
@property BookState bookState;
@property (strong) Chapter* lastChapter;
@end

@implementation Book

- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
@synthesize bookTypeArray;
@dynamic bookType;
- (BOOL) hasBookLength {
  return !!hasBookLength_;
}
- (void) setHasBookLength:(BOOL) _value_ {
  hasBookLength_ = !!_value_;
}
@synthesize bookLength;
- (BOOL) hasAuthor {
  return !!hasAuthor_;
}
- (void) setHasAuthor:(BOOL) _value_ {
  hasAuthor_ = !!_value_;
}
@synthesize author;
@synthesize keyWordArray;
@dynamic keyWord;
- (BOOL) hasAbstract {
  return !!hasAbstract_;
}
- (void) setHasAbstract:(BOOL) _value_ {
  hasAbstract_ = !!_value_;
}
@synthesize abstract;
- (BOOL) hasClicked {
  return !!hasClicked_;
}
- (void) setHasClicked:(BOOL) _value_ {
  hasClicked_ = !!_value_;
}
@synthesize clicked;
- (BOOL) hasPic {
  return !!hasPic_;
}
- (void) setHasPic:(BOOL) _value_ {
  hasPic_ = !!_value_;
}
@synthesize pic;
- (BOOL) hasBookState {
  return !!hasBookState_;
}
- (void) setHasBookState:(BOOL) _value_ {
  hasBookState_ = !!_value_;
}
@synthesize bookState;
- (BOOL) hasLastChapter {
  return !!hasLastChapter_;
}
- (void) setHasLastChapter:(BOOL) _value_ {
  hasLastChapter_ = !!_value_;
}
@synthesize lastChapter;
- (instancetype) init {
  if ((self = [super init])) {
    self.bookId = 0;
    self.name = @"";
    self.bookLength = 0;
    self.author = @"";
    self.abstract = @"";
    self.clicked = 0;
    self.pic = @"";
    self.bookState = BookStateStateUnknown;
    self.lastChapter = [Chapter defaultInstance];
  }
  return self;
}
static Book* defaultBookInstance = nil;
+ (void) initialize {
  if (self == [Book class]) {
    defaultBookInstance = [[Book alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookInstance;
}
- (instancetype) defaultInstance {
  return defaultBookInstance;
}
- (NSArray *)bookType {
  return bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [bookTypeArray objectAtIndex:index];
}
- (NSArray *)keyWord {
  return keyWordArray;
}
- (NSString*)keyWordAtIndex:(NSUInteger)index {
  return [keyWordArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasBookId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasAuthor) {
    return NO;
  }
  if (!self.hasBookState) {
    return NO;
  }
  if (self.hasLastChapter) {
    if (!self.lastChapter.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookId) {
    [output writeUInt32:1 value:self.bookId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:3 value:element];
  }];
  if (self.hasBookLength) {
    [output writeUInt32:4 value:self.bookLength];
  }
  if (self.hasAuthor) {
    [output writeString:5 value:self.author];
  }
  [self.keyWordArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:7 value:element];
  }];
  if (self.hasAbstract) {
    [output writeString:9 value:self.abstract];
  }
  if (self.hasClicked) {
    [output writeUInt32:11 value:self.clicked];
  }
  if (self.hasPic) {
    [output writeString:13 value:self.pic];
  }
  if (self.hasBookState) {
    [output writeEnum:15 value:self.bookState];
  }
  if (self.hasLastChapter) {
    [output writeMessage:17 value:self.lastChapter];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBookId) {
    size_ += computeUInt32Size(1, self.bookId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.bookTypeArray.count;
    [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasBookLength) {
    size_ += computeUInt32Size(4, self.bookLength);
  }
  if (self.hasAuthor) {
    size_ += computeStringSize(5, self.author);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.keyWordArray.count;
    [self.keyWordArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAbstract) {
    size_ += computeStringSize(9, self.abstract);
  }
  if (self.hasClicked) {
    size_ += computeUInt32Size(11, self.clicked);
  }
  if (self.hasPic) {
    size_ += computeStringSize(13, self.pic);
  }
  if (self.hasBookState) {
    size_ += computeEnumSize(15, self.bookState);
  }
  if (self.hasLastChapter) {
    size_ += computeMessageSize(17, self.lastChapter);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Book*) parseFromData:(NSData*) data {
  return (Book*)[[[Book builder] mergeFromData:data] build];
}
+ (Book*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Book*)[[[Book builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Book*) parseFromInputStream:(NSInputStream*) input {
  return (Book*)[[[Book builder] mergeFromInputStream:input] build];
}
+ (Book*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Book*)[[[Book builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Book*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Book*)[[[Book builder] mergeFromCodedInputStream:input] build];
}
+ (Book*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Book*)[[[Book builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookBuilder*) builder {
  return [[BookBuilder alloc] init];
}
+ (BookBuilder*) builderWithPrototype:(Book*) prototype {
  return [[Book builder] mergeFrom:prototype];
}
- (BookBuilder*) builder {
  return [Book builder];
}
- (BookBuilder*) toBuilder {
  return [Book builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", [NSNumber numberWithInteger:self.bookId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.bookTypeArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookType", obj];
  }];
  if (self.hasBookLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookLength", [NSNumber numberWithInteger:self.bookLength]];
  }
  if (self.hasAuthor) {
    [output appendFormat:@"%@%@: %@\n", indent, @"author", self.author];
  }
  [self.keyWordArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"keyWord", obj];
  }];
  if (self.hasAbstract) {
    [output appendFormat:@"%@%@: %@\n", indent, @"abstract", self.abstract];
  }
  if (self.hasClicked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clicked", [NSNumber numberWithInteger:self.clicked]];
  }
  if (self.hasPic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pic", self.pic];
  }
  if (self.hasBookState) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookState", NSStringFromBookState(self.bookState)];
  }
  if (self.hasLastChapter) {
    [output appendFormat:@"%@%@ {\n", indent, @"lastChapter"];
    [self.lastChapter writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBookId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookId] forKey: @"bookId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [dictionary setObject:self.bookType forKey: @"bookType"];
  if (self.hasBookLength) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookLength] forKey: @"bookLength"];
  }
  if (self.hasAuthor) {
    [dictionary setObject: self.author forKey: @"author"];
  }
  [dictionary setObject:self.keyWord forKey: @"keyWord"];
  if (self.hasAbstract) {
    [dictionary setObject: self.abstract forKey: @"abstract"];
  }
  if (self.hasClicked) {
    [dictionary setObject: [NSNumber numberWithInteger:self.clicked] forKey: @"clicked"];
  }
  if (self.hasPic) {
    [dictionary setObject: self.pic forKey: @"pic"];
  }
  if (self.hasBookState) {
    [dictionary setObject: @(self.bookState) forKey: @"bookState"];
  }
  if (self.hasLastChapter) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.lastChapter storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"lastChapter"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Book class]]) {
    return NO;
  }
  Book *otherMessage = other;
  return
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || self.bookId == otherMessage.bookId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      [self.bookTypeArray isEqualToArray:otherMessage.bookTypeArray] &&
      self.hasBookLength == otherMessage.hasBookLength &&
      (!self.hasBookLength || self.bookLength == otherMessage.bookLength) &&
      self.hasAuthor == otherMessage.hasAuthor &&
      (!self.hasAuthor || [self.author isEqual:otherMessage.author]) &&
      [self.keyWordArray isEqualToArray:otherMessage.keyWordArray] &&
      self.hasAbstract == otherMessage.hasAbstract &&
      (!self.hasAbstract || [self.abstract isEqual:otherMessage.abstract]) &&
      self.hasClicked == otherMessage.hasClicked &&
      (!self.hasClicked || self.clicked == otherMessage.clicked) &&
      self.hasPic == otherMessage.hasPic &&
      (!self.hasPic || [self.pic isEqual:otherMessage.pic]) &&
      self.hasBookState == otherMessage.hasBookState &&
      (!self.hasBookState || self.bookState == otherMessage.bookState) &&
      self.hasLastChapter == otherMessage.hasLastChapter &&
      (!self.hasLastChapter || [self.lastChapter isEqual:otherMessage.lastChapter]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasBookLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookLength] hash];
  }
  if (self.hasAuthor) {
    hashCode = hashCode * 31 + [self.author hash];
  }
  [self.keyWordArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAbstract) {
    hashCode = hashCode * 31 + [self.abstract hash];
  }
  if (self.hasClicked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.clicked] hash];
  }
  if (self.hasPic) {
    hashCode = hashCode * 31 + [self.pic hash];
  }
  if (self.hasBookState) {
    hashCode = hashCode * 31 + self.bookState;
  }
  if (self.hasLastChapter) {
    hashCode = hashCode * 31 + [self.lastChapter hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookBuilder()
@property (strong) Book* resultBook;
@end

@implementation BookBuilder
@synthesize resultBook;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBook = [[Book alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBook;
}
- (BookBuilder*) clear {
  self.resultBook = [[Book alloc] init];
  return self;
}
- (BookBuilder*) clone {
  return [Book builderWithPrototype:resultBook];
}
- (Book*) defaultInstance {
  return [Book defaultInstance];
}
- (Book*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Book*) buildPartial {
  Book* returnMe = resultBook;
  self.resultBook = nil;
  return returnMe;
}
- (BookBuilder*) mergeFrom:(Book*) other {
  if (other == [Book defaultInstance]) {
    return self;
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.bookTypeArray.count > 0) {
    if (resultBook.bookTypeArray == nil) {
      resultBook.bookTypeArray = [[NSMutableArray alloc] initWithArray:other.bookTypeArray];
    } else {
      [resultBook.bookTypeArray addObjectsFromArray:other.bookTypeArray];
    }
  }
  if (other.hasBookLength) {
    [self setBookLength:other.bookLength];
  }
  if (other.hasAuthor) {
    [self setAuthor:other.author];
  }
  if (other.keyWordArray.count > 0) {
    if (resultBook.keyWordArray == nil) {
      resultBook.keyWordArray = [[NSMutableArray alloc] initWithArray:other.keyWordArray];
    } else {
      [resultBook.keyWordArray addObjectsFromArray:other.keyWordArray];
    }
  }
  if (other.hasAbstract) {
    [self setAbstract:other.abstract];
  }
  if (other.hasClicked) {
    [self setClicked:other.clicked];
  }
  if (other.hasPic) {
    [self setPic:other.pic];
  }
  if (other.hasBookState) {
    [self setBookState:other.bookState];
  }
  if (other.hasLastChapter) {
    [self mergeLastChapter:other.lastChapter];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBookId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self addBookType:[input readString]];
        break;
      }
      case 32: {
        [self setBookLength:[input readUInt32]];
        break;
      }
      case 42: {
        [self setAuthor:[input readString]];
        break;
      }
      case 58: {
        [self addKeyWord:[input readString]];
        break;
      }
      case 74: {
        [self setAbstract:[input readString]];
        break;
      }
      case 88: {
        [self setClicked:[input readUInt32]];
        break;
      }
      case 106: {
        [self setPic:[input readString]];
        break;
      }
      case 120: {
        BookState value = (BookState)[input readEnum];
        if (BookStateIsValidValue(value)) {
          [self setBookState:value];
        } else {
          [unknownFields mergeVarintField:15 value:value];
        }
        break;
      }
      case 138: {
        ChapterBuilder* subBuilder = [Chapter builder];
        if (self.hasLastChapter) {
          [subBuilder mergeFrom:self.lastChapter];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLastChapter:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBookId {
  return resultBook.hasBookId;
}
- (UInt32) bookId {
  return resultBook.bookId;
}
- (BookBuilder*) setBookId:(UInt32) value {
  resultBook.hasBookId = YES;
  resultBook.bookId = value;
  return self;
}
- (BookBuilder*) clearBookId {
  resultBook.hasBookId = NO;
  resultBook.bookId = 0;
  return self;
}
- (BOOL) hasName {
  return resultBook.hasName;
}
- (NSString*) name {
  return resultBook.name;
}
- (BookBuilder*) setName:(NSString*) value {
  resultBook.hasName = YES;
  resultBook.name = value;
  return self;
}
- (BookBuilder*) clearName {
  resultBook.hasName = NO;
  resultBook.name = @"";
  return self;
}
- (NSMutableArray *)bookType {
  return resultBook.bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [resultBook bookTypeAtIndex:index];
}
- (BookBuilder *)addBookType:(NSString*)value {
  if (resultBook.bookTypeArray == nil) {
    resultBook.bookTypeArray = [[NSMutableArray alloc]init];
  }
  [resultBook.bookTypeArray addObject:value];
  return self;
}
- (BookBuilder *)setBookTypeArray:(NSArray *)array {
  resultBook.bookTypeArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (BookBuilder *)clearBookType {
  resultBook.bookTypeArray = nil;
  return self;
}
- (BOOL) hasBookLength {
  return resultBook.hasBookLength;
}
- (UInt32) bookLength {
  return resultBook.bookLength;
}
- (BookBuilder*) setBookLength:(UInt32) value {
  resultBook.hasBookLength = YES;
  resultBook.bookLength = value;
  return self;
}
- (BookBuilder*) clearBookLength {
  resultBook.hasBookLength = NO;
  resultBook.bookLength = 0;
  return self;
}
- (BOOL) hasAuthor {
  return resultBook.hasAuthor;
}
- (NSString*) author {
  return resultBook.author;
}
- (BookBuilder*) setAuthor:(NSString*) value {
  resultBook.hasAuthor = YES;
  resultBook.author = value;
  return self;
}
- (BookBuilder*) clearAuthor {
  resultBook.hasAuthor = NO;
  resultBook.author = @"";
  return self;
}
- (NSMutableArray *)keyWord {
  return resultBook.keyWordArray;
}
- (NSString*)keyWordAtIndex:(NSUInteger)index {
  return [resultBook keyWordAtIndex:index];
}
- (BookBuilder *)addKeyWord:(NSString*)value {
  if (resultBook.keyWordArray == nil) {
    resultBook.keyWordArray = [[NSMutableArray alloc]init];
  }
  [resultBook.keyWordArray addObject:value];
  return self;
}
- (BookBuilder *)setKeyWordArray:(NSArray *)array {
  resultBook.keyWordArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (BookBuilder *)clearKeyWord {
  resultBook.keyWordArray = nil;
  return self;
}
- (BOOL) hasAbstract {
  return resultBook.hasAbstract;
}
- (NSString*) abstract {
  return resultBook.abstract;
}
- (BookBuilder*) setAbstract:(NSString*) value {
  resultBook.hasAbstract = YES;
  resultBook.abstract = value;
  return self;
}
- (BookBuilder*) clearAbstract {
  resultBook.hasAbstract = NO;
  resultBook.abstract = @"";
  return self;
}
- (BOOL) hasClicked {
  return resultBook.hasClicked;
}
- (UInt32) clicked {
  return resultBook.clicked;
}
- (BookBuilder*) setClicked:(UInt32) value {
  resultBook.hasClicked = YES;
  resultBook.clicked = value;
  return self;
}
- (BookBuilder*) clearClicked {
  resultBook.hasClicked = NO;
  resultBook.clicked = 0;
  return self;
}
- (BOOL) hasPic {
  return resultBook.hasPic;
}
- (NSString*) pic {
  return resultBook.pic;
}
- (BookBuilder*) setPic:(NSString*) value {
  resultBook.hasPic = YES;
  resultBook.pic = value;
  return self;
}
- (BookBuilder*) clearPic {
  resultBook.hasPic = NO;
  resultBook.pic = @"";
  return self;
}
- (BOOL) hasBookState {
  return resultBook.hasBookState;
}
- (BookState) bookState {
  return resultBook.bookState;
}
- (BookBuilder*) setBookState:(BookState) value {
  resultBook.hasBookState = YES;
  resultBook.bookState = value;
  return self;
}
- (BookBuilder*) clearBookState {
  resultBook.hasBookState = NO;
  resultBook.bookState = BookStateStateUnknown;
  return self;
}
- (BOOL) hasLastChapter {
  return resultBook.hasLastChapter;
}
- (Chapter*) lastChapter {
  return resultBook.lastChapter;
}
- (BookBuilder*) setLastChapter:(Chapter*) value {
  resultBook.hasLastChapter = YES;
  resultBook.lastChapter = value;
  return self;
}
- (BookBuilder*) setLastChapterBuilder:(ChapterBuilder*) builderForValue {
  return [self setLastChapter:[builderForValue build]];
}
- (BookBuilder*) mergeLastChapter:(Chapter*) value {
  if (resultBook.hasLastChapter &&
      resultBook.lastChapter != [Chapter defaultInstance]) {
    resultBook.lastChapter =
      [[[Chapter builderWithPrototype:resultBook.lastChapter] mergeFrom:value] buildPartial];
  } else {
    resultBook.lastChapter = value;
  }
  resultBook.hasLastChapter = YES;
  return self;
}
- (BookBuilder*) clearLastChapter {
  resultBook.hasLastChapter = NO;
  resultBook.lastChapter = [Chapter defaultInstance];
  return self;
}
@end

@interface BookNo ()
@property UInt32 no;
@property (strong) NSString* name;
@end

@implementation BookNo

- (BOOL) hasNo {
  return !!hasNo_;
}
- (void) setHasNo:(BOOL) _value_ {
  hasNo_ = !!_value_;
}
@synthesize no;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.no = 0;
    self.name = @"";
  }
  return self;
}
static BookNo* defaultBookNoInstance = nil;
+ (void) initialize {
  if (self == [BookNo class]) {
    defaultBookNoInstance = [[BookNo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookNoInstance;
}
- (instancetype) defaultInstance {
  return defaultBookNoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNo) {
    [output writeUInt32:1 value:self.no];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNo) {
    size_ += computeUInt32Size(1, self.no);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookNo*) parseFromData:(NSData*) data {
  return (BookNo*)[[[BookNo builder] mergeFromData:data] build];
}
+ (BookNo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookNo*)[[[BookNo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookNo*) parseFromInputStream:(NSInputStream*) input {
  return (BookNo*)[[[BookNo builder] mergeFromInputStream:input] build];
}
+ (BookNo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookNo*)[[[BookNo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookNo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookNo*)[[[BookNo builder] mergeFromCodedInputStream:input] build];
}
+ (BookNo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookNo*)[[[BookNo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookNoBuilder*) builder {
  return [[BookNoBuilder alloc] init];
}
+ (BookNoBuilder*) builderWithPrototype:(BookNo*) prototype {
  return [[BookNo builder] mergeFrom:prototype];
}
- (BookNoBuilder*) builder {
  return [BookNo builder];
}
- (BookNoBuilder*) toBuilder {
  return [BookNo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"no", [NSNumber numberWithInteger:self.no]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNo) {
    [dictionary setObject: [NSNumber numberWithInteger:self.no] forKey: @"no"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookNo class]]) {
    return NO;
  }
  BookNo *otherMessage = other;
  return
      self.hasNo == otherMessage.hasNo &&
      (!self.hasNo || self.no == otherMessage.no) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.no] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookNoBuilder()
@property (strong) BookNo* resultBookNo;
@end

@implementation BookNoBuilder
@synthesize resultBookNo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookNo = [[BookNo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookNo;
}
- (BookNoBuilder*) clear {
  self.resultBookNo = [[BookNo alloc] init];
  return self;
}
- (BookNoBuilder*) clone {
  return [BookNo builderWithPrototype:resultBookNo];
}
- (BookNo*) defaultInstance {
  return [BookNo defaultInstance];
}
- (BookNo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookNo*) buildPartial {
  BookNo* returnMe = resultBookNo;
  self.resultBookNo = nil;
  return returnMe;
}
- (BookNoBuilder*) mergeFrom:(BookNo*) other {
  if (other == [BookNo defaultInstance]) {
    return self;
  }
  if (other.hasNo) {
    [self setNo:other.no];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookNoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookNoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNo:[input readUInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasNo {
  return resultBookNo.hasNo;
}
- (UInt32) no {
  return resultBookNo.no;
}
- (BookNoBuilder*) setNo:(UInt32) value {
  resultBookNo.hasNo = YES;
  resultBookNo.no = value;
  return self;
}
- (BookNoBuilder*) clearNo {
  resultBookNo.hasNo = NO;
  resultBookNo.no = 0;
  return self;
}
- (BOOL) hasName {
  return resultBookNo.hasName;
}
- (NSString*) name {
  return resultBookNo.name;
}
- (BookNoBuilder*) setName:(NSString*) value {
  resultBookNo.hasName = YES;
  resultBookNo.name = value;
  return self;
}
- (BookNoBuilder*) clearName {
  resultBookNo.hasName = NO;
  resultBookNo.name = @"";
  return self;
}
@end

@interface Source ()
@property UInt32 id;
@property (strong) NSString* name;
@property (strong) NSString* url;
@property SourceState sourceState;
@property CopyrightState copyrightState;
@end

@implementation Source

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (BOOL) hasSourceState {
  return !!hasSourceState_;
}
- (void) setHasSourceState:(BOOL) _value_ {
  hasSourceState_ = !!_value_;
}
@synthesize sourceState;
- (BOOL) hasCopyrightState {
  return !!hasCopyrightState_;
}
- (void) setHasCopyrightState:(BOOL) _value_ {
  hasCopyrightState_ = !!_value_;
}
@synthesize copyrightState;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.url = @"";
    self.sourceState = SourceStateSourcestateUnknown;
    self.copyrightState = CopyrightStateCopyrightstateHave;
  }
  return self;
}
static Source* defaultSourceInstance = nil;
+ (void) initialize {
  if (self == [Source class]) {
    defaultSourceInstance = [[Source alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSourceInstance;
}
- (instancetype) defaultInstance {
  return defaultSourceInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeUInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasUrl) {
    [output writeString:3 value:self.url];
  }
  if (self.hasSourceState) {
    [output writeEnum:4 value:self.sourceState];
  }
  if (self.hasCopyrightState) {
    [output writeEnum:5 value:self.copyrightState];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeUInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(3, self.url);
  }
  if (self.hasSourceState) {
    size_ += computeEnumSize(4, self.sourceState);
  }
  if (self.hasCopyrightState) {
    size_ += computeEnumSize(5, self.copyrightState);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Source*) parseFromData:(NSData*) data {
  return (Source*)[[[Source builder] mergeFromData:data] build];
}
+ (Source*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Source*)[[[Source builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Source*) parseFromInputStream:(NSInputStream*) input {
  return (Source*)[[[Source builder] mergeFromInputStream:input] build];
}
+ (Source*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Source*)[[[Source builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Source*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Source*)[[[Source builder] mergeFromCodedInputStream:input] build];
}
+ (Source*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Source*)[[[Source builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SourceBuilder*) builder {
  return [[SourceBuilder alloc] init];
}
+ (SourceBuilder*) builderWithPrototype:(Source*) prototype {
  return [[Source builder] mergeFrom:prototype];
}
- (SourceBuilder*) builder {
  return [Source builder];
}
- (SourceBuilder*) toBuilder {
  return [Source builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInteger:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  if (self.hasSourceState) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceState", NSStringFromSourceState(self.sourceState)];
  }
  if (self.hasCopyrightState) {
    [output appendFormat:@"%@%@: %@\n", indent, @"copyrightState", NSStringFromCopyrightState(self.copyrightState)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  if (self.hasSourceState) {
    [dictionary setObject: @(self.sourceState) forKey: @"sourceState"];
  }
  if (self.hasCopyrightState) {
    [dictionary setObject: @(self.copyrightState) forKey: @"copyrightState"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Source class]]) {
    return NO;
  }
  Source *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      self.hasSourceState == otherMessage.hasSourceState &&
      (!self.hasSourceState || self.sourceState == otherMessage.sourceState) &&
      self.hasCopyrightState == otherMessage.hasCopyrightState &&
      (!self.hasCopyrightState || self.copyrightState == otherMessage.copyrightState) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  if (self.hasSourceState) {
    hashCode = hashCode * 31 + self.sourceState;
  }
  if (self.hasCopyrightState) {
    hashCode = hashCode * 31 + self.copyrightState;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SourceBuilder()
@property (strong) Source* resultSource;
@end

@implementation SourceBuilder
@synthesize resultSource;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSource = [[Source alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSource;
}
- (SourceBuilder*) clear {
  self.resultSource = [[Source alloc] init];
  return self;
}
- (SourceBuilder*) clone {
  return [Source builderWithPrototype:resultSource];
}
- (Source*) defaultInstance {
  return [Source defaultInstance];
}
- (Source*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Source*) buildPartial {
  Source* returnMe = resultSource;
  self.resultSource = nil;
  return returnMe;
}
- (SourceBuilder*) mergeFrom:(Source*) other {
  if (other == [Source defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasSourceState) {
    [self setSourceState:other.sourceState];
  }
  if (other.hasCopyrightState) {
    [self setCopyrightState:other.copyrightState];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SourceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SourceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setUrl:[input readString]];
        break;
      }
      case 32: {
        SourceState value = (SourceState)[input readEnum];
        if (SourceStateIsValidValue(value)) {
          [self setSourceState:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        CopyrightState value = (CopyrightState)[input readEnum];
        if (CopyrightStateIsValidValue(value)) {
          [self setCopyrightState:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultSource.hasId;
}
- (UInt32) id {
  return resultSource.id;
}
- (SourceBuilder*) setId:(UInt32) value {
  resultSource.hasId = YES;
  resultSource.id = value;
  return self;
}
- (SourceBuilder*) clearId {
  resultSource.hasId = NO;
  resultSource.id = 0;
  return self;
}
- (BOOL) hasName {
  return resultSource.hasName;
}
- (NSString*) name {
  return resultSource.name;
}
- (SourceBuilder*) setName:(NSString*) value {
  resultSource.hasName = YES;
  resultSource.name = value;
  return self;
}
- (SourceBuilder*) clearName {
  resultSource.hasName = NO;
  resultSource.name = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultSource.hasUrl;
}
- (NSString*) url {
  return resultSource.url;
}
- (SourceBuilder*) setUrl:(NSString*) value {
  resultSource.hasUrl = YES;
  resultSource.url = value;
  return self;
}
- (SourceBuilder*) clearUrl {
  resultSource.hasUrl = NO;
  resultSource.url = @"";
  return self;
}
- (BOOL) hasSourceState {
  return resultSource.hasSourceState;
}
- (SourceState) sourceState {
  return resultSource.sourceState;
}
- (SourceBuilder*) setSourceState:(SourceState) value {
  resultSource.hasSourceState = YES;
  resultSource.sourceState = value;
  return self;
}
- (SourceBuilder*) clearSourceState {
  resultSource.hasSourceState = NO;
  resultSource.sourceState = SourceStateSourcestateUnknown;
  return self;
}
- (BOOL) hasCopyrightState {
  return resultSource.hasCopyrightState;
}
- (CopyrightState) copyrightState {
  return resultSource.copyrightState;
}
- (SourceBuilder*) setCopyrightState:(CopyrightState) value {
  resultSource.hasCopyrightState = YES;
  resultSource.copyrightState = value;
  return self;
}
- (SourceBuilder*) clearCopyrightState {
  resultSource.hasCopyrightState = NO;
  resultSource.copyrightState = CopyrightStateCopyrightstateHave;
  return self;
}
@end

@interface Chapter ()
@property (strong) Book* book;
@property (strong) BookNo* bookNo;
@property UInt32 chapterNo;
@property (strong) NSString* chapterTitle;
@property (strong) NSString* chapterContent;
@property (strong) Source* source;
@property UInt64 updatedAt;
@property UInt32 id;
@end

@implementation Chapter

- (BOOL) hasBook {
  return !!hasBook_;
}
- (void) setHasBook:(BOOL) _value_ {
  hasBook_ = !!_value_;
}
@synthesize book;
- (BOOL) hasBookNo {
  return !!hasBookNo_;
}
- (void) setHasBookNo:(BOOL) _value_ {
  hasBookNo_ = !!_value_;
}
@synthesize bookNo;
- (BOOL) hasChapterNo {
  return !!hasChapterNo_;
}
- (void) setHasChapterNo:(BOOL) _value_ {
  hasChapterNo_ = !!_value_;
}
@synthesize chapterNo;
- (BOOL) hasChapterTitle {
  return !!hasChapterTitle_;
}
- (void) setHasChapterTitle:(BOOL) _value_ {
  hasChapterTitle_ = !!_value_;
}
@synthesize chapterTitle;
- (BOOL) hasChapterContent {
  return !!hasChapterContent_;
}
- (void) setHasChapterContent:(BOOL) _value_ {
  hasChapterContent_ = !!_value_;
}
@synthesize chapterContent;
- (BOOL) hasSource {
  return !!hasSource_;
}
- (void) setHasSource:(BOOL) _value_ {
  hasSource_ = !!_value_;
}
@synthesize source;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) _value_ {
  hasUpdatedAt_ = !!_value_;
}
@synthesize updatedAt;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (instancetype) init {
  if ((self = [super init])) {
    self.book = [Book defaultInstance];
    self.bookNo = [BookNo defaultInstance];
    self.chapterNo = 0;
    self.chapterTitle = @"";
    self.chapterContent = @"";
    self.source = [Source defaultInstance];
    self.updatedAt = 0L;
    self.id = 0;
  }
  return self;
}
static Chapter* defaultChapterInstance = nil;
+ (void) initialize {
  if (self == [Chapter class]) {
    defaultChapterInstance = [[Chapter alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultChapterInstance;
}
- (instancetype) defaultInstance {
  return defaultChapterInstance;
}
- (BOOL) isInitialized {
  if (!self.hasChapterNo) {
    return NO;
  }
  if (!self.hasId) {
    return NO;
  }
  if (self.hasBook) {
    if (!self.book.isInitialized) {
      return NO;
    }
  }
  if (self.hasSource) {
    if (!self.source.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBook) {
    [output writeMessage:1 value:self.book];
  }
  if (self.hasBookNo) {
    [output writeMessage:2 value:self.bookNo];
  }
  if (self.hasChapterNo) {
    [output writeUInt32:3 value:self.chapterNo];
  }
  if (self.hasChapterTitle) {
    [output writeString:5 value:self.chapterTitle];
  }
  if (self.hasChapterContent) {
    [output writeString:7 value:self.chapterContent];
  }
  if (self.hasSource) {
    [output writeMessage:9 value:self.source];
  }
  if (self.hasUpdatedAt) {
    [output writeUInt64:11 value:self.updatedAt];
  }
  if (self.hasId) {
    [output writeUInt32:13 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBook) {
    size_ += computeMessageSize(1, self.book);
  }
  if (self.hasBookNo) {
    size_ += computeMessageSize(2, self.bookNo);
  }
  if (self.hasChapterNo) {
    size_ += computeUInt32Size(3, self.chapterNo);
  }
  if (self.hasChapterTitle) {
    size_ += computeStringSize(5, self.chapterTitle);
  }
  if (self.hasChapterContent) {
    size_ += computeStringSize(7, self.chapterContent);
  }
  if (self.hasSource) {
    size_ += computeMessageSize(9, self.source);
  }
  if (self.hasUpdatedAt) {
    size_ += computeUInt64Size(11, self.updatedAt);
  }
  if (self.hasId) {
    size_ += computeUInt32Size(13, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Chapter*) parseFromData:(NSData*) data {
  return (Chapter*)[[[Chapter builder] mergeFromData:data] build];
}
+ (Chapter*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Chapter*)[[[Chapter builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Chapter*) parseFromInputStream:(NSInputStream*) input {
  return (Chapter*)[[[Chapter builder] mergeFromInputStream:input] build];
}
+ (Chapter*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Chapter*)[[[Chapter builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Chapter*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Chapter*)[[[Chapter builder] mergeFromCodedInputStream:input] build];
}
+ (Chapter*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Chapter*)[[[Chapter builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChapterBuilder*) builder {
  return [[ChapterBuilder alloc] init];
}
+ (ChapterBuilder*) builderWithPrototype:(Chapter*) prototype {
  return [[Chapter builder] mergeFrom:prototype];
}
- (ChapterBuilder*) builder {
  return [Chapter builder];
}
- (ChapterBuilder*) toBuilder {
  return [Chapter builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBook) {
    [output appendFormat:@"%@%@ {\n", indent, @"book"];
    [self.book writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBookNo) {
    [output appendFormat:@"%@%@ {\n", indent, @"bookNo"];
    [self.bookNo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasChapterNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chapterNo", [NSNumber numberWithInteger:self.chapterNo]];
  }
  if (self.hasChapterTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chapterTitle", self.chapterTitle];
  }
  if (self.hasChapterContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chapterContent", self.chapterContent];
  }
  if (self.hasSource) {
    [output appendFormat:@"%@%@ {\n", indent, @"source"];
    [self.source writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithLongLong:self.updatedAt]];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInteger:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBook) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.book storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"book"];
  }
  if (self.hasBookNo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.bookNo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"bookNo"];
  }
  if (self.hasChapterNo) {
    [dictionary setObject: [NSNumber numberWithInteger:self.chapterNo] forKey: @"chapterNo"];
  }
  if (self.hasChapterTitle) {
    [dictionary setObject: self.chapterTitle forKey: @"chapterTitle"];
  }
  if (self.hasChapterContent) {
    [dictionary setObject: self.chapterContent forKey: @"chapterContent"];
  }
  if (self.hasSource) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.source storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"source"];
  }
  if (self.hasUpdatedAt) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updatedAt] forKey: @"updatedAt"];
  }
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.id] forKey: @"id"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Chapter class]]) {
    return NO;
  }
  Chapter *otherMessage = other;
  return
      self.hasBook == otherMessage.hasBook &&
      (!self.hasBook || [self.book isEqual:otherMessage.book]) &&
      self.hasBookNo == otherMessage.hasBookNo &&
      (!self.hasBookNo || [self.bookNo isEqual:otherMessage.bookNo]) &&
      self.hasChapterNo == otherMessage.hasChapterNo &&
      (!self.hasChapterNo || self.chapterNo == otherMessage.chapterNo) &&
      self.hasChapterTitle == otherMessage.hasChapterTitle &&
      (!self.hasChapterTitle || [self.chapterTitle isEqual:otherMessage.chapterTitle]) &&
      self.hasChapterContent == otherMessage.hasChapterContent &&
      (!self.hasChapterContent || [self.chapterContent isEqual:otherMessage.chapterContent]) &&
      self.hasSource == otherMessage.hasSource &&
      (!self.hasSource || [self.source isEqual:otherMessage.source]) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBook) {
    hashCode = hashCode * 31 + [self.book hash];
  }
  if (self.hasBookNo) {
    hashCode = hashCode * 31 + [self.bookNo hash];
  }
  if (self.hasChapterNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.chapterNo] hash];
  }
  if (self.hasChapterTitle) {
    hashCode = hashCode * 31 + [self.chapterTitle hash];
  }
  if (self.hasChapterContent) {
    hashCode = hashCode * 31 + [self.chapterContent hash];
  }
  if (self.hasSource) {
    hashCode = hashCode * 31 + [self.source hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updatedAt] hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChapterBuilder()
@property (strong) Chapter* resultChapter;
@end

@implementation ChapterBuilder
@synthesize resultChapter;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultChapter = [[Chapter alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultChapter;
}
- (ChapterBuilder*) clear {
  self.resultChapter = [[Chapter alloc] init];
  return self;
}
- (ChapterBuilder*) clone {
  return [Chapter builderWithPrototype:resultChapter];
}
- (Chapter*) defaultInstance {
  return [Chapter defaultInstance];
}
- (Chapter*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Chapter*) buildPartial {
  Chapter* returnMe = resultChapter;
  self.resultChapter = nil;
  return returnMe;
}
- (ChapterBuilder*) mergeFrom:(Chapter*) other {
  if (other == [Chapter defaultInstance]) {
    return self;
  }
  if (other.hasBook) {
    [self mergeBook:other.book];
  }
  if (other.hasBookNo) {
    [self mergeBookNo:other.bookNo];
  }
  if (other.hasChapterNo) {
    [self setChapterNo:other.chapterNo];
  }
  if (other.hasChapterTitle) {
    [self setChapterTitle:other.chapterTitle];
  }
  if (other.hasChapterContent) {
    [self setChapterContent:other.chapterContent];
  }
  if (other.hasSource) {
    [self mergeSource:other.source];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChapterBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChapterBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BookBuilder* subBuilder = [Book builder];
        if (self.hasBook) {
          [subBuilder mergeFrom:self.book];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBook:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        BookNoBuilder* subBuilder = [BookNo builder];
        if (self.hasBookNo) {
          [subBuilder mergeFrom:self.bookNo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBookNo:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setChapterNo:[input readUInt32]];
        break;
      }
      case 42: {
        [self setChapterTitle:[input readString]];
        break;
      }
      case 58: {
        [self setChapterContent:[input readString]];
        break;
      }
      case 74: {
        SourceBuilder* subBuilder = [Source builder];
        if (self.hasSource) {
          [subBuilder mergeFrom:self.source];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSource:[subBuilder buildPartial]];
        break;
      }
      case 88: {
        [self setUpdatedAt:[input readUInt64]];
        break;
      }
      case 104: {
        [self setId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBook {
  return resultChapter.hasBook;
}
- (Book*) book {
  return resultChapter.book;
}
- (ChapterBuilder*) setBook:(Book*) value {
  resultChapter.hasBook = YES;
  resultChapter.book = value;
  return self;
}
- (ChapterBuilder*) setBookBuilder:(BookBuilder*) builderForValue {
  return [self setBook:[builderForValue build]];
}
- (ChapterBuilder*) mergeBook:(Book*) value {
  if (resultChapter.hasBook &&
      resultChapter.book != [Book defaultInstance]) {
    resultChapter.book =
      [[[Book builderWithPrototype:resultChapter.book] mergeFrom:value] buildPartial];
  } else {
    resultChapter.book = value;
  }
  resultChapter.hasBook = YES;
  return self;
}
- (ChapterBuilder*) clearBook {
  resultChapter.hasBook = NO;
  resultChapter.book = [Book defaultInstance];
  return self;
}
- (BOOL) hasBookNo {
  return resultChapter.hasBookNo;
}
- (BookNo*) bookNo {
  return resultChapter.bookNo;
}
- (ChapterBuilder*) setBookNo:(BookNo*) value {
  resultChapter.hasBookNo = YES;
  resultChapter.bookNo = value;
  return self;
}
- (ChapterBuilder*) setBookNoBuilder:(BookNoBuilder*) builderForValue {
  return [self setBookNo:[builderForValue build]];
}
- (ChapterBuilder*) mergeBookNo:(BookNo*) value {
  if (resultChapter.hasBookNo &&
      resultChapter.bookNo != [BookNo defaultInstance]) {
    resultChapter.bookNo =
      [[[BookNo builderWithPrototype:resultChapter.bookNo] mergeFrom:value] buildPartial];
  } else {
    resultChapter.bookNo = value;
  }
  resultChapter.hasBookNo = YES;
  return self;
}
- (ChapterBuilder*) clearBookNo {
  resultChapter.hasBookNo = NO;
  resultChapter.bookNo = [BookNo defaultInstance];
  return self;
}
- (BOOL) hasChapterNo {
  return resultChapter.hasChapterNo;
}
- (UInt32) chapterNo {
  return resultChapter.chapterNo;
}
- (ChapterBuilder*) setChapterNo:(UInt32) value {
  resultChapter.hasChapterNo = YES;
  resultChapter.chapterNo = value;
  return self;
}
- (ChapterBuilder*) clearChapterNo {
  resultChapter.hasChapterNo = NO;
  resultChapter.chapterNo = 0;
  return self;
}
- (BOOL) hasChapterTitle {
  return resultChapter.hasChapterTitle;
}
- (NSString*) chapterTitle {
  return resultChapter.chapterTitle;
}
- (ChapterBuilder*) setChapterTitle:(NSString*) value {
  resultChapter.hasChapterTitle = YES;
  resultChapter.chapterTitle = value;
  return self;
}
- (ChapterBuilder*) clearChapterTitle {
  resultChapter.hasChapterTitle = NO;
  resultChapter.chapterTitle = @"";
  return self;
}
- (BOOL) hasChapterContent {
  return resultChapter.hasChapterContent;
}
- (NSString*) chapterContent {
  return resultChapter.chapterContent;
}
- (ChapterBuilder*) setChapterContent:(NSString*) value {
  resultChapter.hasChapterContent = YES;
  resultChapter.chapterContent = value;
  return self;
}
- (ChapterBuilder*) clearChapterContent {
  resultChapter.hasChapterContent = NO;
  resultChapter.chapterContent = @"";
  return self;
}
- (BOOL) hasSource {
  return resultChapter.hasSource;
}
- (Source*) source {
  return resultChapter.source;
}
- (ChapterBuilder*) setSource:(Source*) value {
  resultChapter.hasSource = YES;
  resultChapter.source = value;
  return self;
}
- (ChapterBuilder*) setSourceBuilder:(SourceBuilder*) builderForValue {
  return [self setSource:[builderForValue build]];
}
- (ChapterBuilder*) mergeSource:(Source*) value {
  if (resultChapter.hasSource &&
      resultChapter.source != [Source defaultInstance]) {
    resultChapter.source =
      [[[Source builderWithPrototype:resultChapter.source] mergeFrom:value] buildPartial];
  } else {
    resultChapter.source = value;
  }
  resultChapter.hasSource = YES;
  return self;
}
- (ChapterBuilder*) clearSource {
  resultChapter.hasSource = NO;
  resultChapter.source = [Source defaultInstance];
  return self;
}
- (BOOL) hasUpdatedAt {
  return resultChapter.hasUpdatedAt;
}
- (UInt64) updatedAt {
  return resultChapter.updatedAt;
}
- (ChapterBuilder*) setUpdatedAt:(UInt64) value {
  resultChapter.hasUpdatedAt = YES;
  resultChapter.updatedAt = value;
  return self;
}
- (ChapterBuilder*) clearUpdatedAt {
  resultChapter.hasUpdatedAt = NO;
  resultChapter.updatedAt = 0L;
  return self;
}
- (BOOL) hasId {
  return resultChapter.hasId;
}
- (UInt32) id {
  return resultChapter.id;
}
- (ChapterBuilder*) setId:(UInt32) value {
  resultChapter.hasId = YES;
  resultChapter.id = value;
  return self;
}
- (ChapterBuilder*) clearId {
  resultChapter.hasId = NO;
  resultChapter.id = 0;
  return self;
}
@end

@interface Gps ()
@property GpsCoordinateType coordinateType;
@property Float64 longitude;
@property Float64 latitude;
@property UInt32 timestamp;
@end

@implementation Gps

- (BOOL) hasCoordinateType {
  return !!hasCoordinateType_;
}
- (void) setHasCoordinateType:(BOOL) _value_ {
  hasCoordinateType_ = !!_value_;
}
@synthesize coordinateType;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) _value_ {
  hasLongitude_ = !!_value_;
}
@synthesize longitude;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) _value_ {
  hasLatitude_ = !!_value_;
}
@synthesize latitude;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) _value_ {
  hasTimestamp_ = !!_value_;
}
@synthesize timestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.coordinateType = GpsCoordinateTypeWgs84;
    self.longitude = 0;
    self.latitude = 0;
    self.timestamp = 0;
  }
  return self;
}
static Gps* defaultGpsInstance = nil;
+ (void) initialize {
  if (self == [Gps class]) {
    defaultGpsInstance = [[Gps alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGpsInstance;
}
- (instancetype) defaultInstance {
  return defaultGpsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCoordinateType) {
    [output writeEnum:1 value:self.coordinateType];
  }
  if (self.hasLongitude) {
    [output writeDouble:2 value:self.longitude];
  }
  if (self.hasLatitude) {
    [output writeDouble:3 value:self.latitude];
  }
  if (self.hasTimestamp) {
    [output writeUInt32:4 value:self.timestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCoordinateType) {
    size_ += computeEnumSize(1, self.coordinateType);
  }
  if (self.hasLongitude) {
    size_ += computeDoubleSize(2, self.longitude);
  }
  if (self.hasLatitude) {
    size_ += computeDoubleSize(3, self.latitude);
  }
  if (self.hasTimestamp) {
    size_ += computeUInt32Size(4, self.timestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Gps*) parseFromData:(NSData*) data {
  return (Gps*)[[[Gps builder] mergeFromData:data] build];
}
+ (Gps*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Gps*)[[[Gps builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Gps*) parseFromInputStream:(NSInputStream*) input {
  return (Gps*)[[[Gps builder] mergeFromInputStream:input] build];
}
+ (Gps*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Gps*)[[[Gps builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Gps*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Gps*)[[[Gps builder] mergeFromCodedInputStream:input] build];
}
+ (Gps*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Gps*)[[[Gps builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GpsBuilder*) builder {
  return [[GpsBuilder alloc] init];
}
+ (GpsBuilder*) builderWithPrototype:(Gps*) prototype {
  return [[Gps builder] mergeFrom:prototype];
}
- (GpsBuilder*) builder {
  return [Gps builder];
}
- (GpsBuilder*) toBuilder {
  return [Gps builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCoordinateType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coordinateType", NSStringFromGpsCoordinateType(self.coordinateType)];
  }
  if (self.hasLongitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longitude", [NSNumber numberWithDouble:self.longitude]];
  }
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithDouble:self.latitude]];
  }
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithInteger:self.timestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCoordinateType) {
    [dictionary setObject: @(self.coordinateType) forKey: @"coordinateType"];
  }
  if (self.hasLongitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.longitude] forKey: @"longitude"];
  }
  if (self.hasLatitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.latitude] forKey: @"latitude"];
  }
  if (self.hasTimestamp) {
    [dictionary setObject: [NSNumber numberWithInteger:self.timestamp] forKey: @"timestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Gps class]]) {
    return NO;
  }
  Gps *otherMessage = other;
  return
      self.hasCoordinateType == otherMessage.hasCoordinateType &&
      (!self.hasCoordinateType || self.coordinateType == otherMessage.coordinateType) &&
      self.hasLongitude == otherMessage.hasLongitude &&
      (!self.hasLongitude || self.longitude == otherMessage.longitude) &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCoordinateType) {
    hashCode = hashCode * 31 + self.coordinateType;
  }
  if (self.hasLongitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.longitude] hash];
  }
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.latitude] hash];
  }
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.timestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL GpsCoordinateTypeIsValidValue(GpsCoordinateType value) {
  switch (value) {
    case GpsCoordinateTypeWgs84:
    case GpsCoordinateTypeGcj02:
    case GpsCoordinateTypeBd09:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromGpsCoordinateType(GpsCoordinateType value) {
  switch (value) {
    case GpsCoordinateTypeWgs84:
      return @"GpsCoordinateTypeWgs84";
    case GpsCoordinateTypeGcj02:
      return @"GpsCoordinateTypeGcj02";
    case GpsCoordinateTypeBd09:
      return @"GpsCoordinateTypeBd09";
    default:
      return nil;
  }
}

@interface GpsBuilder()
@property (strong) Gps* resultGps;
@end

@implementation GpsBuilder
@synthesize resultGps;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGps = [[Gps alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGps;
}
- (GpsBuilder*) clear {
  self.resultGps = [[Gps alloc] init];
  return self;
}
- (GpsBuilder*) clone {
  return [Gps builderWithPrototype:resultGps];
}
- (Gps*) defaultInstance {
  return [Gps defaultInstance];
}
- (Gps*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Gps*) buildPartial {
  Gps* returnMe = resultGps;
  self.resultGps = nil;
  return returnMe;
}
- (GpsBuilder*) mergeFrom:(Gps*) other {
  if (other == [Gps defaultInstance]) {
    return self;
  }
  if (other.hasCoordinateType) {
    [self setCoordinateType:other.coordinateType];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GpsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GpsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        GpsCoordinateType value = (GpsCoordinateType)[input readEnum];
        if (GpsCoordinateTypeIsValidValue(value)) {
          [self setCoordinateType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 17: {
        [self setLongitude:[input readDouble]];
        break;
      }
      case 25: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 32: {
        [self setTimestamp:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCoordinateType {
  return resultGps.hasCoordinateType;
}
- (GpsCoordinateType) coordinateType {
  return resultGps.coordinateType;
}
- (GpsBuilder*) setCoordinateType:(GpsCoordinateType) value {
  resultGps.hasCoordinateType = YES;
  resultGps.coordinateType = value;
  return self;
}
- (GpsBuilder*) clearCoordinateType {
  resultGps.hasCoordinateType = NO;
  resultGps.coordinateType = GpsCoordinateTypeWgs84;
  return self;
}
- (BOOL) hasLongitude {
  return resultGps.hasLongitude;
}
- (Float64) longitude {
  return resultGps.longitude;
}
- (GpsBuilder*) setLongitude:(Float64) value {
  resultGps.hasLongitude = YES;
  resultGps.longitude = value;
  return self;
}
- (GpsBuilder*) clearLongitude {
  resultGps.hasLongitude = NO;
  resultGps.longitude = 0;
  return self;
}
- (BOOL) hasLatitude {
  return resultGps.hasLatitude;
}
- (Float64) latitude {
  return resultGps.latitude;
}
- (GpsBuilder*) setLatitude:(Float64) value {
  resultGps.hasLatitude = YES;
  resultGps.latitude = value;
  return self;
}
- (GpsBuilder*) clearLatitude {
  resultGps.hasLatitude = NO;
  resultGps.latitude = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return resultGps.hasTimestamp;
}
- (UInt32) timestamp {
  return resultGps.timestamp;
}
- (GpsBuilder*) setTimestamp:(UInt32) value {
  resultGps.hasTimestamp = YES;
  resultGps.timestamp = value;
  return self;
}
- (GpsBuilder*) clearTimestamp {
  resultGps.hasTimestamp = NO;
  resultGps.timestamp = 0;
  return self;
}
@end

@interface Device ()
@property DeviceDeviceType deviceType;
@property DeviceOsType osType;
@property (strong) NSString* osVersion;
@property (strong) NSData* vendor;
@property (strong) NSData* model;
@property (strong) DeviceUdId* udid;
@property (strong) DeviceSize* screenSize;
@end

@implementation Device

- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (BOOL) hasOsType {
  return !!hasOsType_;
}
- (void) setHasOsType:(BOOL) _value_ {
  hasOsType_ = !!_value_;
}
@synthesize osType;
- (BOOL) hasOsVersion {
  return !!hasOsVersion_;
}
- (void) setHasOsVersion:(BOOL) _value_ {
  hasOsVersion_ = !!_value_;
}
@synthesize osVersion;
- (BOOL) hasVendor {
  return !!hasVendor_;
}
- (void) setHasVendor:(BOOL) _value_ {
  hasVendor_ = !!_value_;
}
@synthesize vendor;
- (BOOL) hasModel {
  return !!hasModel_;
}
- (void) setHasModel:(BOOL) _value_ {
  hasModel_ = !!_value_;
}
@synthesize model;
- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) _value_ {
  hasUdid_ = !!_value_;
}
@synthesize udid;
- (BOOL) hasScreenSize {
  return !!hasScreenSize_;
}
- (void) setHasScreenSize:(BOOL) _value_ {
  hasScreenSize_ = !!_value_;
}
@synthesize screenSize;
- (instancetype) init {
  if ((self = [super init])) {
    self.deviceType = DeviceDeviceTypeDeviceUnknown;
    self.osType = DeviceOsTypeWin;
    self.osVersion = @"";
    self.vendor = [NSData data];
    self.model = [NSData data];
    self.udid = [DeviceUdId defaultInstance];
    self.screenSize = [DeviceSize defaultInstance];
  }
  return self;
}
static Device* defaultDeviceInstance = nil;
+ (void) initialize {
  if (self == [Device class]) {
    defaultDeviceInstance = [[Device alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeviceInstance;
}
- (instancetype) defaultInstance {
  return defaultDeviceInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceType) {
    [output writeEnum:1 value:self.deviceType];
  }
  if (self.hasOsType) {
    [output writeEnum:2 value:self.osType];
  }
  if (self.hasOsVersion) {
    [output writeString:3 value:self.osVersion];
  }
  if (self.hasVendor) {
    [output writeData:4 value:self.vendor];
  }
  if (self.hasModel) {
    [output writeData:5 value:self.model];
  }
  if (self.hasUdid) {
    [output writeMessage:6 value:self.udid];
  }
  if (self.hasScreenSize) {
    [output writeMessage:7 value:self.screenSize];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDeviceType) {
    size_ += computeEnumSize(1, self.deviceType);
  }
  if (self.hasOsType) {
    size_ += computeEnumSize(2, self.osType);
  }
  if (self.hasOsVersion) {
    size_ += computeStringSize(3, self.osVersion);
  }
  if (self.hasVendor) {
    size_ += computeDataSize(4, self.vendor);
  }
  if (self.hasModel) {
    size_ += computeDataSize(5, self.model);
  }
  if (self.hasUdid) {
    size_ += computeMessageSize(6, self.udid);
  }
  if (self.hasScreenSize) {
    size_ += computeMessageSize(7, self.screenSize);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Device*) parseFromData:(NSData*) data {
  return (Device*)[[[Device builder] mergeFromData:data] build];
}
+ (Device*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Device*)[[[Device builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Device*) parseFromInputStream:(NSInputStream*) input {
  return (Device*)[[[Device builder] mergeFromInputStream:input] build];
}
+ (Device*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Device*)[[[Device builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Device*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Device*)[[[Device builder] mergeFromCodedInputStream:input] build];
}
+ (Device*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Device*)[[[Device builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceBuilder*) builder {
  return [[DeviceBuilder alloc] init];
}
+ (DeviceBuilder*) builderWithPrototype:(Device*) prototype {
  return [[Device builder] mergeFrom:prototype];
}
- (DeviceBuilder*) builder {
  return [Device builder];
}
- (DeviceBuilder*) toBuilder {
  return [Device builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", NSStringFromDeviceDeviceType(self.deviceType)];
  }
  if (self.hasOsType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"osType", NSStringFromDeviceOsType(self.osType)];
  }
  if (self.hasOsVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"osVersion", self.osVersion];
  }
  if (self.hasVendor) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vendor", self.vendor];
  }
  if (self.hasModel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"model", self.model];
  }
  if (self.hasUdid) {
    [output appendFormat:@"%@%@ {\n", indent, @"udid"];
    [self.udid writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasScreenSize) {
    [output appendFormat:@"%@%@ {\n", indent, @"screenSize"];
    [self.screenSize writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDeviceType) {
    [dictionary setObject: @(self.deviceType) forKey: @"deviceType"];
  }
  if (self.hasOsType) {
    [dictionary setObject: @(self.osType) forKey: @"osType"];
  }
  if (self.hasOsVersion) {
    [dictionary setObject: self.osVersion forKey: @"osVersion"];
  }
  if (self.hasVendor) {
    [dictionary setObject: self.vendor forKey: @"vendor"];
  }
  if (self.hasModel) {
    [dictionary setObject: self.model forKey: @"model"];
  }
  if (self.hasUdid) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.udid storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"udid"];
  }
  if (self.hasScreenSize) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.screenSize storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"screenSize"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Device class]]) {
    return NO;
  }
  Device *otherMessage = other;
  return
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      self.hasOsType == otherMessage.hasOsType &&
      (!self.hasOsType || self.osType == otherMessage.osType) &&
      self.hasOsVersion == otherMessage.hasOsVersion &&
      (!self.hasOsVersion || [self.osVersion isEqual:otherMessage.osVersion]) &&
      self.hasVendor == otherMessage.hasVendor &&
      (!self.hasVendor || [self.vendor isEqual:otherMessage.vendor]) &&
      self.hasModel == otherMessage.hasModel &&
      (!self.hasModel || [self.model isEqual:otherMessage.model]) &&
      self.hasUdid == otherMessage.hasUdid &&
      (!self.hasUdid || [self.udid isEqual:otherMessage.udid]) &&
      self.hasScreenSize == otherMessage.hasScreenSize &&
      (!self.hasScreenSize || [self.screenSize isEqual:otherMessage.screenSize]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + self.deviceType;
  }
  if (self.hasOsType) {
    hashCode = hashCode * 31 + self.osType;
  }
  if (self.hasOsVersion) {
    hashCode = hashCode * 31 + [self.osVersion hash];
  }
  if (self.hasVendor) {
    hashCode = hashCode * 31 + [self.vendor hash];
  }
  if (self.hasModel) {
    hashCode = hashCode * 31 + [self.model hash];
  }
  if (self.hasUdid) {
    hashCode = hashCode * 31 + [self.udid hash];
  }
  if (self.hasScreenSize) {
    hashCode = hashCode * 31 + [self.screenSize hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL DeviceDeviceTypeIsValidValue(DeviceDeviceType value) {
  switch (value) {
    case DeviceDeviceTypeDeviceUnknown:
    case DeviceDeviceTypeDevicePhone:
    case DeviceDeviceTypeDeviceTablet:
    case DeviceDeviceTypeDeviceWear:
    case DeviceDeviceTypeDevicePc:
    case DeviceDeviceTypeDeviceOther:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromDeviceDeviceType(DeviceDeviceType value) {
  switch (value) {
    case DeviceDeviceTypeDeviceUnknown:
      return @"DeviceDeviceTypeDeviceUnknown";
    case DeviceDeviceTypeDevicePhone:
      return @"DeviceDeviceTypeDevicePhone";
    case DeviceDeviceTypeDeviceTablet:
      return @"DeviceDeviceTypeDeviceTablet";
    case DeviceDeviceTypeDeviceWear:
      return @"DeviceDeviceTypeDeviceWear";
    case DeviceDeviceTypeDevicePc:
      return @"DeviceDeviceTypeDevicePc";
    case DeviceDeviceTypeDeviceOther:
      return @"DeviceDeviceTypeDeviceOther";
    default:
      return nil;
  }
}

BOOL DeviceOsTypeIsValidValue(DeviceOsType value) {
  switch (value) {
    case DeviceOsTypeWin:
    case DeviceOsTypeAndroid:
    case DeviceOsTypeIos:
    case DeviceOsTypeWp:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromDeviceOsType(DeviceOsType value) {
  switch (value) {
    case DeviceOsTypeWin:
      return @"DeviceOsTypeWin";
    case DeviceOsTypeAndroid:
      return @"DeviceOsTypeAndroid";
    case DeviceOsTypeIos:
      return @"DeviceOsTypeIos";
    case DeviceOsTypeWp:
      return @"DeviceOsTypeWp";
    default:
      return nil;
  }
}

@interface DeviceSize ()
@property UInt32 width;
@property UInt32 height;
@end

@implementation DeviceSize

- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) _value_ {
  hasWidth_ = !!_value_;
}
@synthesize width;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) _value_ {
  hasHeight_ = !!_value_;
}
@synthesize height;
- (instancetype) init {
  if ((self = [super init])) {
    self.width = 0;
    self.height = 0;
  }
  return self;
}
static DeviceSize* defaultDeviceSizeInstance = nil;
+ (void) initialize {
  if (self == [DeviceSize class]) {
    defaultDeviceSizeInstance = [[DeviceSize alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeviceSizeInstance;
}
- (instancetype) defaultInstance {
  return defaultDeviceSizeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWidth) {
    [output writeUInt32:1 value:self.width];
  }
  if (self.hasHeight) {
    [output writeUInt32:2 value:self.height];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasWidth) {
    size_ += computeUInt32Size(1, self.width);
  }
  if (self.hasHeight) {
    size_ += computeUInt32Size(2, self.height);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeviceSize*) parseFromData:(NSData*) data {
  return (DeviceSize*)[[[DeviceSize builder] mergeFromData:data] build];
}
+ (DeviceSize*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceSize*)[[[DeviceSize builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeviceSize*) parseFromInputStream:(NSInputStream*) input {
  return (DeviceSize*)[[[DeviceSize builder] mergeFromInputStream:input] build];
}
+ (DeviceSize*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceSize*)[[[DeviceSize builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceSize*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeviceSize*)[[[DeviceSize builder] mergeFromCodedInputStream:input] build];
}
+ (DeviceSize*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceSize*)[[[DeviceSize builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceSizeBuilder*) builder {
  return [[DeviceSizeBuilder alloc] init];
}
+ (DeviceSizeBuilder*) builderWithPrototype:(DeviceSize*) prototype {
  return [[DeviceSize builder] mergeFrom:prototype];
}
- (DeviceSizeBuilder*) builder {
  return [DeviceSize builder];
}
- (DeviceSizeBuilder*) toBuilder {
  return [DeviceSize builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasWidth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"width", [NSNumber numberWithInteger:self.width]];
  }
  if (self.hasHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"height", [NSNumber numberWithInteger:self.height]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasWidth) {
    [dictionary setObject: [NSNumber numberWithInteger:self.width] forKey: @"width"];
  }
  if (self.hasHeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.height] forKey: @"height"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeviceSize class]]) {
    return NO;
  }
  DeviceSize *otherMessage = other;
  return
      self.hasWidth == otherMessage.hasWidth &&
      (!self.hasWidth || self.width == otherMessage.width) &&
      self.hasHeight == otherMessage.hasHeight &&
      (!self.hasHeight || self.height == otherMessage.height) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasWidth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.width] hash];
  }
  if (self.hasHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.height] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeviceSizeBuilder()
@property (strong) DeviceSize* resultSize;
@end

@implementation DeviceSizeBuilder
@synthesize resultSize;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSize = [[DeviceSize alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSize;
}
- (DeviceSizeBuilder*) clear {
  self.resultSize = [[DeviceSize alloc] init];
  return self;
}
- (DeviceSizeBuilder*) clone {
  return [DeviceSize builderWithPrototype:resultSize];
}
- (DeviceSize*) defaultInstance {
  return [DeviceSize defaultInstance];
}
- (DeviceSize*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeviceSize*) buildPartial {
  DeviceSize* returnMe = resultSize;
  self.resultSize = nil;
  return returnMe;
}
- (DeviceSizeBuilder*) mergeFrom:(DeviceSize*) other {
  if (other == [DeviceSize defaultInstance]) {
    return self;
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeviceSizeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeviceSizeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setWidth:[input readUInt32]];
        break;
      }
      case 16: {
        [self setHeight:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasWidth {
  return resultSize.hasWidth;
}
- (UInt32) width {
  return resultSize.width;
}
- (DeviceSizeBuilder*) setWidth:(UInt32) value {
  resultSize.hasWidth = YES;
  resultSize.width = value;
  return self;
}
- (DeviceSizeBuilder*) clearWidth {
  resultSize.hasWidth = NO;
  resultSize.width = 0;
  return self;
}
- (BOOL) hasHeight {
  return resultSize.hasHeight;
}
- (UInt32) height {
  return resultSize.height;
}
- (DeviceSizeBuilder*) setHeight:(UInt32) value {
  resultSize.hasHeight = YES;
  resultSize.height = value;
  return self;
}
- (DeviceSizeBuilder*) clearHeight {
  resultSize.hasHeight = NO;
  resultSize.height = 0;
  return self;
}
@end

@interface DeviceUdId ()
@property (strong) NSString* uuid;
@property (strong) NSString* imei;
@property (strong) NSString* mac;
@property (strong) NSString* androidId;
@property (strong) NSString* customId;
@end

@implementation DeviceUdId

- (BOOL) hasUuid {
  return !!hasUuid_;
}
- (void) setHasUuid:(BOOL) _value_ {
  hasUuid_ = !!_value_;
}
@synthesize uuid;
- (BOOL) hasImei {
  return !!hasImei_;
}
- (void) setHasImei:(BOOL) _value_ {
  hasImei_ = !!_value_;
}
@synthesize imei;
- (BOOL) hasMac {
  return !!hasMac_;
}
- (void) setHasMac:(BOOL) _value_ {
  hasMac_ = !!_value_;
}
@synthesize mac;
- (BOOL) hasAndroidId {
  return !!hasAndroidId_;
}
- (void) setHasAndroidId:(BOOL) _value_ {
  hasAndroidId_ = !!_value_;
}
@synthesize androidId;
- (BOOL) hasCustomId {
  return !!hasCustomId_;
}
- (void) setHasCustomId:(BOOL) _value_ {
  hasCustomId_ = !!_value_;
}
@synthesize customId;
- (instancetype) init {
  if ((self = [super init])) {
    self.uuid = @"";
    self.imei = @"";
    self.mac = @"";
    self.androidId = @"";
    self.customId = @"";
  }
  return self;
}
static DeviceUdId* defaultDeviceUdIdInstance = nil;
+ (void) initialize {
  if (self == [DeviceUdId class]) {
    defaultDeviceUdIdInstance = [[DeviceUdId alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeviceUdIdInstance;
}
- (instancetype) defaultInstance {
  return defaultDeviceUdIdInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUuid) {
    [output writeString:1 value:self.uuid];
  }
  if (self.hasImei) {
    [output writeString:2 value:self.imei];
  }
  if (self.hasMac) {
    [output writeString:3 value:self.mac];
  }
  if (self.hasAndroidId) {
    [output writeString:5 value:self.androidId];
  }
  if (self.hasCustomId) {
    [output writeString:6 value:self.customId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUuid) {
    size_ += computeStringSize(1, self.uuid);
  }
  if (self.hasImei) {
    size_ += computeStringSize(2, self.imei);
  }
  if (self.hasMac) {
    size_ += computeStringSize(3, self.mac);
  }
  if (self.hasAndroidId) {
    size_ += computeStringSize(5, self.androidId);
  }
  if (self.hasCustomId) {
    size_ += computeStringSize(6, self.customId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeviceUdId*) parseFromData:(NSData*) data {
  return (DeviceUdId*)[[[DeviceUdId builder] mergeFromData:data] build];
}
+ (DeviceUdId*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceUdId*)[[[DeviceUdId builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeviceUdId*) parseFromInputStream:(NSInputStream*) input {
  return (DeviceUdId*)[[[DeviceUdId builder] mergeFromInputStream:input] build];
}
+ (DeviceUdId*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceUdId*)[[[DeviceUdId builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceUdId*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeviceUdId*)[[[DeviceUdId builder] mergeFromCodedInputStream:input] build];
}
+ (DeviceUdId*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceUdId*)[[[DeviceUdId builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceUdIdBuilder*) builder {
  return [[DeviceUdIdBuilder alloc] init];
}
+ (DeviceUdIdBuilder*) builderWithPrototype:(DeviceUdId*) prototype {
  return [[DeviceUdId builder] mergeFrom:prototype];
}
- (DeviceUdIdBuilder*) builder {
  return [DeviceUdId builder];
}
- (DeviceUdIdBuilder*) toBuilder {
  return [DeviceUdId builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uuid", self.uuid];
  }
  if (self.hasImei) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imei", self.imei];
  }
  if (self.hasMac) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mac", self.mac];
  }
  if (self.hasAndroidId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"androidId", self.androidId];
  }
  if (self.hasCustomId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"customId", self.customId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUuid) {
    [dictionary setObject: self.uuid forKey: @"uuid"];
  }
  if (self.hasImei) {
    [dictionary setObject: self.imei forKey: @"imei"];
  }
  if (self.hasMac) {
    [dictionary setObject: self.mac forKey: @"mac"];
  }
  if (self.hasAndroidId) {
    [dictionary setObject: self.androidId forKey: @"androidId"];
  }
  if (self.hasCustomId) {
    [dictionary setObject: self.customId forKey: @"customId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeviceUdId class]]) {
    return NO;
  }
  DeviceUdId *otherMessage = other;
  return
      self.hasUuid == otherMessage.hasUuid &&
      (!self.hasUuid || [self.uuid isEqual:otherMessage.uuid]) &&
      self.hasImei == otherMessage.hasImei &&
      (!self.hasImei || [self.imei isEqual:otherMessage.imei]) &&
      self.hasMac == otherMessage.hasMac &&
      (!self.hasMac || [self.mac isEqual:otherMessage.mac]) &&
      self.hasAndroidId == otherMessage.hasAndroidId &&
      (!self.hasAndroidId || [self.androidId isEqual:otherMessage.androidId]) &&
      self.hasCustomId == otherMessage.hasCustomId &&
      (!self.hasCustomId || [self.customId isEqual:otherMessage.customId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUuid) {
    hashCode = hashCode * 31 + [self.uuid hash];
  }
  if (self.hasImei) {
    hashCode = hashCode * 31 + [self.imei hash];
  }
  if (self.hasMac) {
    hashCode = hashCode * 31 + [self.mac hash];
  }
  if (self.hasAndroidId) {
    hashCode = hashCode * 31 + [self.androidId hash];
  }
  if (self.hasCustomId) {
    hashCode = hashCode * 31 + [self.customId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeviceUdIdBuilder()
@property (strong) DeviceUdId* resultUdId;
@end

@implementation DeviceUdIdBuilder
@synthesize resultUdId;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUdId = [[DeviceUdId alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUdId;
}
- (DeviceUdIdBuilder*) clear {
  self.resultUdId = [[DeviceUdId alloc] init];
  return self;
}
- (DeviceUdIdBuilder*) clone {
  return [DeviceUdId builderWithPrototype:resultUdId];
}
- (DeviceUdId*) defaultInstance {
  return [DeviceUdId defaultInstance];
}
- (DeviceUdId*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeviceUdId*) buildPartial {
  DeviceUdId* returnMe = resultUdId;
  self.resultUdId = nil;
  return returnMe;
}
- (DeviceUdIdBuilder*) mergeFrom:(DeviceUdId*) other {
  if (other == [DeviceUdId defaultInstance]) {
    return self;
  }
  if (other.hasUuid) {
    [self setUuid:other.uuid];
  }
  if (other.hasImei) {
    [self setImei:other.imei];
  }
  if (other.hasMac) {
    [self setMac:other.mac];
  }
  if (other.hasAndroidId) {
    [self setAndroidId:other.androidId];
  }
  if (other.hasCustomId) {
    [self setCustomId:other.customId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeviceUdIdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeviceUdIdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUuid:[input readString]];
        break;
      }
      case 18: {
        [self setImei:[input readString]];
        break;
      }
      case 26: {
        [self setMac:[input readString]];
        break;
      }
      case 42: {
        [self setAndroidId:[input readString]];
        break;
      }
      case 50: {
        [self setCustomId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUuid {
  return resultUdId.hasUuid;
}
- (NSString*) uuid {
  return resultUdId.uuid;
}
- (DeviceUdIdBuilder*) setUuid:(NSString*) value {
  resultUdId.hasUuid = YES;
  resultUdId.uuid = value;
  return self;
}
- (DeviceUdIdBuilder*) clearUuid {
  resultUdId.hasUuid = NO;
  resultUdId.uuid = @"";
  return self;
}
- (BOOL) hasImei {
  return resultUdId.hasImei;
}
- (NSString*) imei {
  return resultUdId.imei;
}
- (DeviceUdIdBuilder*) setImei:(NSString*) value {
  resultUdId.hasImei = YES;
  resultUdId.imei = value;
  return self;
}
- (DeviceUdIdBuilder*) clearImei {
  resultUdId.hasImei = NO;
  resultUdId.imei = @"";
  return self;
}
- (BOOL) hasMac {
  return resultUdId.hasMac;
}
- (NSString*) mac {
  return resultUdId.mac;
}
- (DeviceUdIdBuilder*) setMac:(NSString*) value {
  resultUdId.hasMac = YES;
  resultUdId.mac = value;
  return self;
}
- (DeviceUdIdBuilder*) clearMac {
  resultUdId.hasMac = NO;
  resultUdId.mac = @"";
  return self;
}
- (BOOL) hasAndroidId {
  return resultUdId.hasAndroidId;
}
- (NSString*) androidId {
  return resultUdId.androidId;
}
- (DeviceUdIdBuilder*) setAndroidId:(NSString*) value {
  resultUdId.hasAndroidId = YES;
  resultUdId.androidId = value;
  return self;
}
- (DeviceUdIdBuilder*) clearAndroidId {
  resultUdId.hasAndroidId = NO;
  resultUdId.androidId = @"";
  return self;
}
- (BOOL) hasCustomId {
  return resultUdId.hasCustomId;
}
- (NSString*) customId {
  return resultUdId.customId;
}
- (DeviceUdIdBuilder*) setCustomId:(NSString*) value {
  resultUdId.hasCustomId = YES;
  resultUdId.customId = value;
  return self;
}
- (DeviceUdIdBuilder*) clearCustomId {
  resultUdId.hasCustomId = NO;
  resultUdId.customId = @"";
  return self;
}
@end

@interface DeviceBuilder()
@property (strong) Device* resultDevice;
@end

@implementation DeviceBuilder
@synthesize resultDevice;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDevice = [[Device alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDevice;
}
- (DeviceBuilder*) clear {
  self.resultDevice = [[Device alloc] init];
  return self;
}
- (DeviceBuilder*) clone {
  return [Device builderWithPrototype:resultDevice];
}
- (Device*) defaultInstance {
  return [Device defaultInstance];
}
- (Device*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Device*) buildPartial {
  Device* returnMe = resultDevice;
  self.resultDevice = nil;
  return returnMe;
}
- (DeviceBuilder*) mergeFrom:(Device*) other {
  if (other == [Device defaultInstance]) {
    return self;
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasOsType) {
    [self setOsType:other.osType];
  }
  if (other.hasOsVersion) {
    [self setOsVersion:other.osVersion];
  }
  if (other.hasVendor) {
    [self setVendor:other.vendor];
  }
  if (other.hasModel) {
    [self setModel:other.model];
  }
  if (other.hasUdid) {
    [self mergeUdid:other.udid];
  }
  if (other.hasScreenSize) {
    [self mergeScreenSize:other.screenSize];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeviceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeviceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        DeviceDeviceType value = (DeviceDeviceType)[input readEnum];
        if (DeviceDeviceTypeIsValidValue(value)) {
          [self setDeviceType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        DeviceOsType value = (DeviceOsType)[input readEnum];
        if (DeviceOsTypeIsValidValue(value)) {
          [self setOsType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setOsVersion:[input readString]];
        break;
      }
      case 34: {
        [self setVendor:[input readData]];
        break;
      }
      case 42: {
        [self setModel:[input readData]];
        break;
      }
      case 50: {
        DeviceUdIdBuilder* subBuilder = [DeviceUdId builder];
        if (self.hasUdid) {
          [subBuilder mergeFrom:self.udid];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUdid:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        DeviceSizeBuilder* subBuilder = [DeviceSize builder];
        if (self.hasScreenSize) {
          [subBuilder mergeFrom:self.screenSize];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setScreenSize:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceType {
  return resultDevice.hasDeviceType;
}
- (DeviceDeviceType) deviceType {
  return resultDevice.deviceType;
}
- (DeviceBuilder*) setDeviceType:(DeviceDeviceType) value {
  resultDevice.hasDeviceType = YES;
  resultDevice.deviceType = value;
  return self;
}
- (DeviceBuilder*) clearDeviceType {
  resultDevice.hasDeviceType = NO;
  resultDevice.deviceType = DeviceDeviceTypeDeviceUnknown;
  return self;
}
- (BOOL) hasOsType {
  return resultDevice.hasOsType;
}
- (DeviceOsType) osType {
  return resultDevice.osType;
}
- (DeviceBuilder*) setOsType:(DeviceOsType) value {
  resultDevice.hasOsType = YES;
  resultDevice.osType = value;
  return self;
}
- (DeviceBuilder*) clearOsType {
  resultDevice.hasOsType = NO;
  resultDevice.osType = DeviceOsTypeWin;
  return self;
}
- (BOOL) hasOsVersion {
  return resultDevice.hasOsVersion;
}
- (NSString*) osVersion {
  return resultDevice.osVersion;
}
- (DeviceBuilder*) setOsVersion:(NSString*) value {
  resultDevice.hasOsVersion = YES;
  resultDevice.osVersion = value;
  return self;
}
- (DeviceBuilder*) clearOsVersion {
  resultDevice.hasOsVersion = NO;
  resultDevice.osVersion = @"";
  return self;
}
- (BOOL) hasVendor {
  return resultDevice.hasVendor;
}
- (NSData*) vendor {
  return resultDevice.vendor;
}
- (DeviceBuilder*) setVendor:(NSData*) value {
  resultDevice.hasVendor = YES;
  resultDevice.vendor = value;
  return self;
}
- (DeviceBuilder*) clearVendor {
  resultDevice.hasVendor = NO;
  resultDevice.vendor = [NSData data];
  return self;
}
- (BOOL) hasModel {
  return resultDevice.hasModel;
}
- (NSData*) model {
  return resultDevice.model;
}
- (DeviceBuilder*) setModel:(NSData*) value {
  resultDevice.hasModel = YES;
  resultDevice.model = value;
  return self;
}
- (DeviceBuilder*) clearModel {
  resultDevice.hasModel = NO;
  resultDevice.model = [NSData data];
  return self;
}
- (BOOL) hasUdid {
  return resultDevice.hasUdid;
}
- (DeviceUdId*) udid {
  return resultDevice.udid;
}
- (DeviceBuilder*) setUdid:(DeviceUdId*) value {
  resultDevice.hasUdid = YES;
  resultDevice.udid = value;
  return self;
}
- (DeviceBuilder*) setUdidBuilder:(DeviceUdIdBuilder*) builderForValue {
  return [self setUdid:[builderForValue build]];
}
- (DeviceBuilder*) mergeUdid:(DeviceUdId*) value {
  if (resultDevice.hasUdid &&
      resultDevice.udid != [DeviceUdId defaultInstance]) {
    resultDevice.udid =
      [[[DeviceUdId builderWithPrototype:resultDevice.udid] mergeFrom:value] buildPartial];
  } else {
    resultDevice.udid = value;
  }
  resultDevice.hasUdid = YES;
  return self;
}
- (DeviceBuilder*) clearUdid {
  resultDevice.hasUdid = NO;
  resultDevice.udid = [DeviceUdId defaultInstance];
  return self;
}
- (BOOL) hasScreenSize {
  return resultDevice.hasScreenSize;
}
- (DeviceSize*) screenSize {
  return resultDevice.screenSize;
}
- (DeviceBuilder*) setScreenSize:(DeviceSize*) value {
  resultDevice.hasScreenSize = YES;
  resultDevice.screenSize = value;
  return self;
}
- (DeviceBuilder*) setScreenSizeBuilder:(DeviceSizeBuilder*) builderForValue {
  return [self setScreenSize:[builderForValue build]];
}
- (DeviceBuilder*) mergeScreenSize:(DeviceSize*) value {
  if (resultDevice.hasScreenSize &&
      resultDevice.screenSize != [DeviceSize defaultInstance]) {
    resultDevice.screenSize =
      [[[DeviceSize builderWithPrototype:resultDevice.screenSize] mergeFrom:value] buildPartial];
  } else {
    resultDevice.screenSize = value;
  }
  resultDevice.hasScreenSize = YES;
  return self;
}
- (DeviceBuilder*) clearScreenSize {
  resultDevice.hasScreenSize = NO;
  resultDevice.screenSize = [DeviceSize defaultInstance];
  return self;
}
@end

@interface RegUser ()
@property (strong) NSString* uid;
@property (strong) NSString* phoneNum;
@property (strong) NSString* email;
@property GenderType gender;
@property (strong) NSString* birthday;
@property (strong) NSString* localArea;
@end

@implementation RegUser

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasPhoneNum {
  return !!hasPhoneNum_;
}
- (void) setHasPhoneNum:(BOOL) _value_ {
  hasPhoneNum_ = !!_value_;
}
@synthesize phoneNum;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) _value_ {
  hasEmail_ = !!_value_;
}
@synthesize email;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) _value_ {
  hasGender_ = !!_value_;
}
@synthesize gender;
- (BOOL) hasBirthday {
  return !!hasBirthday_;
}
- (void) setHasBirthday:(BOOL) _value_ {
  hasBirthday_ = !!_value_;
}
@synthesize birthday;
- (BOOL) hasLocalArea {
  return !!hasLocalArea_;
}
- (void) setHasLocalArea:(BOOL) _value_ {
  hasLocalArea_ = !!_value_;
}
@synthesize localArea;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = @"";
    self.phoneNum = @"";
    self.email = @"";
    self.gender = GenderTypeGenderUnknown;
    self.birthday = @"";
    self.localArea = @"";
  }
  return self;
}
static RegUser* defaultRegUserInstance = nil;
+ (void) initialize {
  if (self == [RegUser class]) {
    defaultRegUserInstance = [[RegUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRegUserInstance;
}
- (instancetype) defaultInstance {
  return defaultRegUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeString:1 value:self.uid];
  }
  if (self.hasPhoneNum) {
    [output writeString:2 value:self.phoneNum];
  }
  if (self.hasEmail) {
    [output writeString:3 value:self.email];
  }
  if (self.hasGender) {
    [output writeEnum:5 value:self.gender];
  }
  if (self.hasBirthday) {
    [output writeString:7 value:self.birthday];
  }
  if (self.hasLocalArea) {
    [output writeString:9 value:self.localArea];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeStringSize(1, self.uid);
  }
  if (self.hasPhoneNum) {
    size_ += computeStringSize(2, self.phoneNum);
  }
  if (self.hasEmail) {
    size_ += computeStringSize(3, self.email);
  }
  if (self.hasGender) {
    size_ += computeEnumSize(5, self.gender);
  }
  if (self.hasBirthday) {
    size_ += computeStringSize(7, self.birthday);
  }
  if (self.hasLocalArea) {
    size_ += computeStringSize(9, self.localArea);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RegUser*) parseFromData:(NSData*) data {
  return (RegUser*)[[[RegUser builder] mergeFromData:data] build];
}
+ (RegUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUser*)[[[RegUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RegUser*) parseFromInputStream:(NSInputStream*) input {
  return (RegUser*)[[[RegUser builder] mergeFromInputStream:input] build];
}
+ (RegUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUser*)[[[RegUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RegUser*)[[[RegUser builder] mergeFromCodedInputStream:input] build];
}
+ (RegUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUser*)[[[RegUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegUserBuilder*) builder {
  return [[RegUserBuilder alloc] init];
}
+ (RegUserBuilder*) builderWithPrototype:(RegUser*) prototype {
  return [[RegUser builder] mergeFrom:prototype];
}
- (RegUserBuilder*) builder {
  return [RegUser builder];
}
- (RegUserBuilder*) toBuilder {
  return [RegUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", self.uid];
  }
  if (self.hasPhoneNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneNum", self.phoneNum];
  }
  if (self.hasEmail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"email", self.email];
  }
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", NSStringFromGenderType(self.gender)];
  }
  if (self.hasBirthday) {
    [output appendFormat:@"%@%@: %@\n", indent, @"birthday", self.birthday];
  }
  if (self.hasLocalArea) {
    [output appendFormat:@"%@%@: %@\n", indent, @"localArea", self.localArea];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: self.uid forKey: @"uid"];
  }
  if (self.hasPhoneNum) {
    [dictionary setObject: self.phoneNum forKey: @"phoneNum"];
  }
  if (self.hasEmail) {
    [dictionary setObject: self.email forKey: @"email"];
  }
  if (self.hasGender) {
    [dictionary setObject: @(self.gender) forKey: @"gender"];
  }
  if (self.hasBirthday) {
    [dictionary setObject: self.birthday forKey: @"birthday"];
  }
  if (self.hasLocalArea) {
    [dictionary setObject: self.localArea forKey: @"localArea"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RegUser class]]) {
    return NO;
  }
  RegUser *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || [self.uid isEqual:otherMessage.uid]) &&
      self.hasPhoneNum == otherMessage.hasPhoneNum &&
      (!self.hasPhoneNum || [self.phoneNum isEqual:otherMessage.phoneNum]) &&
      self.hasEmail == otherMessage.hasEmail &&
      (!self.hasEmail || [self.email isEqual:otherMessage.email]) &&
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || self.gender == otherMessage.gender) &&
      self.hasBirthday == otherMessage.hasBirthday &&
      (!self.hasBirthday || [self.birthday isEqual:otherMessage.birthday]) &&
      self.hasLocalArea == otherMessage.hasLocalArea &&
      (!self.hasLocalArea || [self.localArea isEqual:otherMessage.localArea]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [self.uid hash];
  }
  if (self.hasPhoneNum) {
    hashCode = hashCode * 31 + [self.phoneNum hash];
  }
  if (self.hasEmail) {
    hashCode = hashCode * 31 + [self.email hash];
  }
  if (self.hasGender) {
    hashCode = hashCode * 31 + self.gender;
  }
  if (self.hasBirthday) {
    hashCode = hashCode * 31 + [self.birthday hash];
  }
  if (self.hasLocalArea) {
    hashCode = hashCode * 31 + [self.localArea hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RegUserBuilder()
@property (strong) RegUser* resultRegUser;
@end

@implementation RegUserBuilder
@synthesize resultRegUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRegUser = [[RegUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRegUser;
}
- (RegUserBuilder*) clear {
  self.resultRegUser = [[RegUser alloc] init];
  return self;
}
- (RegUserBuilder*) clone {
  return [RegUser builderWithPrototype:resultRegUser];
}
- (RegUser*) defaultInstance {
  return [RegUser defaultInstance];
}
- (RegUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RegUser*) buildPartial {
  RegUser* returnMe = resultRegUser;
  self.resultRegUser = nil;
  return returnMe;
}
- (RegUserBuilder*) mergeFrom:(RegUser*) other {
  if (other == [RegUser defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasPhoneNum) {
    [self setPhoneNum:other.phoneNum];
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasBirthday) {
    [self setBirthday:other.birthday];
  }
  if (other.hasLocalArea) {
    [self setLocalArea:other.localArea];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RegUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RegUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUid:[input readString]];
        break;
      }
      case 18: {
        [self setPhoneNum:[input readString]];
        break;
      }
      case 26: {
        [self setEmail:[input readString]];
        break;
      }
      case 40: {
        GenderType value = (GenderType)[input readEnum];
        if (GenderTypeIsValidValue(value)) {
          [self setGender:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 58: {
        [self setBirthday:[input readString]];
        break;
      }
      case 74: {
        [self setLocalArea:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultRegUser.hasUid;
}
- (NSString*) uid {
  return resultRegUser.uid;
}
- (RegUserBuilder*) setUid:(NSString*) value {
  resultRegUser.hasUid = YES;
  resultRegUser.uid = value;
  return self;
}
- (RegUserBuilder*) clearUid {
  resultRegUser.hasUid = NO;
  resultRegUser.uid = @"";
  return self;
}
- (BOOL) hasPhoneNum {
  return resultRegUser.hasPhoneNum;
}
- (NSString*) phoneNum {
  return resultRegUser.phoneNum;
}
- (RegUserBuilder*) setPhoneNum:(NSString*) value {
  resultRegUser.hasPhoneNum = YES;
  resultRegUser.phoneNum = value;
  return self;
}
- (RegUserBuilder*) clearPhoneNum {
  resultRegUser.hasPhoneNum = NO;
  resultRegUser.phoneNum = @"";
  return self;
}
- (BOOL) hasEmail {
  return resultRegUser.hasEmail;
}
- (NSString*) email {
  return resultRegUser.email;
}
- (RegUserBuilder*) setEmail:(NSString*) value {
  resultRegUser.hasEmail = YES;
  resultRegUser.email = value;
  return self;
}
- (RegUserBuilder*) clearEmail {
  resultRegUser.hasEmail = NO;
  resultRegUser.email = @"";
  return self;
}
- (BOOL) hasGender {
  return resultRegUser.hasGender;
}
- (GenderType) gender {
  return resultRegUser.gender;
}
- (RegUserBuilder*) setGender:(GenderType) value {
  resultRegUser.hasGender = YES;
  resultRegUser.gender = value;
  return self;
}
- (RegUserBuilder*) clearGender {
  resultRegUser.hasGender = NO;
  resultRegUser.gender = GenderTypeGenderUnknown;
  return self;
}
- (BOOL) hasBirthday {
  return resultRegUser.hasBirthday;
}
- (NSString*) birthday {
  return resultRegUser.birthday;
}
- (RegUserBuilder*) setBirthday:(NSString*) value {
  resultRegUser.hasBirthday = YES;
  resultRegUser.birthday = value;
  return self;
}
- (RegUserBuilder*) clearBirthday {
  resultRegUser.hasBirthday = NO;
  resultRegUser.birthday = @"";
  return self;
}
- (BOOL) hasLocalArea {
  return resultRegUser.hasLocalArea;
}
- (NSString*) localArea {
  return resultRegUser.localArea;
}
- (RegUserBuilder*) setLocalArea:(NSString*) value {
  resultRegUser.hasLocalArea = YES;
  resultRegUser.localArea = value;
  return self;
}
- (RegUserBuilder*) clearLocalArea {
  resultRegUser.hasLocalArea = NO;
  resultRegUser.localArea = @"";
  return self;
}
@end

@interface LoginedRegUser ()
@property (strong) RegUser* user;
@property (strong) NSString* token;
@end

@implementation LoginedRegUser

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (instancetype) init {
  if ((self = [super init])) {
    self.user = [RegUser defaultInstance];
    self.token = @"";
  }
  return self;
}
static LoginedRegUser* defaultLoginedRegUserInstance = nil;
+ (void) initialize {
  if (self == [LoginedRegUser class]) {
    defaultLoginedRegUserInstance = [[LoginedRegUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultLoginedRegUserInstance;
}
- (instancetype) defaultInstance {
  return defaultLoginedRegUserInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasToken) {
    [output writeString:3 value:self.token];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  if (self.hasToken) {
    size_ += computeStringSize(3, self.token);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginedRegUser*) parseFromData:(NSData*) data {
  return (LoginedRegUser*)[[[LoginedRegUser builder] mergeFromData:data] build];
}
+ (LoginedRegUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginedRegUser*)[[[LoginedRegUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginedRegUser*) parseFromInputStream:(NSInputStream*) input {
  return (LoginedRegUser*)[[[LoginedRegUser builder] mergeFromInputStream:input] build];
}
+ (LoginedRegUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginedRegUser*)[[[LoginedRegUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginedRegUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginedRegUser*)[[[LoginedRegUser builder] mergeFromCodedInputStream:input] build];
}
+ (LoginedRegUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginedRegUser*)[[[LoginedRegUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginedRegUserBuilder*) builder {
  return [[LoginedRegUserBuilder alloc] init];
}
+ (LoginedRegUserBuilder*) builderWithPrototype:(LoginedRegUser*) prototype {
  return [[LoginedRegUser builder] mergeFrom:prototype];
}
- (LoginedRegUserBuilder*) builder {
  return [LoginedRegUser builder];
}
- (LoginedRegUserBuilder*) toBuilder {
  return [LoginedRegUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginedRegUser class]]) {
    return NO;
  }
  LoginedRegUser *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginedRegUserBuilder()
@property (strong) LoginedRegUser* resultLoginedRegUser;
@end

@implementation LoginedRegUserBuilder
@synthesize resultLoginedRegUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginedRegUser = [[LoginedRegUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginedRegUser;
}
- (LoginedRegUserBuilder*) clear {
  self.resultLoginedRegUser = [[LoginedRegUser alloc] init];
  return self;
}
- (LoginedRegUserBuilder*) clone {
  return [LoginedRegUser builderWithPrototype:resultLoginedRegUser];
}
- (LoginedRegUser*) defaultInstance {
  return [LoginedRegUser defaultInstance];
}
- (LoginedRegUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginedRegUser*) buildPartial {
  LoginedRegUser* returnMe = resultLoginedRegUser;
  self.resultLoginedRegUser = nil;
  return returnMe;
}
- (LoginedRegUserBuilder*) mergeFrom:(LoginedRegUser*) other {
  if (other == [LoginedRegUser defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginedRegUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginedRegUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RegUserBuilder* subBuilder = [RegUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultLoginedRegUser.hasUser;
}
- (RegUser*) user {
  return resultLoginedRegUser.user;
}
- (LoginedRegUserBuilder*) setUser:(RegUser*) value {
  resultLoginedRegUser.hasUser = YES;
  resultLoginedRegUser.user = value;
  return self;
}
- (LoginedRegUserBuilder*) setUserBuilder:(RegUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (LoginedRegUserBuilder*) mergeUser:(RegUser*) value {
  if (resultLoginedRegUser.hasUser &&
      resultLoginedRegUser.user != [RegUser defaultInstance]) {
    resultLoginedRegUser.user =
      [[[RegUser builderWithPrototype:resultLoginedRegUser.user] mergeFrom:value] buildPartial];
  } else {
    resultLoginedRegUser.user = value;
  }
  resultLoginedRegUser.hasUser = YES;
  return self;
}
- (LoginedRegUserBuilder*) clearUser {
  resultLoginedRegUser.hasUser = NO;
  resultLoginedRegUser.user = [RegUser defaultInstance];
  return self;
}
- (BOOL) hasToken {
  return resultLoginedRegUser.hasToken;
}
- (NSString*) token {
  return resultLoginedRegUser.token;
}
- (LoginedRegUserBuilder*) setToken:(NSString*) value {
  resultLoginedRegUser.hasToken = YES;
  resultLoginedRegUser.token = value;
  return self;
}
- (LoginedRegUserBuilder*) clearToken {
  resultLoginedRegUser.hasToken = NO;
  resultLoginedRegUser.token = @"";
  return self;
}
@end

@interface FtBookApiReq ()
@property UInt32 cmd;
@property (strong) Device* device;
@property (strong) NSData* body;
@property (strong) LoginedRegUser* loginedUser;
@property (strong) Gps* gps;
@property (strong) NSString* verName;
@end

@implementation FtBookApiReq

- (BOOL) hasCmd {
  return !!hasCmd_;
}
- (void) setHasCmd:(BOOL) _value_ {
  hasCmd_ = !!_value_;
}
@synthesize cmd;
- (BOOL) hasDevice {
  return !!hasDevice_;
}
- (void) setHasDevice:(BOOL) _value_ {
  hasDevice_ = !!_value_;
}
@synthesize device;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) _value_ {
  hasBody_ = !!_value_;
}
@synthesize body;
- (BOOL) hasLoginedUser {
  return !!hasLoginedUser_;
}
- (void) setHasLoginedUser:(BOOL) _value_ {
  hasLoginedUser_ = !!_value_;
}
@synthesize loginedUser;
- (BOOL) hasGps {
  return !!hasGps_;
}
- (void) setHasGps:(BOOL) _value_ {
  hasGps_ = !!_value_;
}
@synthesize gps;
- (BOOL) hasVerName {
  return !!hasVerName_;
}
- (void) setHasVerName:(BOOL) _value_ {
  hasVerName_ = !!_value_;
}
@synthesize verName;
- (instancetype) init {
  if ((self = [super init])) {
    self.cmd = 0;
    self.device = [Device defaultInstance];
    self.body = [NSData data];
    self.loginedUser = [LoginedRegUser defaultInstance];
    self.gps = [Gps defaultInstance];
    self.verName = @"";
  }
  return self;
}
static FtBookApiReq* defaultFtBookApiReqInstance = nil;
+ (void) initialize {
  if (self == [FtBookApiReq class]) {
    defaultFtBookApiReqInstance = [[FtBookApiReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFtBookApiReqInstance;
}
- (instancetype) defaultInstance {
  return defaultFtBookApiReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCmd) {
    return NO;
  }
  if (!self.hasDevice) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmd) {
    [output writeUInt32:1 value:self.cmd];
  }
  if (self.hasDevice) {
    [output writeMessage:2 value:self.device];
  }
  if (self.hasBody) {
    [output writeData:3 value:self.body];
  }
  if (self.hasLoginedUser) {
    [output writeMessage:4 value:self.loginedUser];
  }
  if (self.hasGps) {
    [output writeMessage:5 value:self.gps];
  }
  if (self.hasVerName) {
    [output writeString:7 value:self.verName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmd) {
    size_ += computeUInt32Size(1, self.cmd);
  }
  if (self.hasDevice) {
    size_ += computeMessageSize(2, self.device);
  }
  if (self.hasBody) {
    size_ += computeDataSize(3, self.body);
  }
  if (self.hasLoginedUser) {
    size_ += computeMessageSize(4, self.loginedUser);
  }
  if (self.hasGps) {
    size_ += computeMessageSize(5, self.gps);
  }
  if (self.hasVerName) {
    size_ += computeStringSize(7, self.verName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FtBookApiReq*) parseFromData:(NSData*) data {
  return (FtBookApiReq*)[[[FtBookApiReq builder] mergeFromData:data] build];
}
+ (FtBookApiReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FtBookApiReq*)[[[FtBookApiReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FtBookApiReq*) parseFromInputStream:(NSInputStream*) input {
  return (FtBookApiReq*)[[[FtBookApiReq builder] mergeFromInputStream:input] build];
}
+ (FtBookApiReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FtBookApiReq*)[[[FtBookApiReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FtBookApiReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FtBookApiReq*)[[[FtBookApiReq builder] mergeFromCodedInputStream:input] build];
}
+ (FtBookApiReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FtBookApiReq*)[[[FtBookApiReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FtBookApiReqBuilder*) builder {
  return [[FtBookApiReqBuilder alloc] init];
}
+ (FtBookApiReqBuilder*) builderWithPrototype:(FtBookApiReq*) prototype {
  return [[FtBookApiReq builder] mergeFrom:prototype];
}
- (FtBookApiReqBuilder*) builder {
  return [FtBookApiReq builder];
}
- (FtBookApiReqBuilder*) toBuilder {
  return [FtBookApiReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmd", [NSNumber numberWithInteger:self.cmd]];
  }
  if (self.hasDevice) {
    [output appendFormat:@"%@%@ {\n", indent, @"device"];
    [self.device writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"body", self.body];
  }
  if (self.hasLoginedUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"loginedUser"];
    [self.loginedUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGps) {
    [output appendFormat:@"%@%@ {\n", indent, @"gps"];
    [self.gps writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVerName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"verName", self.verName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCmd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cmd] forKey: @"cmd"];
  }
  if (self.hasDevice) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.device storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"device"];
  }
  if (self.hasBody) {
    [dictionary setObject: self.body forKey: @"body"];
  }
  if (self.hasLoginedUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.loginedUser storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"loginedUser"];
  }
  if (self.hasGps) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.gps storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"gps"];
  }
  if (self.hasVerName) {
    [dictionary setObject: self.verName forKey: @"verName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FtBookApiReq class]]) {
    return NO;
  }
  FtBookApiReq *otherMessage = other;
  return
      self.hasCmd == otherMessage.hasCmd &&
      (!self.hasCmd || self.cmd == otherMessage.cmd) &&
      self.hasDevice == otherMessage.hasDevice &&
      (!self.hasDevice || [self.device isEqual:otherMessage.device]) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      self.hasLoginedUser == otherMessage.hasLoginedUser &&
      (!self.hasLoginedUser || [self.loginedUser isEqual:otherMessage.loginedUser]) &&
      self.hasGps == otherMessage.hasGps &&
      (!self.hasGps || [self.gps isEqual:otherMessage.gps]) &&
      self.hasVerName == otherMessage.hasVerName &&
      (!self.hasVerName || [self.verName isEqual:otherMessage.verName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmd] hash];
  }
  if (self.hasDevice) {
    hashCode = hashCode * 31 + [self.device hash];
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  if (self.hasLoginedUser) {
    hashCode = hashCode * 31 + [self.loginedUser hash];
  }
  if (self.hasGps) {
    hashCode = hashCode * 31 + [self.gps hash];
  }
  if (self.hasVerName) {
    hashCode = hashCode * 31 + [self.verName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FtBookApiReqBuilder()
@property (strong) FtBookApiReq* resultFtBookApiReq;
@end

@implementation FtBookApiReqBuilder
@synthesize resultFtBookApiReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFtBookApiReq = [[FtBookApiReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFtBookApiReq;
}
- (FtBookApiReqBuilder*) clear {
  self.resultFtBookApiReq = [[FtBookApiReq alloc] init];
  return self;
}
- (FtBookApiReqBuilder*) clone {
  return [FtBookApiReq builderWithPrototype:resultFtBookApiReq];
}
- (FtBookApiReq*) defaultInstance {
  return [FtBookApiReq defaultInstance];
}
- (FtBookApiReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FtBookApiReq*) buildPartial {
  FtBookApiReq* returnMe = resultFtBookApiReq;
  self.resultFtBookApiReq = nil;
  return returnMe;
}
- (FtBookApiReqBuilder*) mergeFrom:(FtBookApiReq*) other {
  if (other == [FtBookApiReq defaultInstance]) {
    return self;
  }
  if (other.hasCmd) {
    [self setCmd:other.cmd];
  }
  if (other.hasDevice) {
    [self mergeDevice:other.device];
  }
  if (other.hasBody) {
    [self setBody:other.body];
  }
  if (other.hasLoginedUser) {
    [self mergeLoginedUser:other.loginedUser];
  }
  if (other.hasGps) {
    [self mergeGps:other.gps];
  }
  if (other.hasVerName) {
    [self setVerName:other.verName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FtBookApiReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FtBookApiReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmd:[input readUInt32]];
        break;
      }
      case 18: {
        DeviceBuilder* subBuilder = [Device builder];
        if (self.hasDevice) {
          [subBuilder mergeFrom:self.device];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDevice:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setBody:[input readData]];
        break;
      }
      case 34: {
        LoginedRegUserBuilder* subBuilder = [LoginedRegUser builder];
        if (self.hasLoginedUser) {
          [subBuilder mergeFrom:self.loginedUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginedUser:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        GpsBuilder* subBuilder = [Gps builder];
        if (self.hasGps) {
          [subBuilder mergeFrom:self.gps];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGps:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setVerName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmd {
  return resultFtBookApiReq.hasCmd;
}
- (UInt32) cmd {
  return resultFtBookApiReq.cmd;
}
- (FtBookApiReqBuilder*) setCmd:(UInt32) value {
  resultFtBookApiReq.hasCmd = YES;
  resultFtBookApiReq.cmd = value;
  return self;
}
- (FtBookApiReqBuilder*) clearCmd {
  resultFtBookApiReq.hasCmd = NO;
  resultFtBookApiReq.cmd = 0;
  return self;
}
- (BOOL) hasDevice {
  return resultFtBookApiReq.hasDevice;
}
- (Device*) device {
  return resultFtBookApiReq.device;
}
- (FtBookApiReqBuilder*) setDevice:(Device*) value {
  resultFtBookApiReq.hasDevice = YES;
  resultFtBookApiReq.device = value;
  return self;
}
- (FtBookApiReqBuilder*) setDeviceBuilder:(DeviceBuilder*) builderForValue {
  return [self setDevice:[builderForValue build]];
}
- (FtBookApiReqBuilder*) mergeDevice:(Device*) value {
  if (resultFtBookApiReq.hasDevice &&
      resultFtBookApiReq.device != [Device defaultInstance]) {
    resultFtBookApiReq.device =
      [[[Device builderWithPrototype:resultFtBookApiReq.device] mergeFrom:value] buildPartial];
  } else {
    resultFtBookApiReq.device = value;
  }
  resultFtBookApiReq.hasDevice = YES;
  return self;
}
- (FtBookApiReqBuilder*) clearDevice {
  resultFtBookApiReq.hasDevice = NO;
  resultFtBookApiReq.device = [Device defaultInstance];
  return self;
}
- (BOOL) hasBody {
  return resultFtBookApiReq.hasBody;
}
- (NSData*) body {
  return resultFtBookApiReq.body;
}
- (FtBookApiReqBuilder*) setBody:(NSData*) value {
  resultFtBookApiReq.hasBody = YES;
  resultFtBookApiReq.body = value;
  return self;
}
- (FtBookApiReqBuilder*) clearBody {
  resultFtBookApiReq.hasBody = NO;
  resultFtBookApiReq.body = [NSData data];
  return self;
}
- (BOOL) hasLoginedUser {
  return resultFtBookApiReq.hasLoginedUser;
}
- (LoginedRegUser*) loginedUser {
  return resultFtBookApiReq.loginedUser;
}
- (FtBookApiReqBuilder*) setLoginedUser:(LoginedRegUser*) value {
  resultFtBookApiReq.hasLoginedUser = YES;
  resultFtBookApiReq.loginedUser = value;
  return self;
}
- (FtBookApiReqBuilder*) setLoginedUserBuilder:(LoginedRegUserBuilder*) builderForValue {
  return [self setLoginedUser:[builderForValue build]];
}
- (FtBookApiReqBuilder*) mergeLoginedUser:(LoginedRegUser*) value {
  if (resultFtBookApiReq.hasLoginedUser &&
      resultFtBookApiReq.loginedUser != [LoginedRegUser defaultInstance]) {
    resultFtBookApiReq.loginedUser =
      [[[LoginedRegUser builderWithPrototype:resultFtBookApiReq.loginedUser] mergeFrom:value] buildPartial];
  } else {
    resultFtBookApiReq.loginedUser = value;
  }
  resultFtBookApiReq.hasLoginedUser = YES;
  return self;
}
- (FtBookApiReqBuilder*) clearLoginedUser {
  resultFtBookApiReq.hasLoginedUser = NO;
  resultFtBookApiReq.loginedUser = [LoginedRegUser defaultInstance];
  return self;
}
- (BOOL) hasGps {
  return resultFtBookApiReq.hasGps;
}
- (Gps*) gps {
  return resultFtBookApiReq.gps;
}
- (FtBookApiReqBuilder*) setGps:(Gps*) value {
  resultFtBookApiReq.hasGps = YES;
  resultFtBookApiReq.gps = value;
  return self;
}
- (FtBookApiReqBuilder*) setGpsBuilder:(GpsBuilder*) builderForValue {
  return [self setGps:[builderForValue build]];
}
- (FtBookApiReqBuilder*) mergeGps:(Gps*) value {
  if (resultFtBookApiReq.hasGps &&
      resultFtBookApiReq.gps != [Gps defaultInstance]) {
    resultFtBookApiReq.gps =
      [[[Gps builderWithPrototype:resultFtBookApiReq.gps] mergeFrom:value] buildPartial];
  } else {
    resultFtBookApiReq.gps = value;
  }
  resultFtBookApiReq.hasGps = YES;
  return self;
}
- (FtBookApiReqBuilder*) clearGps {
  resultFtBookApiReq.hasGps = NO;
  resultFtBookApiReq.gps = [Gps defaultInstance];
  return self;
}
- (BOOL) hasVerName {
  return resultFtBookApiReq.hasVerName;
}
- (NSString*) verName {
  return resultFtBookApiReq.verName;
}
- (FtBookApiReqBuilder*) setVerName:(NSString*) value {
  resultFtBookApiReq.hasVerName = YES;
  resultFtBookApiReq.verName = value;
  return self;
}
- (FtBookApiReqBuilder*) clearVerName {
  resultFtBookApiReq.hasVerName = NO;
  resultFtBookApiReq.verName = @"";
  return self;
}
@end

@interface FtBookApiRes ()
@property UInt32 cmd;
@property ErrCode err;
@property (strong) NSData* body;
@end

@implementation FtBookApiRes

- (BOOL) hasCmd {
  return !!hasCmd_;
}
- (void) setHasCmd:(BOOL) _value_ {
  hasCmd_ = !!_value_;
}
@synthesize cmd;
- (BOOL) hasErr {
  return !!hasErr_;
}
- (void) setHasErr:(BOOL) _value_ {
  hasErr_ = !!_value_;
}
@synthesize err;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) _value_ {
  hasBody_ = !!_value_;
}
@synthesize body;
- (instancetype) init {
  if ((self = [super init])) {
    self.cmd = 0;
    self.err = ErrCodeErrNone;
    self.body = [NSData data];
  }
  return self;
}
static FtBookApiRes* defaultFtBookApiResInstance = nil;
+ (void) initialize {
  if (self == [FtBookApiRes class]) {
    defaultFtBookApiResInstance = [[FtBookApiRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFtBookApiResInstance;
}
- (instancetype) defaultInstance {
  return defaultFtBookApiResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCmd) {
    return NO;
  }
  if (!self.hasErr) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmd) {
    [output writeUInt32:1 value:self.cmd];
  }
  if (self.hasErr) {
    [output writeEnum:2 value:self.err];
  }
  if (self.hasBody) {
    [output writeData:3 value:self.body];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmd) {
    size_ += computeUInt32Size(1, self.cmd);
  }
  if (self.hasErr) {
    size_ += computeEnumSize(2, self.err);
  }
  if (self.hasBody) {
    size_ += computeDataSize(3, self.body);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FtBookApiRes*) parseFromData:(NSData*) data {
  return (FtBookApiRes*)[[[FtBookApiRes builder] mergeFromData:data] build];
}
+ (FtBookApiRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FtBookApiRes*)[[[FtBookApiRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FtBookApiRes*) parseFromInputStream:(NSInputStream*) input {
  return (FtBookApiRes*)[[[FtBookApiRes builder] mergeFromInputStream:input] build];
}
+ (FtBookApiRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FtBookApiRes*)[[[FtBookApiRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FtBookApiRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FtBookApiRes*)[[[FtBookApiRes builder] mergeFromCodedInputStream:input] build];
}
+ (FtBookApiRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FtBookApiRes*)[[[FtBookApiRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FtBookApiResBuilder*) builder {
  return [[FtBookApiResBuilder alloc] init];
}
+ (FtBookApiResBuilder*) builderWithPrototype:(FtBookApiRes*) prototype {
  return [[FtBookApiRes builder] mergeFrom:prototype];
}
- (FtBookApiResBuilder*) builder {
  return [FtBookApiRes builder];
}
- (FtBookApiResBuilder*) toBuilder {
  return [FtBookApiRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmd", [NSNumber numberWithInteger:self.cmd]];
  }
  if (self.hasErr) {
    [output appendFormat:@"%@%@: %@\n", indent, @"err", NSStringFromErrCode(self.err)];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"body", self.body];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCmd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cmd] forKey: @"cmd"];
  }
  if (self.hasErr) {
    [dictionary setObject: @(self.err) forKey: @"err"];
  }
  if (self.hasBody) {
    [dictionary setObject: self.body forKey: @"body"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FtBookApiRes class]]) {
    return NO;
  }
  FtBookApiRes *otherMessage = other;
  return
      self.hasCmd == otherMessage.hasCmd &&
      (!self.hasCmd || self.cmd == otherMessage.cmd) &&
      self.hasErr == otherMessage.hasErr &&
      (!self.hasErr || self.err == otherMessage.err) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmd] hash];
  }
  if (self.hasErr) {
    hashCode = hashCode * 31 + self.err;
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FtBookApiResBuilder()
@property (strong) FtBookApiRes* resultFtBookApiRes;
@end

@implementation FtBookApiResBuilder
@synthesize resultFtBookApiRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFtBookApiRes = [[FtBookApiRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFtBookApiRes;
}
- (FtBookApiResBuilder*) clear {
  self.resultFtBookApiRes = [[FtBookApiRes alloc] init];
  return self;
}
- (FtBookApiResBuilder*) clone {
  return [FtBookApiRes builderWithPrototype:resultFtBookApiRes];
}
- (FtBookApiRes*) defaultInstance {
  return [FtBookApiRes defaultInstance];
}
- (FtBookApiRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FtBookApiRes*) buildPartial {
  FtBookApiRes* returnMe = resultFtBookApiRes;
  self.resultFtBookApiRes = nil;
  return returnMe;
}
- (FtBookApiResBuilder*) mergeFrom:(FtBookApiRes*) other {
  if (other == [FtBookApiRes defaultInstance]) {
    return self;
  }
  if (other.hasCmd) {
    [self setCmd:other.cmd];
  }
  if (other.hasErr) {
    [self setErr:other.err];
  }
  if (other.hasBody) {
    [self setBody:other.body];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FtBookApiResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FtBookApiResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmd:[input readUInt32]];
        break;
      }
      case 16: {
        ErrCode value = (ErrCode)[input readEnum];
        if (ErrCodeIsValidValue(value)) {
          [self setErr:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setBody:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasCmd {
  return resultFtBookApiRes.hasCmd;
}
- (UInt32) cmd {
  return resultFtBookApiRes.cmd;
}
- (FtBookApiResBuilder*) setCmd:(UInt32) value {
  resultFtBookApiRes.hasCmd = YES;
  resultFtBookApiRes.cmd = value;
  return self;
}
- (FtBookApiResBuilder*) clearCmd {
  resultFtBookApiRes.hasCmd = NO;
  resultFtBookApiRes.cmd = 0;
  return self;
}
- (BOOL) hasErr {
  return resultFtBookApiRes.hasErr;
}
- (ErrCode) err {
  return resultFtBookApiRes.err;
}
- (FtBookApiResBuilder*) setErr:(ErrCode) value {
  resultFtBookApiRes.hasErr = YES;
  resultFtBookApiRes.err = value;
  return self;
}
- (FtBookApiResBuilder*) clearErr {
  resultFtBookApiRes.hasErr = NO;
  resultFtBookApiRes.err = ErrCodeErrNone;
  return self;
}
- (BOOL) hasBody {
  return resultFtBookApiRes.hasBody;
}
- (NSData*) body {
  return resultFtBookApiRes.body;
}
- (FtBookApiResBuilder*) setBody:(NSData*) value {
  resultFtBookApiRes.hasBody = YES;
  resultFtBookApiRes.body = value;
  return self;
}
- (FtBookApiResBuilder*) clearBody {
  resultFtBookApiRes.hasBody = NO;
  resultFtBookApiRes.body = [NSData data];
  return self;
}
@end

@interface FirstBookTypeReq ()
@property GenderType gender;
@end

@implementation FirstBookTypeReq

- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) _value_ {
  hasGender_ = !!_value_;
}
@synthesize gender;
- (instancetype) init {
  if ((self = [super init])) {
    self.gender = GenderTypeGenderUnknown;
  }
  return self;
}
static FirstBookTypeReq* defaultFirstBookTypeReqInstance = nil;
+ (void) initialize {
  if (self == [FirstBookTypeReq class]) {
    defaultFirstBookTypeReqInstance = [[FirstBookTypeReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFirstBookTypeReqInstance;
}
- (instancetype) defaultInstance {
  return defaultFirstBookTypeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGender) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGender) {
    [output writeEnum:1 value:self.gender];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGender) {
    size_ += computeEnumSize(1, self.gender);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FirstBookTypeReq*) parseFromData:(NSData*) data {
  return (FirstBookTypeReq*)[[[FirstBookTypeReq builder] mergeFromData:data] build];
}
+ (FirstBookTypeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookTypeReq*)[[[FirstBookTypeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FirstBookTypeReq*) parseFromInputStream:(NSInputStream*) input {
  return (FirstBookTypeReq*)[[[FirstBookTypeReq builder] mergeFromInputStream:input] build];
}
+ (FirstBookTypeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookTypeReq*)[[[FirstBookTypeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookTypeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FirstBookTypeReq*)[[[FirstBookTypeReq builder] mergeFromCodedInputStream:input] build];
}
+ (FirstBookTypeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookTypeReq*)[[[FirstBookTypeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookTypeReqBuilder*) builder {
  return [[FirstBookTypeReqBuilder alloc] init];
}
+ (FirstBookTypeReqBuilder*) builderWithPrototype:(FirstBookTypeReq*) prototype {
  return [[FirstBookTypeReq builder] mergeFrom:prototype];
}
- (FirstBookTypeReqBuilder*) builder {
  return [FirstBookTypeReq builder];
}
- (FirstBookTypeReqBuilder*) toBuilder {
  return [FirstBookTypeReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", NSStringFromGenderType(self.gender)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGender) {
    [dictionary setObject: @(self.gender) forKey: @"gender"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FirstBookTypeReq class]]) {
    return NO;
  }
  FirstBookTypeReq *otherMessage = other;
  return
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || self.gender == otherMessage.gender) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGender) {
    hashCode = hashCode * 31 + self.gender;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FirstBookTypeReqBuilder()
@property (strong) FirstBookTypeReq* resultFirstBookTypeReq;
@end

@implementation FirstBookTypeReqBuilder
@synthesize resultFirstBookTypeReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFirstBookTypeReq = [[FirstBookTypeReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFirstBookTypeReq;
}
- (FirstBookTypeReqBuilder*) clear {
  self.resultFirstBookTypeReq = [[FirstBookTypeReq alloc] init];
  return self;
}
- (FirstBookTypeReqBuilder*) clone {
  return [FirstBookTypeReq builderWithPrototype:resultFirstBookTypeReq];
}
- (FirstBookTypeReq*) defaultInstance {
  return [FirstBookTypeReq defaultInstance];
}
- (FirstBookTypeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FirstBookTypeReq*) buildPartial {
  FirstBookTypeReq* returnMe = resultFirstBookTypeReq;
  self.resultFirstBookTypeReq = nil;
  return returnMe;
}
- (FirstBookTypeReqBuilder*) mergeFrom:(FirstBookTypeReq*) other {
  if (other == [FirstBookTypeReq defaultInstance]) {
    return self;
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FirstBookTypeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FirstBookTypeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        GenderType value = (GenderType)[input readEnum];
        if (GenderTypeIsValidValue(value)) {
          [self setGender:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasGender {
  return resultFirstBookTypeReq.hasGender;
}
- (GenderType) gender {
  return resultFirstBookTypeReq.gender;
}
- (FirstBookTypeReqBuilder*) setGender:(GenderType) value {
  resultFirstBookTypeReq.hasGender = YES;
  resultFirstBookTypeReq.gender = value;
  return self;
}
- (FirstBookTypeReqBuilder*) clearGender {
  resultFirstBookTypeReq.hasGender = NO;
  resultFirstBookTypeReq.gender = GenderTypeGenderUnknown;
  return self;
}
@end

@interface FirstBookTypeRes ()
@property (strong) NSMutableArray * bookTypeArray;
@end

@implementation FirstBookTypeRes

@synthesize bookTypeArray;
@dynamic bookType;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static FirstBookTypeRes* defaultFirstBookTypeResInstance = nil;
+ (void) initialize {
  if (self == [FirstBookTypeRes class]) {
    defaultFirstBookTypeResInstance = [[FirstBookTypeRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFirstBookTypeResInstance;
}
- (instancetype) defaultInstance {
  return defaultFirstBookTypeResInstance;
}
- (NSArray *)bookType {
  return bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [bookTypeArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.bookTypeArray.count;
    [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FirstBookTypeRes*) parseFromData:(NSData*) data {
  return (FirstBookTypeRes*)[[[FirstBookTypeRes builder] mergeFromData:data] build];
}
+ (FirstBookTypeRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookTypeRes*)[[[FirstBookTypeRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FirstBookTypeRes*) parseFromInputStream:(NSInputStream*) input {
  return (FirstBookTypeRes*)[[[FirstBookTypeRes builder] mergeFromInputStream:input] build];
}
+ (FirstBookTypeRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookTypeRes*)[[[FirstBookTypeRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookTypeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FirstBookTypeRes*)[[[FirstBookTypeRes builder] mergeFromCodedInputStream:input] build];
}
+ (FirstBookTypeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookTypeRes*)[[[FirstBookTypeRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookTypeResBuilder*) builder {
  return [[FirstBookTypeResBuilder alloc] init];
}
+ (FirstBookTypeResBuilder*) builderWithPrototype:(FirstBookTypeRes*) prototype {
  return [[FirstBookTypeRes builder] mergeFrom:prototype];
}
- (FirstBookTypeResBuilder*) builder {
  return [FirstBookTypeRes builder];
}
- (FirstBookTypeResBuilder*) toBuilder {
  return [FirstBookTypeRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.bookTypeArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookType", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [dictionary setObject:self.bookType forKey: @"bookType"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FirstBookTypeRes class]]) {
    return NO;
  }
  FirstBookTypeRes *otherMessage = other;
  return
      [self.bookTypeArray isEqualToArray:otherMessage.bookTypeArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FirstBookTypeResBuilder()
@property (strong) FirstBookTypeRes* resultFirstBookTypeRes;
@end

@implementation FirstBookTypeResBuilder
@synthesize resultFirstBookTypeRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFirstBookTypeRes = [[FirstBookTypeRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFirstBookTypeRes;
}
- (FirstBookTypeResBuilder*) clear {
  self.resultFirstBookTypeRes = [[FirstBookTypeRes alloc] init];
  return self;
}
- (FirstBookTypeResBuilder*) clone {
  return [FirstBookTypeRes builderWithPrototype:resultFirstBookTypeRes];
}
- (FirstBookTypeRes*) defaultInstance {
  return [FirstBookTypeRes defaultInstance];
}
- (FirstBookTypeRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FirstBookTypeRes*) buildPartial {
  FirstBookTypeRes* returnMe = resultFirstBookTypeRes;
  self.resultFirstBookTypeRes = nil;
  return returnMe;
}
- (FirstBookTypeResBuilder*) mergeFrom:(FirstBookTypeRes*) other {
  if (other == [FirstBookTypeRes defaultInstance]) {
    return self;
  }
  if (other.bookTypeArray.count > 0) {
    if (resultFirstBookTypeRes.bookTypeArray == nil) {
      resultFirstBookTypeRes.bookTypeArray = [[NSMutableArray alloc] initWithArray:other.bookTypeArray];
    } else {
      [resultFirstBookTypeRes.bookTypeArray addObjectsFromArray:other.bookTypeArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FirstBookTypeResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FirstBookTypeResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addBookType:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)bookType {
  return resultFirstBookTypeRes.bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [resultFirstBookTypeRes bookTypeAtIndex:index];
}
- (FirstBookTypeResBuilder *)addBookType:(NSString*)value {
  if (resultFirstBookTypeRes.bookTypeArray == nil) {
    resultFirstBookTypeRes.bookTypeArray = [[NSMutableArray alloc]init];
  }
  [resultFirstBookTypeRes.bookTypeArray addObject:value];
  return self;
}
- (FirstBookTypeResBuilder *)setBookTypeArray:(NSArray *)array {
  resultFirstBookTypeRes.bookTypeArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (FirstBookTypeResBuilder *)clearBookType {
  resultFirstBookTypeRes.bookTypeArray = nil;
  return self;
}
@end

@interface FirstBookReq ()
@property GenderType gender;
@property (strong) NSMutableArray * bookTypeArray;
@end

@implementation FirstBookReq

- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) _value_ {
  hasGender_ = !!_value_;
}
@synthesize gender;
@synthesize bookTypeArray;
@dynamic bookType;
- (instancetype) init {
  if ((self = [super init])) {
    self.gender = GenderTypeGenderUnknown;
  }
  return self;
}
static FirstBookReq* defaultFirstBookReqInstance = nil;
+ (void) initialize {
  if (self == [FirstBookReq class]) {
    defaultFirstBookReqInstance = [[FirstBookReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFirstBookReqInstance;
}
- (instancetype) defaultInstance {
  return defaultFirstBookReqInstance;
}
- (NSArray *)bookType {
  return bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [bookTypeArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGender) {
    [output writeEnum:1 value:self.gender];
  }
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGender) {
    size_ += computeEnumSize(1, self.gender);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.bookTypeArray.count;
    [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FirstBookReq*) parseFromData:(NSData*) data {
  return (FirstBookReq*)[[[FirstBookReq builder] mergeFromData:data] build];
}
+ (FirstBookReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookReq*)[[[FirstBookReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FirstBookReq*) parseFromInputStream:(NSInputStream*) input {
  return (FirstBookReq*)[[[FirstBookReq builder] mergeFromInputStream:input] build];
}
+ (FirstBookReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookReq*)[[[FirstBookReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FirstBookReq*)[[[FirstBookReq builder] mergeFromCodedInputStream:input] build];
}
+ (FirstBookReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookReq*)[[[FirstBookReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookReqBuilder*) builder {
  return [[FirstBookReqBuilder alloc] init];
}
+ (FirstBookReqBuilder*) builderWithPrototype:(FirstBookReq*) prototype {
  return [[FirstBookReq builder] mergeFrom:prototype];
}
- (FirstBookReqBuilder*) builder {
  return [FirstBookReq builder];
}
- (FirstBookReqBuilder*) toBuilder {
  return [FirstBookReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", NSStringFromGenderType(self.gender)];
  }
  [self.bookTypeArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookType", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGender) {
    [dictionary setObject: @(self.gender) forKey: @"gender"];
  }
  [dictionary setObject:self.bookType forKey: @"bookType"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FirstBookReq class]]) {
    return NO;
  }
  FirstBookReq *otherMessage = other;
  return
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || self.gender == otherMessage.gender) &&
      [self.bookTypeArray isEqualToArray:otherMessage.bookTypeArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGender) {
    hashCode = hashCode * 31 + self.gender;
  }
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FirstBookReqBuilder()
@property (strong) FirstBookReq* resultFirstBookReq;
@end

@implementation FirstBookReqBuilder
@synthesize resultFirstBookReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFirstBookReq = [[FirstBookReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFirstBookReq;
}
- (FirstBookReqBuilder*) clear {
  self.resultFirstBookReq = [[FirstBookReq alloc] init];
  return self;
}
- (FirstBookReqBuilder*) clone {
  return [FirstBookReq builderWithPrototype:resultFirstBookReq];
}
- (FirstBookReq*) defaultInstance {
  return [FirstBookReq defaultInstance];
}
- (FirstBookReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FirstBookReq*) buildPartial {
  FirstBookReq* returnMe = resultFirstBookReq;
  self.resultFirstBookReq = nil;
  return returnMe;
}
- (FirstBookReqBuilder*) mergeFrom:(FirstBookReq*) other {
  if (other == [FirstBookReq defaultInstance]) {
    return self;
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.bookTypeArray.count > 0) {
    if (resultFirstBookReq.bookTypeArray == nil) {
      resultFirstBookReq.bookTypeArray = [[NSMutableArray alloc] initWithArray:other.bookTypeArray];
    } else {
      [resultFirstBookReq.bookTypeArray addObjectsFromArray:other.bookTypeArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FirstBookReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FirstBookReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        GenderType value = (GenderType)[input readEnum];
        if (GenderTypeIsValidValue(value)) {
          [self setGender:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self addBookType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGender {
  return resultFirstBookReq.hasGender;
}
- (GenderType) gender {
  return resultFirstBookReq.gender;
}
- (FirstBookReqBuilder*) setGender:(GenderType) value {
  resultFirstBookReq.hasGender = YES;
  resultFirstBookReq.gender = value;
  return self;
}
- (FirstBookReqBuilder*) clearGender {
  resultFirstBookReq.hasGender = NO;
  resultFirstBookReq.gender = GenderTypeGenderUnknown;
  return self;
}
- (NSMutableArray *)bookType {
  return resultFirstBookReq.bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [resultFirstBookReq bookTypeAtIndex:index];
}
- (FirstBookReqBuilder *)addBookType:(NSString*)value {
  if (resultFirstBookReq.bookTypeArray == nil) {
    resultFirstBookReq.bookTypeArray = [[NSMutableArray alloc]init];
  }
  [resultFirstBookReq.bookTypeArray addObject:value];
  return self;
}
- (FirstBookReqBuilder *)setBookTypeArray:(NSArray *)array {
  resultFirstBookReq.bookTypeArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (FirstBookReqBuilder *)clearBookType {
  resultFirstBookReq.bookTypeArray = nil;
  return self;
}
@end

@interface FirstBookRes ()
@property (strong) NSMutableArray<Book*> * booksArray;
@end

@implementation FirstBookRes

@synthesize booksArray;
@dynamic books;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static FirstBookRes* defaultFirstBookResInstance = nil;
+ (void) initialize {
  if (self == [FirstBookRes class]) {
    defaultFirstBookResInstance = [[FirstBookRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFirstBookResInstance;
}
- (instancetype) defaultInstance {
  return defaultFirstBookResInstance;
}
- (NSArray<Book*> *)books {
  return booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [booksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitbooks = YES;
   [self.books enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitbooks) return isInitbooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FirstBookRes*) parseFromData:(NSData*) data {
  return (FirstBookRes*)[[[FirstBookRes builder] mergeFromData:data] build];
}
+ (FirstBookRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookRes*)[[[FirstBookRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FirstBookRes*) parseFromInputStream:(NSInputStream*) input {
  return (FirstBookRes*)[[[FirstBookRes builder] mergeFromInputStream:input] build];
}
+ (FirstBookRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookRes*)[[[FirstBookRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FirstBookRes*)[[[FirstBookRes builder] mergeFromCodedInputStream:input] build];
}
+ (FirstBookRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FirstBookRes*)[[[FirstBookRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FirstBookResBuilder*) builder {
  return [[FirstBookResBuilder alloc] init];
}
+ (FirstBookResBuilder*) builderWithPrototype:(FirstBookRes*) prototype {
  return [[FirstBookRes builder] mergeFrom:prototype];
}
- (FirstBookResBuilder*) builder {
  return [FirstBookRes builder];
}
- (FirstBookResBuilder*) toBuilder {
  return [FirstBookRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"books"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Book* element in self.booksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"books"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FirstBookRes class]]) {
    return NO;
  }
  FirstBookRes *otherMessage = other;
  return
      [self.booksArray isEqualToArray:otherMessage.booksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FirstBookResBuilder()
@property (strong) FirstBookRes* resultFirstBookRes;
@end

@implementation FirstBookResBuilder
@synthesize resultFirstBookRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFirstBookRes = [[FirstBookRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFirstBookRes;
}
- (FirstBookResBuilder*) clear {
  self.resultFirstBookRes = [[FirstBookRes alloc] init];
  return self;
}
- (FirstBookResBuilder*) clone {
  return [FirstBookRes builderWithPrototype:resultFirstBookRes];
}
- (FirstBookRes*) defaultInstance {
  return [FirstBookRes defaultInstance];
}
- (FirstBookRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FirstBookRes*) buildPartial {
  FirstBookRes* returnMe = resultFirstBookRes;
  self.resultFirstBookRes = nil;
  return returnMe;
}
- (FirstBookResBuilder*) mergeFrom:(FirstBookRes*) other {
  if (other == [FirstBookRes defaultInstance]) {
    return self;
  }
  if (other.booksArray.count > 0) {
    if (resultFirstBookRes.booksArray == nil) {
      resultFirstBookRes.booksArray = [[NSMutableArray alloc] initWithArray:other.booksArray];
    } else {
      [resultFirstBookRes.booksArray addObjectsFromArray:other.booksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FirstBookResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FirstBookResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBooks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray<Book*> *)books {
  return resultFirstBookRes.booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [resultFirstBookRes booksAtIndex:index];
}
- (FirstBookResBuilder *)addBooks:(Book*)value {
  if (resultFirstBookRes.booksArray == nil) {
    resultFirstBookRes.booksArray = [[NSMutableArray alloc]init];
  }
  [resultFirstBookRes.booksArray addObject:value];
  return self;
}
- (FirstBookResBuilder *)setBooksArray:(NSArray<Book*> *)array {
  resultFirstBookRes.booksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (FirstBookResBuilder *)clearBooks {
  resultFirstBookRes.booksArray = nil;
  return self;
}
@end

@interface UserBookStoreReq ()
@property UInt32 page;
@end

@implementation UserBookStoreReq

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static UserBookStoreReq* defaultUserBookStoreReqInstance = nil;
+ (void) initialize {
  if (self == [UserBookStoreReq class]) {
    defaultUserBookStoreReqInstance = [[UserBookStoreReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultUserBookStoreReqInstance;
}
- (instancetype) defaultInstance {
  return defaultUserBookStoreReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeUInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeUInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserBookStoreReq*) parseFromData:(NSData*) data {
  return (UserBookStoreReq*)[[[UserBookStoreReq builder] mergeFromData:data] build];
}
+ (UserBookStoreReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreReq*)[[[UserBookStoreReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserBookStoreReq*)[[[UserBookStoreReq builder] mergeFromInputStream:input] build];
}
+ (UserBookStoreReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreReq*)[[[UserBookStoreReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserBookStoreReq*)[[[UserBookStoreReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserBookStoreReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreReq*)[[[UserBookStoreReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreReqBuilder*) builder {
  return [[UserBookStoreReqBuilder alloc] init];
}
+ (UserBookStoreReqBuilder*) builderWithPrototype:(UserBookStoreReq*) prototype {
  return [[UserBookStoreReq builder] mergeFrom:prototype];
}
- (UserBookStoreReqBuilder*) builder {
  return [UserBookStoreReq builder];
}
- (UserBookStoreReqBuilder*) toBuilder {
  return [UserBookStoreReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserBookStoreReq class]]) {
    return NO;
  }
  UserBookStoreReq *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserBookStoreReqBuilder()
@property (strong) UserBookStoreReq* resultUserBookStoreReq;
@end

@implementation UserBookStoreReqBuilder
@synthesize resultUserBookStoreReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserBookStoreReq = [[UserBookStoreReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserBookStoreReq;
}
- (UserBookStoreReqBuilder*) clear {
  self.resultUserBookStoreReq = [[UserBookStoreReq alloc] init];
  return self;
}
- (UserBookStoreReqBuilder*) clone {
  return [UserBookStoreReq builderWithPrototype:resultUserBookStoreReq];
}
- (UserBookStoreReq*) defaultInstance {
  return [UserBookStoreReq defaultInstance];
}
- (UserBookStoreReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserBookStoreReq*) buildPartial {
  UserBookStoreReq* returnMe = resultUserBookStoreReq;
  self.resultUserBookStoreReq = nil;
  return returnMe;
}
- (UserBookStoreReqBuilder*) mergeFrom:(UserBookStoreReq*) other {
  if (other == [UserBookStoreReq defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserBookStoreReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserBookStoreReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultUserBookStoreReq.hasPage;
}
- (UInt32) page {
  return resultUserBookStoreReq.page;
}
- (UserBookStoreReqBuilder*) setPage:(UInt32) value {
  resultUserBookStoreReq.hasPage = YES;
  resultUserBookStoreReq.page = value;
  return self;
}
- (UserBookStoreReqBuilder*) clearPage {
  resultUserBookStoreReq.hasPage = NO;
  resultUserBookStoreReq.page = 0;
  return self;
}
@end

@interface UserBook ()
@property (strong) Book* book;
@property UInt32 isTop;
@end

@implementation UserBook

- (BOOL) hasBook {
  return !!hasBook_;
}
- (void) setHasBook:(BOOL) _value_ {
  hasBook_ = !!_value_;
}
@synthesize book;
- (BOOL) hasIsTop {
  return !!hasIsTop_;
}
- (void) setHasIsTop:(BOOL) _value_ {
  hasIsTop_ = !!_value_;
}
@synthesize isTop;
- (instancetype) init {
  if ((self = [super init])) {
    self.book = [Book defaultInstance];
    self.isTop = 0;
  }
  return self;
}
static UserBook* defaultUserBookInstance = nil;
+ (void) initialize {
  if (self == [UserBook class]) {
    defaultUserBookInstance = [[UserBook alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultUserBookInstance;
}
- (instancetype) defaultInstance {
  return defaultUserBookInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBook) {
    return NO;
  }
  if (!self.hasIsTop) {
    return NO;
  }
  if (!self.book.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBook) {
    [output writeMessage:1 value:self.book];
  }
  if (self.hasIsTop) {
    [output writeUInt32:2 value:self.isTop];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBook) {
    size_ += computeMessageSize(1, self.book);
  }
  if (self.hasIsTop) {
    size_ += computeUInt32Size(2, self.isTop);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserBook*) parseFromData:(NSData*) data {
  return (UserBook*)[[[UserBook builder] mergeFromData:data] build];
}
+ (UserBook*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBook*)[[[UserBook builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserBook*) parseFromInputStream:(NSInputStream*) input {
  return (UserBook*)[[[UserBook builder] mergeFromInputStream:input] build];
}
+ (UserBook*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBook*)[[[UserBook builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBook*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserBook*)[[[UserBook builder] mergeFromCodedInputStream:input] build];
}
+ (UserBook*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBook*)[[[UserBook builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookBuilder*) builder {
  return [[UserBookBuilder alloc] init];
}
+ (UserBookBuilder*) builderWithPrototype:(UserBook*) prototype {
  return [[UserBook builder] mergeFrom:prototype];
}
- (UserBookBuilder*) builder {
  return [UserBook builder];
}
- (UserBookBuilder*) toBuilder {
  return [UserBook builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBook) {
    [output appendFormat:@"%@%@ {\n", indent, @"book"];
    [self.book writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasIsTop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isTop", [NSNumber numberWithInteger:self.isTop]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBook) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.book storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"book"];
  }
  if (self.hasIsTop) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isTop] forKey: @"isTop"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserBook class]]) {
    return NO;
  }
  UserBook *otherMessage = other;
  return
      self.hasBook == otherMessage.hasBook &&
      (!self.hasBook || [self.book isEqual:otherMessage.book]) &&
      self.hasIsTop == otherMessage.hasIsTop &&
      (!self.hasIsTop || self.isTop == otherMessage.isTop) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBook) {
    hashCode = hashCode * 31 + [self.book hash];
  }
  if (self.hasIsTop) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isTop] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserBookBuilder()
@property (strong) UserBook* resultUserBook;
@end

@implementation UserBookBuilder
@synthesize resultUserBook;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserBook = [[UserBook alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserBook;
}
- (UserBookBuilder*) clear {
  self.resultUserBook = [[UserBook alloc] init];
  return self;
}
- (UserBookBuilder*) clone {
  return [UserBook builderWithPrototype:resultUserBook];
}
- (UserBook*) defaultInstance {
  return [UserBook defaultInstance];
}
- (UserBook*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserBook*) buildPartial {
  UserBook* returnMe = resultUserBook;
  self.resultUserBook = nil;
  return returnMe;
}
- (UserBookBuilder*) mergeFrom:(UserBook*) other {
  if (other == [UserBook defaultInstance]) {
    return self;
  }
  if (other.hasBook) {
    [self mergeBook:other.book];
  }
  if (other.hasIsTop) {
    [self setIsTop:other.isTop];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserBookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserBookBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BookBuilder* subBuilder = [Book builder];
        if (self.hasBook) {
          [subBuilder mergeFrom:self.book];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBook:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setIsTop:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBook {
  return resultUserBook.hasBook;
}
- (Book*) book {
  return resultUserBook.book;
}
- (UserBookBuilder*) setBook:(Book*) value {
  resultUserBook.hasBook = YES;
  resultUserBook.book = value;
  return self;
}
- (UserBookBuilder*) setBookBuilder:(BookBuilder*) builderForValue {
  return [self setBook:[builderForValue build]];
}
- (UserBookBuilder*) mergeBook:(Book*) value {
  if (resultUserBook.hasBook &&
      resultUserBook.book != [Book defaultInstance]) {
    resultUserBook.book =
      [[[Book builderWithPrototype:resultUserBook.book] mergeFrom:value] buildPartial];
  } else {
    resultUserBook.book = value;
  }
  resultUserBook.hasBook = YES;
  return self;
}
- (UserBookBuilder*) clearBook {
  resultUserBook.hasBook = NO;
  resultUserBook.book = [Book defaultInstance];
  return self;
}
- (BOOL) hasIsTop {
  return resultUserBook.hasIsTop;
}
- (UInt32) isTop {
  return resultUserBook.isTop;
}
- (UserBookBuilder*) setIsTop:(UInt32) value {
  resultUserBook.hasIsTop = YES;
  resultUserBook.isTop = value;
  return self;
}
- (UserBookBuilder*) clearIsTop {
  resultUserBook.hasIsTop = NO;
  resultUserBook.isTop = 0;
  return self;
}
@end

@interface UserBookStoreRes ()
@property UInt32 psize;
@property UInt32 page;
@property (strong) NSMutableArray<UserBook*> * userBooksArray;
@end

@implementation UserBookStoreRes

- (BOOL) hasPsize {
  return !!hasPsize_;
}
- (void) setHasPsize:(BOOL) _value_ {
  hasPsize_ = !!_value_;
}
@synthesize psize;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
@synthesize userBooksArray;
@dynamic userBooks;
- (instancetype) init {
  if ((self = [super init])) {
    self.psize = 0;
    self.page = 0;
  }
  return self;
}
static UserBookStoreRes* defaultUserBookStoreResInstance = nil;
+ (void) initialize {
  if (self == [UserBookStoreRes class]) {
    defaultUserBookStoreResInstance = [[UserBookStoreRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultUserBookStoreResInstance;
}
- (instancetype) defaultInstance {
  return defaultUserBookStoreResInstance;
}
- (NSArray<UserBook*> *)userBooks {
  return userBooksArray;
}
- (UserBook*)userBooksAtIndex:(NSUInteger)index {
  return [userBooksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPsize) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  __block BOOL isInituserBooks = YES;
   [self.userBooks enumerateObjectsUsingBlock:^(UserBook *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserBooks = NO;
      *stop = YES;
    }
  }];
  if (!isInituserBooks) return isInituserBooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPsize) {
    [output writeUInt32:1 value:self.psize];
  }
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  [self.userBooksArray enumerateObjectsUsingBlock:^(UserBook *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPsize) {
    size_ += computeUInt32Size(1, self.psize);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  [self.userBooksArray enumerateObjectsUsingBlock:^(UserBook *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserBookStoreRes*) parseFromData:(NSData*) data {
  return (UserBookStoreRes*)[[[UserBookStoreRes builder] mergeFromData:data] build];
}
+ (UserBookStoreRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreRes*)[[[UserBookStoreRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreRes*) parseFromInputStream:(NSInputStream*) input {
  return (UserBookStoreRes*)[[[UserBookStoreRes builder] mergeFromInputStream:input] build];
}
+ (UserBookStoreRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreRes*)[[[UserBookStoreRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserBookStoreRes*)[[[UserBookStoreRes builder] mergeFromCodedInputStream:input] build];
}
+ (UserBookStoreRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreRes*)[[[UserBookStoreRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreResBuilder*) builder {
  return [[UserBookStoreResBuilder alloc] init];
}
+ (UserBookStoreResBuilder*) builderWithPrototype:(UserBookStoreRes*) prototype {
  return [[UserBookStoreRes builder] mergeFrom:prototype];
}
- (UserBookStoreResBuilder*) builder {
  return [UserBookStoreRes builder];
}
- (UserBookStoreResBuilder*) toBuilder {
  return [UserBookStoreRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPsize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"psize", [NSNumber numberWithInteger:self.psize]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.userBooksArray enumerateObjectsUsingBlock:^(UserBook *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userBooks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPsize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.psize] forKey: @"psize"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  for (UserBook* element in self.userBooksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userBooks"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserBookStoreRes class]]) {
    return NO;
  }
  UserBookStoreRes *otherMessage = other;
  return
      self.hasPsize == otherMessage.hasPsize &&
      (!self.hasPsize || self.psize == otherMessage.psize) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.userBooksArray isEqualToArray:otherMessage.userBooksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPsize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.psize] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  [self.userBooksArray enumerateObjectsUsingBlock:^(UserBook *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserBookStoreResBuilder()
@property (strong) UserBookStoreRes* resultUserBookStoreRes;
@end

@implementation UserBookStoreResBuilder
@synthesize resultUserBookStoreRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserBookStoreRes = [[UserBookStoreRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserBookStoreRes;
}
- (UserBookStoreResBuilder*) clear {
  self.resultUserBookStoreRes = [[UserBookStoreRes alloc] init];
  return self;
}
- (UserBookStoreResBuilder*) clone {
  return [UserBookStoreRes builderWithPrototype:resultUserBookStoreRes];
}
- (UserBookStoreRes*) defaultInstance {
  return [UserBookStoreRes defaultInstance];
}
- (UserBookStoreRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserBookStoreRes*) buildPartial {
  UserBookStoreRes* returnMe = resultUserBookStoreRes;
  self.resultUserBookStoreRes = nil;
  return returnMe;
}
- (UserBookStoreResBuilder*) mergeFrom:(UserBookStoreRes*) other {
  if (other == [UserBookStoreRes defaultInstance]) {
    return self;
  }
  if (other.hasPsize) {
    [self setPsize:other.psize];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.userBooksArray.count > 0) {
    if (resultUserBookStoreRes.userBooksArray == nil) {
      resultUserBookStoreRes.userBooksArray = [[NSMutableArray alloc] initWithArray:other.userBooksArray];
    } else {
      [resultUserBookStoreRes.userBooksArray addObjectsFromArray:other.userBooksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserBookStoreResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserBookStoreResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPsize:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
      case 26: {
        UserBookBuilder* subBuilder = [UserBook builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserBooks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPsize {
  return resultUserBookStoreRes.hasPsize;
}
- (UInt32) psize {
  return resultUserBookStoreRes.psize;
}
- (UserBookStoreResBuilder*) setPsize:(UInt32) value {
  resultUserBookStoreRes.hasPsize = YES;
  resultUserBookStoreRes.psize = value;
  return self;
}
- (UserBookStoreResBuilder*) clearPsize {
  resultUserBookStoreRes.hasPsize = NO;
  resultUserBookStoreRes.psize = 0;
  return self;
}
- (BOOL) hasPage {
  return resultUserBookStoreRes.hasPage;
}
- (UInt32) page {
  return resultUserBookStoreRes.page;
}
- (UserBookStoreResBuilder*) setPage:(UInt32) value {
  resultUserBookStoreRes.hasPage = YES;
  resultUserBookStoreRes.page = value;
  return self;
}
- (UserBookStoreResBuilder*) clearPage {
  resultUserBookStoreRes.hasPage = NO;
  resultUserBookStoreRes.page = 0;
  return self;
}
- (NSMutableArray<UserBook*> *)userBooks {
  return resultUserBookStoreRes.userBooksArray;
}
- (UserBook*)userBooksAtIndex:(NSUInteger)index {
  return [resultUserBookStoreRes userBooksAtIndex:index];
}
- (UserBookStoreResBuilder *)addUserBooks:(UserBook*)value {
  if (resultUserBookStoreRes.userBooksArray == nil) {
    resultUserBookStoreRes.userBooksArray = [[NSMutableArray alloc]init];
  }
  [resultUserBookStoreRes.userBooksArray addObject:value];
  return self;
}
- (UserBookStoreResBuilder *)setUserBooksArray:(NSArray<UserBook*> *)array {
  resultUserBookStoreRes.userBooksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (UserBookStoreResBuilder *)clearUserBooks {
  resultUserBookStoreRes.userBooksArray = nil;
  return self;
}
@end

@interface UserBookStoreOperateReq ()
@property UserBookStoreOperateType type;
@property UInt32 bookId;
@end

@implementation UserBookStoreOperateReq

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = UserBookStoreOperateTypeOperateAdd;
    self.bookId = 0;
  }
  return self;
}
static UserBookStoreOperateReq* defaultUserBookStoreOperateReqInstance = nil;
+ (void) initialize {
  if (self == [UserBookStoreOperateReq class]) {
    defaultUserBookStoreOperateReqInstance = [[UserBookStoreOperateReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultUserBookStoreOperateReqInstance;
}
- (instancetype) defaultInstance {
  return defaultUserBookStoreOperateReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasBookId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasBookId) {
    [output writeUInt32:2 value:self.bookId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasBookId) {
    size_ += computeUInt32Size(2, self.bookId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserBookStoreOperateReq*) parseFromData:(NSData*) data {
  return (UserBookStoreOperateReq*)[[[UserBookStoreOperateReq builder] mergeFromData:data] build];
}
+ (UserBookStoreOperateReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreOperateReq*)[[[UserBookStoreOperateReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreOperateReq*) parseFromInputStream:(NSInputStream*) input {
  return (UserBookStoreOperateReq*)[[[UserBookStoreOperateReq builder] mergeFromInputStream:input] build];
}
+ (UserBookStoreOperateReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreOperateReq*)[[[UserBookStoreOperateReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreOperateReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserBookStoreOperateReq*)[[[UserBookStoreOperateReq builder] mergeFromCodedInputStream:input] build];
}
+ (UserBookStoreOperateReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserBookStoreOperateReq*)[[[UserBookStoreOperateReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserBookStoreOperateReqBuilder*) builder {
  return [[UserBookStoreOperateReqBuilder alloc] init];
}
+ (UserBookStoreOperateReqBuilder*) builderWithPrototype:(UserBookStoreOperateReq*) prototype {
  return [[UserBookStoreOperateReq builder] mergeFrom:prototype];
}
- (UserBookStoreOperateReqBuilder*) builder {
  return [UserBookStoreOperateReq builder];
}
- (UserBookStoreOperateReqBuilder*) toBuilder {
  return [UserBookStoreOperateReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromUserBookStoreOperateType(self.type)];
  }
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", [NSNumber numberWithInteger:self.bookId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasBookId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookId] forKey: @"bookId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserBookStoreOperateReq class]]) {
    return NO;
  }
  UserBookStoreOperateReq *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || self.bookId == otherMessage.bookId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserBookStoreOperateReqBuilder()
@property (strong) UserBookStoreOperateReq* resultUserBookStoreOperateReq;
@end

@implementation UserBookStoreOperateReqBuilder
@synthesize resultUserBookStoreOperateReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserBookStoreOperateReq = [[UserBookStoreOperateReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserBookStoreOperateReq;
}
- (UserBookStoreOperateReqBuilder*) clear {
  self.resultUserBookStoreOperateReq = [[UserBookStoreOperateReq alloc] init];
  return self;
}
- (UserBookStoreOperateReqBuilder*) clone {
  return [UserBookStoreOperateReq builderWithPrototype:resultUserBookStoreOperateReq];
}
- (UserBookStoreOperateReq*) defaultInstance {
  return [UserBookStoreOperateReq defaultInstance];
}
- (UserBookStoreOperateReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserBookStoreOperateReq*) buildPartial {
  UserBookStoreOperateReq* returnMe = resultUserBookStoreOperateReq;
  self.resultUserBookStoreOperateReq = nil;
  return returnMe;
}
- (UserBookStoreOperateReqBuilder*) mergeFrom:(UserBookStoreOperateReq*) other {
  if (other == [UserBookStoreOperateReq defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserBookStoreOperateReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserBookStoreOperateReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        UserBookStoreOperateType value = (UserBookStoreOperateType)[input readEnum];
        if (UserBookStoreOperateTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setBookId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultUserBookStoreOperateReq.hasType;
}
- (UserBookStoreOperateType) type {
  return resultUserBookStoreOperateReq.type;
}
- (UserBookStoreOperateReqBuilder*) setType:(UserBookStoreOperateType) value {
  resultUserBookStoreOperateReq.hasType = YES;
  resultUserBookStoreOperateReq.type = value;
  return self;
}
- (UserBookStoreOperateReqBuilder*) clearType {
  resultUserBookStoreOperateReq.hasType = NO;
  resultUserBookStoreOperateReq.type = UserBookStoreOperateTypeOperateAdd;
  return self;
}
- (BOOL) hasBookId {
  return resultUserBookStoreOperateReq.hasBookId;
}
- (UInt32) bookId {
  return resultUserBookStoreOperateReq.bookId;
}
- (UserBookStoreOperateReqBuilder*) setBookId:(UInt32) value {
  resultUserBookStoreOperateReq.hasBookId = YES;
  resultUserBookStoreOperateReq.bookId = value;
  return self;
}
- (UserBookStoreOperateReqBuilder*) clearBookId {
  resultUserBookStoreOperateReq.hasBookId = NO;
  resultUserBookStoreOperateReq.bookId = 0;
  return self;
}
@end

@interface BookStoreReq ()
@property (strong) NSMutableArray * bookTypeArray;
@property UInt32 page;
@property UInt32 isFinished;
@property UInt32 isNew;
@end

@implementation BookStoreReq

@synthesize bookTypeArray;
@dynamic bookType;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (BOOL) hasIsFinished {
  return !!hasIsFinished_;
}
- (void) setHasIsFinished:(BOOL) _value_ {
  hasIsFinished_ = !!_value_;
}
@synthesize isFinished;
- (BOOL) hasIsNew {
  return !!hasIsNew_;
}
- (void) setHasIsNew:(BOOL) _value_ {
  hasIsNew_ = !!_value_;
}
@synthesize isNew;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
    self.isFinished = 0;
    self.isNew = 0;
  }
  return self;
}
static BookStoreReq* defaultBookStoreReqInstance = nil;
+ (void) initialize {
  if (self == [BookStoreReq class]) {
    defaultBookStoreReqInstance = [[BookStoreReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookStoreReqInstance;
}
- (instancetype) defaultInstance {
  return defaultBookStoreReqInstance;
}
- (NSArray *)bookType {
  return bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [bookTypeArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  if (self.hasIsFinished) {
    [output writeUInt32:3 value:self.isFinished];
  }
  if (self.hasIsNew) {
    [output writeUInt32:4 value:self.isNew];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.bookTypeArray.count;
    [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  if (self.hasIsFinished) {
    size_ += computeUInt32Size(3, self.isFinished);
  }
  if (self.hasIsNew) {
    size_ += computeUInt32Size(4, self.isNew);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookStoreReq*) parseFromData:(NSData*) data {
  return (BookStoreReq*)[[[BookStoreReq builder] mergeFromData:data] build];
}
+ (BookStoreReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookStoreReq*)[[[BookStoreReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookStoreReq*) parseFromInputStream:(NSInputStream*) input {
  return (BookStoreReq*)[[[BookStoreReq builder] mergeFromInputStream:input] build];
}
+ (BookStoreReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookStoreReq*)[[[BookStoreReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookStoreReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookStoreReq*)[[[BookStoreReq builder] mergeFromCodedInputStream:input] build];
}
+ (BookStoreReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookStoreReq*)[[[BookStoreReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookStoreReqBuilder*) builder {
  return [[BookStoreReqBuilder alloc] init];
}
+ (BookStoreReqBuilder*) builderWithPrototype:(BookStoreReq*) prototype {
  return [[BookStoreReq builder] mergeFrom:prototype];
}
- (BookStoreReqBuilder*) builder {
  return [BookStoreReq builder];
}
- (BookStoreReqBuilder*) toBuilder {
  return [BookStoreReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.bookTypeArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookType", obj];
  }];
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  if (self.hasIsFinished) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFinished", [NSNumber numberWithInteger:self.isFinished]];
  }
  if (self.hasIsNew) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isNew", [NSNumber numberWithInteger:self.isNew]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [dictionary setObject:self.bookType forKey: @"bookType"];
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  if (self.hasIsFinished) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isFinished] forKey: @"isFinished"];
  }
  if (self.hasIsNew) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isNew] forKey: @"isNew"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookStoreReq class]]) {
    return NO;
  }
  BookStoreReq *otherMessage = other;
  return
      [self.bookTypeArray isEqualToArray:otherMessage.bookTypeArray] &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      self.hasIsFinished == otherMessage.hasIsFinished &&
      (!self.hasIsFinished || self.isFinished == otherMessage.isFinished) &&
      self.hasIsNew == otherMessage.hasIsNew &&
      (!self.hasIsNew || self.isNew == otherMessage.isNew) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.bookTypeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  if (self.hasIsFinished) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isFinished] hash];
  }
  if (self.hasIsNew) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isNew] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookStoreReqBuilder()
@property (strong) BookStoreReq* resultBookStoreReq;
@end

@implementation BookStoreReqBuilder
@synthesize resultBookStoreReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookStoreReq = [[BookStoreReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookStoreReq;
}
- (BookStoreReqBuilder*) clear {
  self.resultBookStoreReq = [[BookStoreReq alloc] init];
  return self;
}
- (BookStoreReqBuilder*) clone {
  return [BookStoreReq builderWithPrototype:resultBookStoreReq];
}
- (BookStoreReq*) defaultInstance {
  return [BookStoreReq defaultInstance];
}
- (BookStoreReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookStoreReq*) buildPartial {
  BookStoreReq* returnMe = resultBookStoreReq;
  self.resultBookStoreReq = nil;
  return returnMe;
}
- (BookStoreReqBuilder*) mergeFrom:(BookStoreReq*) other {
  if (other == [BookStoreReq defaultInstance]) {
    return self;
  }
  if (other.bookTypeArray.count > 0) {
    if (resultBookStoreReq.bookTypeArray == nil) {
      resultBookStoreReq.bookTypeArray = [[NSMutableArray alloc] initWithArray:other.bookTypeArray];
    } else {
      [resultBookStoreReq.bookTypeArray addObjectsFromArray:other.bookTypeArray];
    }
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.hasIsFinished) {
    [self setIsFinished:other.isFinished];
  }
  if (other.hasIsNew) {
    [self setIsNew:other.isNew];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookStoreReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookStoreReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addBookType:[input readString]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
      case 24: {
        [self setIsFinished:[input readUInt32]];
        break;
      }
      case 32: {
        [self setIsNew:[input readUInt32]];
        break;
      }
    }
  }
}
- (NSMutableArray *)bookType {
  return resultBookStoreReq.bookTypeArray;
}
- (NSString*)bookTypeAtIndex:(NSUInteger)index {
  return [resultBookStoreReq bookTypeAtIndex:index];
}
- (BookStoreReqBuilder *)addBookType:(NSString*)value {
  if (resultBookStoreReq.bookTypeArray == nil) {
    resultBookStoreReq.bookTypeArray = [[NSMutableArray alloc]init];
  }
  [resultBookStoreReq.bookTypeArray addObject:value];
  return self;
}
- (BookStoreReqBuilder *)setBookTypeArray:(NSArray *)array {
  resultBookStoreReq.bookTypeArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (BookStoreReqBuilder *)clearBookType {
  resultBookStoreReq.bookTypeArray = nil;
  return self;
}
- (BOOL) hasPage {
  return resultBookStoreReq.hasPage;
}
- (UInt32) page {
  return resultBookStoreReq.page;
}
- (BookStoreReqBuilder*) setPage:(UInt32) value {
  resultBookStoreReq.hasPage = YES;
  resultBookStoreReq.page = value;
  return self;
}
- (BookStoreReqBuilder*) clearPage {
  resultBookStoreReq.hasPage = NO;
  resultBookStoreReq.page = 0;
  return self;
}
- (BOOL) hasIsFinished {
  return resultBookStoreReq.hasIsFinished;
}
- (UInt32) isFinished {
  return resultBookStoreReq.isFinished;
}
- (BookStoreReqBuilder*) setIsFinished:(UInt32) value {
  resultBookStoreReq.hasIsFinished = YES;
  resultBookStoreReq.isFinished = value;
  return self;
}
- (BookStoreReqBuilder*) clearIsFinished {
  resultBookStoreReq.hasIsFinished = NO;
  resultBookStoreReq.isFinished = 0;
  return self;
}
- (BOOL) hasIsNew {
  return resultBookStoreReq.hasIsNew;
}
- (UInt32) isNew {
  return resultBookStoreReq.isNew;
}
- (BookStoreReqBuilder*) setIsNew:(UInt32) value {
  resultBookStoreReq.hasIsNew = YES;
  resultBookStoreReq.isNew = value;
  return self;
}
- (BookStoreReqBuilder*) clearIsNew {
  resultBookStoreReq.hasIsNew = NO;
  resultBookStoreReq.isNew = 0;
  return self;
}
@end

@interface BookStoreRes ()
@property UInt32 psize;
@property UInt32 page;
@property (strong) NSMutableArray<Book*> * booksArray;
@end

@implementation BookStoreRes

- (BOOL) hasPsize {
  return !!hasPsize_;
}
- (void) setHasPsize:(BOOL) _value_ {
  hasPsize_ = !!_value_;
}
@synthesize psize;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
@synthesize booksArray;
@dynamic books;
- (instancetype) init {
  if ((self = [super init])) {
    self.psize = 0;
    self.page = 0;
  }
  return self;
}
static BookStoreRes* defaultBookStoreResInstance = nil;
+ (void) initialize {
  if (self == [BookStoreRes class]) {
    defaultBookStoreResInstance = [[BookStoreRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookStoreResInstance;
}
- (instancetype) defaultInstance {
  return defaultBookStoreResInstance;
}
- (NSArray<Book*> *)books {
  return booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [booksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPsize) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  __block BOOL isInitbooks = YES;
   [self.books enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitbooks) return isInitbooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPsize) {
    [output writeUInt32:1 value:self.psize];
  }
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPsize) {
    size_ += computeUInt32Size(1, self.psize);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookStoreRes*) parseFromData:(NSData*) data {
  return (BookStoreRes*)[[[BookStoreRes builder] mergeFromData:data] build];
}
+ (BookStoreRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookStoreRes*)[[[BookStoreRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookStoreRes*) parseFromInputStream:(NSInputStream*) input {
  return (BookStoreRes*)[[[BookStoreRes builder] mergeFromInputStream:input] build];
}
+ (BookStoreRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookStoreRes*)[[[BookStoreRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookStoreRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookStoreRes*)[[[BookStoreRes builder] mergeFromCodedInputStream:input] build];
}
+ (BookStoreRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookStoreRes*)[[[BookStoreRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookStoreResBuilder*) builder {
  return [[BookStoreResBuilder alloc] init];
}
+ (BookStoreResBuilder*) builderWithPrototype:(BookStoreRes*) prototype {
  return [[BookStoreRes builder] mergeFrom:prototype];
}
- (BookStoreResBuilder*) builder {
  return [BookStoreRes builder];
}
- (BookStoreResBuilder*) toBuilder {
  return [BookStoreRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPsize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"psize", [NSNumber numberWithInteger:self.psize]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"books"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPsize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.psize] forKey: @"psize"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  for (Book* element in self.booksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"books"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookStoreRes class]]) {
    return NO;
  }
  BookStoreRes *otherMessage = other;
  return
      self.hasPsize == otherMessage.hasPsize &&
      (!self.hasPsize || self.psize == otherMessage.psize) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.booksArray isEqualToArray:otherMessage.booksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPsize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.psize] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookStoreResBuilder()
@property (strong) BookStoreRes* resultBookStoreRes;
@end

@implementation BookStoreResBuilder
@synthesize resultBookStoreRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookStoreRes = [[BookStoreRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookStoreRes;
}
- (BookStoreResBuilder*) clear {
  self.resultBookStoreRes = [[BookStoreRes alloc] init];
  return self;
}
- (BookStoreResBuilder*) clone {
  return [BookStoreRes builderWithPrototype:resultBookStoreRes];
}
- (BookStoreRes*) defaultInstance {
  return [BookStoreRes defaultInstance];
}
- (BookStoreRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookStoreRes*) buildPartial {
  BookStoreRes* returnMe = resultBookStoreRes;
  self.resultBookStoreRes = nil;
  return returnMe;
}
- (BookStoreResBuilder*) mergeFrom:(BookStoreRes*) other {
  if (other == [BookStoreRes defaultInstance]) {
    return self;
  }
  if (other.hasPsize) {
    [self setPsize:other.psize];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.booksArray.count > 0) {
    if (resultBookStoreRes.booksArray == nil) {
      resultBookStoreRes.booksArray = [[NSMutableArray alloc] initWithArray:other.booksArray];
    } else {
      [resultBookStoreRes.booksArray addObjectsFromArray:other.booksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookStoreResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookStoreResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPsize:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
      case 26: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBooks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPsize {
  return resultBookStoreRes.hasPsize;
}
- (UInt32) psize {
  return resultBookStoreRes.psize;
}
- (BookStoreResBuilder*) setPsize:(UInt32) value {
  resultBookStoreRes.hasPsize = YES;
  resultBookStoreRes.psize = value;
  return self;
}
- (BookStoreResBuilder*) clearPsize {
  resultBookStoreRes.hasPsize = NO;
  resultBookStoreRes.psize = 0;
  return self;
}
- (BOOL) hasPage {
  return resultBookStoreRes.hasPage;
}
- (UInt32) page {
  return resultBookStoreRes.page;
}
- (BookStoreResBuilder*) setPage:(UInt32) value {
  resultBookStoreRes.hasPage = YES;
  resultBookStoreRes.page = value;
  return self;
}
- (BookStoreResBuilder*) clearPage {
  resultBookStoreRes.hasPage = NO;
  resultBookStoreRes.page = 0;
  return self;
}
- (NSMutableArray<Book*> *)books {
  return resultBookStoreRes.booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [resultBookStoreRes booksAtIndex:index];
}
- (BookStoreResBuilder *)addBooks:(Book*)value {
  if (resultBookStoreRes.booksArray == nil) {
    resultBookStoreRes.booksArray = [[NSMutableArray alloc]init];
  }
  [resultBookStoreRes.booksArray addObject:value];
  return self;
}
- (BookStoreResBuilder *)setBooksArray:(NSArray<Book*> *)array {
  resultBookStoreRes.booksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BookStoreResBuilder *)clearBooks {
  resultBookStoreRes.booksArray = nil;
  return self;
}
@end

@interface BookSearchReq ()
@property (strong) NSString* kw;
@property UInt32 page;
@end

@implementation BookSearchReq

- (BOOL) hasKw {
  return !!hasKw_;
}
- (void) setHasKw:(BOOL) _value_ {
  hasKw_ = !!_value_;
}
@synthesize kw;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.kw = @"";
    self.page = 0;
  }
  return self;
}
static BookSearchReq* defaultBookSearchReqInstance = nil;
+ (void) initialize {
  if (self == [BookSearchReq class]) {
    defaultBookSearchReqInstance = [[BookSearchReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookSearchReqInstance;
}
- (instancetype) defaultInstance {
  return defaultBookSearchReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKw) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKw) {
    [output writeString:1 value:self.kw];
  }
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKw) {
    size_ += computeStringSize(1, self.kw);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookSearchReq*) parseFromData:(NSData*) data {
  return (BookSearchReq*)[[[BookSearchReq builder] mergeFromData:data] build];
}
+ (BookSearchReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookSearchReq*)[[[BookSearchReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookSearchReq*) parseFromInputStream:(NSInputStream*) input {
  return (BookSearchReq*)[[[BookSearchReq builder] mergeFromInputStream:input] build];
}
+ (BookSearchReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookSearchReq*)[[[BookSearchReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookSearchReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookSearchReq*)[[[BookSearchReq builder] mergeFromCodedInputStream:input] build];
}
+ (BookSearchReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookSearchReq*)[[[BookSearchReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookSearchReqBuilder*) builder {
  return [[BookSearchReqBuilder alloc] init];
}
+ (BookSearchReqBuilder*) builderWithPrototype:(BookSearchReq*) prototype {
  return [[BookSearchReq builder] mergeFrom:prototype];
}
- (BookSearchReqBuilder*) builder {
  return [BookSearchReq builder];
}
- (BookSearchReqBuilder*) toBuilder {
  return [BookSearchReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKw) {
    [output appendFormat:@"%@%@: %@\n", indent, @"kw", self.kw];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKw) {
    [dictionary setObject: self.kw forKey: @"kw"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookSearchReq class]]) {
    return NO;
  }
  BookSearchReq *otherMessage = other;
  return
      self.hasKw == otherMessage.hasKw &&
      (!self.hasKw || [self.kw isEqual:otherMessage.kw]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKw) {
    hashCode = hashCode * 31 + [self.kw hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookSearchReqBuilder()
@property (strong) BookSearchReq* resultBookSearchReq;
@end

@implementation BookSearchReqBuilder
@synthesize resultBookSearchReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookSearchReq = [[BookSearchReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookSearchReq;
}
- (BookSearchReqBuilder*) clear {
  self.resultBookSearchReq = [[BookSearchReq alloc] init];
  return self;
}
- (BookSearchReqBuilder*) clone {
  return [BookSearchReq builderWithPrototype:resultBookSearchReq];
}
- (BookSearchReq*) defaultInstance {
  return [BookSearchReq defaultInstance];
}
- (BookSearchReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookSearchReq*) buildPartial {
  BookSearchReq* returnMe = resultBookSearchReq;
  self.resultBookSearchReq = nil;
  return returnMe;
}
- (BookSearchReqBuilder*) mergeFrom:(BookSearchReq*) other {
  if (other == [BookSearchReq defaultInstance]) {
    return self;
  }
  if (other.hasKw) {
    [self setKw:other.kw];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookSearchReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookSearchReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setKw:[input readString]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasKw {
  return resultBookSearchReq.hasKw;
}
- (NSString*) kw {
  return resultBookSearchReq.kw;
}
- (BookSearchReqBuilder*) setKw:(NSString*) value {
  resultBookSearchReq.hasKw = YES;
  resultBookSearchReq.kw = value;
  return self;
}
- (BookSearchReqBuilder*) clearKw {
  resultBookSearchReq.hasKw = NO;
  resultBookSearchReq.kw = @"";
  return self;
}
- (BOOL) hasPage {
  return resultBookSearchReq.hasPage;
}
- (UInt32) page {
  return resultBookSearchReq.page;
}
- (BookSearchReqBuilder*) setPage:(UInt32) value {
  resultBookSearchReq.hasPage = YES;
  resultBookSearchReq.page = value;
  return self;
}
- (BookSearchReqBuilder*) clearPage {
  resultBookSearchReq.hasPage = NO;
  resultBookSearchReq.page = 0;
  return self;
}
@end

@interface BookSearchRes ()
@property UInt32 psize;
@property UInt32 page;
@property (strong) NSMutableArray<Book*> * booksArray;
@property (strong) NSMutableArray<Book*> * relateBooksArray;
@end

@implementation BookSearchRes

- (BOOL) hasPsize {
  return !!hasPsize_;
}
- (void) setHasPsize:(BOOL) _value_ {
  hasPsize_ = !!_value_;
}
@synthesize psize;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
@synthesize booksArray;
@dynamic books;
@synthesize relateBooksArray;
@dynamic relateBooks;
- (instancetype) init {
  if ((self = [super init])) {
    self.psize = 0;
    self.page = 0;
  }
  return self;
}
static BookSearchRes* defaultBookSearchResInstance = nil;
+ (void) initialize {
  if (self == [BookSearchRes class]) {
    defaultBookSearchResInstance = [[BookSearchRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookSearchResInstance;
}
- (instancetype) defaultInstance {
  return defaultBookSearchResInstance;
}
- (NSArray<Book*> *)books {
  return booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [booksArray objectAtIndex:index];
}
- (NSArray<Book*> *)relateBooks {
  return relateBooksArray;
}
- (Book*)relateBooksAtIndex:(NSUInteger)index {
  return [relateBooksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPsize) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  __block BOOL isInitbooks = YES;
   [self.books enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitbooks) return isInitbooks;
  __block BOOL isInitrelateBooks = YES;
   [self.relateBooks enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrelateBooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitrelateBooks) return isInitrelateBooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPsize) {
    [output writeUInt32:1 value:self.psize];
  }
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPsize) {
    size_ += computeUInt32Size(1, self.psize);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookSearchRes*) parseFromData:(NSData*) data {
  return (BookSearchRes*)[[[BookSearchRes builder] mergeFromData:data] build];
}
+ (BookSearchRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookSearchRes*)[[[BookSearchRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookSearchRes*) parseFromInputStream:(NSInputStream*) input {
  return (BookSearchRes*)[[[BookSearchRes builder] mergeFromInputStream:input] build];
}
+ (BookSearchRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookSearchRes*)[[[BookSearchRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookSearchRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookSearchRes*)[[[BookSearchRes builder] mergeFromCodedInputStream:input] build];
}
+ (BookSearchRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookSearchRes*)[[[BookSearchRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookSearchResBuilder*) builder {
  return [[BookSearchResBuilder alloc] init];
}
+ (BookSearchResBuilder*) builderWithPrototype:(BookSearchRes*) prototype {
  return [[BookSearchRes builder] mergeFrom:prototype];
}
- (BookSearchResBuilder*) builder {
  return [BookSearchRes builder];
}
- (BookSearchResBuilder*) toBuilder {
  return [BookSearchRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPsize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"psize", [NSNumber numberWithInteger:self.psize]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"books"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"relateBooks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPsize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.psize] forKey: @"psize"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  for (Book* element in self.booksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"books"];
  }
  for (Book* element in self.relateBooksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"relateBooks"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookSearchRes class]]) {
    return NO;
  }
  BookSearchRes *otherMessage = other;
  return
      self.hasPsize == otherMessage.hasPsize &&
      (!self.hasPsize || self.psize == otherMessage.psize) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      [self.booksArray isEqualToArray:otherMessage.booksArray] &&
      [self.relateBooksArray isEqualToArray:otherMessage.relateBooksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPsize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.psize] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookSearchResBuilder()
@property (strong) BookSearchRes* resultBookSearchRes;
@end

@implementation BookSearchResBuilder
@synthesize resultBookSearchRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookSearchRes = [[BookSearchRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookSearchRes;
}
- (BookSearchResBuilder*) clear {
  self.resultBookSearchRes = [[BookSearchRes alloc] init];
  return self;
}
- (BookSearchResBuilder*) clone {
  return [BookSearchRes builderWithPrototype:resultBookSearchRes];
}
- (BookSearchRes*) defaultInstance {
  return [BookSearchRes defaultInstance];
}
- (BookSearchRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookSearchRes*) buildPartial {
  BookSearchRes* returnMe = resultBookSearchRes;
  self.resultBookSearchRes = nil;
  return returnMe;
}
- (BookSearchResBuilder*) mergeFrom:(BookSearchRes*) other {
  if (other == [BookSearchRes defaultInstance]) {
    return self;
  }
  if (other.hasPsize) {
    [self setPsize:other.psize];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.booksArray.count > 0) {
    if (resultBookSearchRes.booksArray == nil) {
      resultBookSearchRes.booksArray = [[NSMutableArray alloc] initWithArray:other.booksArray];
    } else {
      [resultBookSearchRes.booksArray addObjectsFromArray:other.booksArray];
    }
  }
  if (other.relateBooksArray.count > 0) {
    if (resultBookSearchRes.relateBooksArray == nil) {
      resultBookSearchRes.relateBooksArray = [[NSMutableArray alloc] initWithArray:other.relateBooksArray];
    } else {
      [resultBookSearchRes.relateBooksArray addObjectsFromArray:other.relateBooksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookSearchResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookSearchResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPsize:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
      case 26: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBooks:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRelateBooks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPsize {
  return resultBookSearchRes.hasPsize;
}
- (UInt32) psize {
  return resultBookSearchRes.psize;
}
- (BookSearchResBuilder*) setPsize:(UInt32) value {
  resultBookSearchRes.hasPsize = YES;
  resultBookSearchRes.psize = value;
  return self;
}
- (BookSearchResBuilder*) clearPsize {
  resultBookSearchRes.hasPsize = NO;
  resultBookSearchRes.psize = 0;
  return self;
}
- (BOOL) hasPage {
  return resultBookSearchRes.hasPage;
}
- (UInt32) page {
  return resultBookSearchRes.page;
}
- (BookSearchResBuilder*) setPage:(UInt32) value {
  resultBookSearchRes.hasPage = YES;
  resultBookSearchRes.page = value;
  return self;
}
- (BookSearchResBuilder*) clearPage {
  resultBookSearchRes.hasPage = NO;
  resultBookSearchRes.page = 0;
  return self;
}
- (NSMutableArray<Book*> *)books {
  return resultBookSearchRes.booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [resultBookSearchRes booksAtIndex:index];
}
- (BookSearchResBuilder *)addBooks:(Book*)value {
  if (resultBookSearchRes.booksArray == nil) {
    resultBookSearchRes.booksArray = [[NSMutableArray alloc]init];
  }
  [resultBookSearchRes.booksArray addObject:value];
  return self;
}
- (BookSearchResBuilder *)setBooksArray:(NSArray<Book*> *)array {
  resultBookSearchRes.booksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BookSearchResBuilder *)clearBooks {
  resultBookSearchRes.booksArray = nil;
  return self;
}
- (NSMutableArray<Book*> *)relateBooks {
  return resultBookSearchRes.relateBooksArray;
}
- (Book*)relateBooksAtIndex:(NSUInteger)index {
  return [resultBookSearchRes relateBooksAtIndex:index];
}
- (BookSearchResBuilder *)addRelateBooks:(Book*)value {
  if (resultBookSearchRes.relateBooksArray == nil) {
    resultBookSearchRes.relateBooksArray = [[NSMutableArray alloc]init];
  }
  [resultBookSearchRes.relateBooksArray addObject:value];
  return self;
}
- (BookSearchResBuilder *)setRelateBooksArray:(NSArray<Book*> *)array {
  resultBookSearchRes.relateBooksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BookSearchResBuilder *)clearRelateBooks {
  resultBookSearchRes.relateBooksArray = nil;
  return self;
}
@end

@interface BookChapterReq ()
@property UInt32 bookId;
@end

@implementation BookChapterReq

- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (instancetype) init {
  if ((self = [super init])) {
    self.bookId = 0;
  }
  return self;
}
static BookChapterReq* defaultBookChapterReqInstance = nil;
+ (void) initialize {
  if (self == [BookChapterReq class]) {
    defaultBookChapterReqInstance = [[BookChapterReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookChapterReqInstance;
}
- (instancetype) defaultInstance {
  return defaultBookChapterReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBookId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookId) {
    [output writeUInt32:1 value:self.bookId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBookId) {
    size_ += computeUInt32Size(1, self.bookId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookChapterReq*) parseFromData:(NSData*) data {
  return (BookChapterReq*)[[[BookChapterReq builder] mergeFromData:data] build];
}
+ (BookChapterReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterReq*)[[[BookChapterReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookChapterReq*) parseFromInputStream:(NSInputStream*) input {
  return (BookChapterReq*)[[[BookChapterReq builder] mergeFromInputStream:input] build];
}
+ (BookChapterReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterReq*)[[[BookChapterReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookChapterReq*)[[[BookChapterReq builder] mergeFromCodedInputStream:input] build];
}
+ (BookChapterReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterReq*)[[[BookChapterReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterReqBuilder*) builder {
  return [[BookChapterReqBuilder alloc] init];
}
+ (BookChapterReqBuilder*) builderWithPrototype:(BookChapterReq*) prototype {
  return [[BookChapterReq builder] mergeFrom:prototype];
}
- (BookChapterReqBuilder*) builder {
  return [BookChapterReq builder];
}
- (BookChapterReqBuilder*) toBuilder {
  return [BookChapterReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", [NSNumber numberWithInteger:self.bookId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBookId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookId] forKey: @"bookId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookChapterReq class]]) {
    return NO;
  }
  BookChapterReq *otherMessage = other;
  return
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || self.bookId == otherMessage.bookId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookChapterReqBuilder()
@property (strong) BookChapterReq* resultBookChapterReq;
@end

@implementation BookChapterReqBuilder
@synthesize resultBookChapterReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookChapterReq = [[BookChapterReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookChapterReq;
}
- (BookChapterReqBuilder*) clear {
  self.resultBookChapterReq = [[BookChapterReq alloc] init];
  return self;
}
- (BookChapterReqBuilder*) clone {
  return [BookChapterReq builderWithPrototype:resultBookChapterReq];
}
- (BookChapterReq*) defaultInstance {
  return [BookChapterReq defaultInstance];
}
- (BookChapterReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookChapterReq*) buildPartial {
  BookChapterReq* returnMe = resultBookChapterReq;
  self.resultBookChapterReq = nil;
  return returnMe;
}
- (BookChapterReqBuilder*) mergeFrom:(BookChapterReq*) other {
  if (other == [BookChapterReq defaultInstance]) {
    return self;
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookChapterReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookChapterReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBookId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBookId {
  return resultBookChapterReq.hasBookId;
}
- (UInt32) bookId {
  return resultBookChapterReq.bookId;
}
- (BookChapterReqBuilder*) setBookId:(UInt32) value {
  resultBookChapterReq.hasBookId = YES;
  resultBookChapterReq.bookId = value;
  return self;
}
- (BookChapterReqBuilder*) clearBookId {
  resultBookChapterReq.hasBookId = NO;
  resultBookChapterReq.bookId = 0;
  return self;
}
@end

@interface BookChapterRes ()
@property (strong) NSMutableArray<Chapter*> * chaptersArray;
@end

@implementation BookChapterRes

@synthesize chaptersArray;
@dynamic chapters;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static BookChapterRes* defaultBookChapterResInstance = nil;
+ (void) initialize {
  if (self == [BookChapterRes class]) {
    defaultBookChapterResInstance = [[BookChapterRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookChapterResInstance;
}
- (instancetype) defaultInstance {
  return defaultBookChapterResInstance;
}
- (NSArray<Chapter*> *)chapters {
  return chaptersArray;
}
- (Chapter*)chaptersAtIndex:(NSUInteger)index {
  return [chaptersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitchapters = YES;
   [self.chapters enumerateObjectsUsingBlock:^(Chapter *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitchapters = NO;
      *stop = YES;
    }
  }];
  if (!isInitchapters) return isInitchapters;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.chaptersArray enumerateObjectsUsingBlock:^(Chapter *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.chaptersArray enumerateObjectsUsingBlock:^(Chapter *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookChapterRes*) parseFromData:(NSData*) data {
  return (BookChapterRes*)[[[BookChapterRes builder] mergeFromData:data] build];
}
+ (BookChapterRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterRes*)[[[BookChapterRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookChapterRes*) parseFromInputStream:(NSInputStream*) input {
  return (BookChapterRes*)[[[BookChapterRes builder] mergeFromInputStream:input] build];
}
+ (BookChapterRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterRes*)[[[BookChapterRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookChapterRes*)[[[BookChapterRes builder] mergeFromCodedInputStream:input] build];
}
+ (BookChapterRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterRes*)[[[BookChapterRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterResBuilder*) builder {
  return [[BookChapterResBuilder alloc] init];
}
+ (BookChapterResBuilder*) builderWithPrototype:(BookChapterRes*) prototype {
  return [[BookChapterRes builder] mergeFrom:prototype];
}
- (BookChapterResBuilder*) builder {
  return [BookChapterRes builder];
}
- (BookChapterResBuilder*) toBuilder {
  return [BookChapterRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.chaptersArray enumerateObjectsUsingBlock:^(Chapter *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"chapters"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Chapter* element in self.chaptersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"chapters"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookChapterRes class]]) {
    return NO;
  }
  BookChapterRes *otherMessage = other;
  return
      [self.chaptersArray isEqualToArray:otherMessage.chaptersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.chaptersArray enumerateObjectsUsingBlock:^(Chapter *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookChapterResBuilder()
@property (strong) BookChapterRes* resultBookChapterRes;
@end

@implementation BookChapterResBuilder
@synthesize resultBookChapterRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookChapterRes = [[BookChapterRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookChapterRes;
}
- (BookChapterResBuilder*) clear {
  self.resultBookChapterRes = [[BookChapterRes alloc] init];
  return self;
}
- (BookChapterResBuilder*) clone {
  return [BookChapterRes builderWithPrototype:resultBookChapterRes];
}
- (BookChapterRes*) defaultInstance {
  return [BookChapterRes defaultInstance];
}
- (BookChapterRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookChapterRes*) buildPartial {
  BookChapterRes* returnMe = resultBookChapterRes;
  self.resultBookChapterRes = nil;
  return returnMe;
}
- (BookChapterResBuilder*) mergeFrom:(BookChapterRes*) other {
  if (other == [BookChapterRes defaultInstance]) {
    return self;
  }
  if (other.chaptersArray.count > 0) {
    if (resultBookChapterRes.chaptersArray == nil) {
      resultBookChapterRes.chaptersArray = [[NSMutableArray alloc] initWithArray:other.chaptersArray];
    } else {
      [resultBookChapterRes.chaptersArray addObjectsFromArray:other.chaptersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookChapterResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookChapterResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ChapterBuilder* subBuilder = [Chapter builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addChapters:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray<Chapter*> *)chapters {
  return resultBookChapterRes.chaptersArray;
}
- (Chapter*)chaptersAtIndex:(NSUInteger)index {
  return [resultBookChapterRes chaptersAtIndex:index];
}
- (BookChapterResBuilder *)addChapters:(Chapter*)value {
  if (resultBookChapterRes.chaptersArray == nil) {
    resultBookChapterRes.chaptersArray = [[NSMutableArray alloc]init];
  }
  [resultBookChapterRes.chaptersArray addObject:value];
  return self;
}
- (BookChapterResBuilder *)setChaptersArray:(NSArray<Chapter*> *)array {
  resultBookChapterRes.chaptersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BookChapterResBuilder *)clearChapters {
  resultBookChapterRes.chaptersArray = nil;
  return self;
}
@end

@interface BookChapterSourceReq ()
@property UInt32 bookId;
@property UInt32 chapterNo;
@property (strong) NSString* chapterTitle;
@property UInt32 sourceId;
@end

@implementation BookChapterSourceReq

- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (BOOL) hasChapterNo {
  return !!hasChapterNo_;
}
- (void) setHasChapterNo:(BOOL) _value_ {
  hasChapterNo_ = !!_value_;
}
@synthesize chapterNo;
- (BOOL) hasChapterTitle {
  return !!hasChapterTitle_;
}
- (void) setHasChapterTitle:(BOOL) _value_ {
  hasChapterTitle_ = !!_value_;
}
@synthesize chapterTitle;
- (BOOL) hasSourceId {
  return !!hasSourceId_;
}
- (void) setHasSourceId:(BOOL) _value_ {
  hasSourceId_ = !!_value_;
}
@synthesize sourceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.bookId = 0;
    self.chapterNo = 0;
    self.chapterTitle = @"";
    self.sourceId = 0;
  }
  return self;
}
static BookChapterSourceReq* defaultBookChapterSourceReqInstance = nil;
+ (void) initialize {
  if (self == [BookChapterSourceReq class]) {
    defaultBookChapterSourceReqInstance = [[BookChapterSourceReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookChapterSourceReqInstance;
}
- (instancetype) defaultInstance {
  return defaultBookChapterSourceReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBookId) {
    return NO;
  }
  if (!self.hasChapterNo) {
    return NO;
  }
  if (!self.hasChapterTitle) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookId) {
    [output writeUInt32:1 value:self.bookId];
  }
  if (self.hasChapterNo) {
    [output writeUInt32:3 value:self.chapterNo];
  }
  if (self.hasChapterTitle) {
    [output writeString:5 value:self.chapterTitle];
  }
  if (self.hasSourceId) {
    [output writeUInt32:7 value:self.sourceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBookId) {
    size_ += computeUInt32Size(1, self.bookId);
  }
  if (self.hasChapterNo) {
    size_ += computeUInt32Size(3, self.chapterNo);
  }
  if (self.hasChapterTitle) {
    size_ += computeStringSize(5, self.chapterTitle);
  }
  if (self.hasSourceId) {
    size_ += computeUInt32Size(7, self.sourceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookChapterSourceReq*) parseFromData:(NSData*) data {
  return (BookChapterSourceReq*)[[[BookChapterSourceReq builder] mergeFromData:data] build];
}
+ (BookChapterSourceReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterSourceReq*)[[[BookChapterSourceReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookChapterSourceReq*) parseFromInputStream:(NSInputStream*) input {
  return (BookChapterSourceReq*)[[[BookChapterSourceReq builder] mergeFromInputStream:input] build];
}
+ (BookChapterSourceReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterSourceReq*)[[[BookChapterSourceReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterSourceReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookChapterSourceReq*)[[[BookChapterSourceReq builder] mergeFromCodedInputStream:input] build];
}
+ (BookChapterSourceReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterSourceReq*)[[[BookChapterSourceReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterSourceReqBuilder*) builder {
  return [[BookChapterSourceReqBuilder alloc] init];
}
+ (BookChapterSourceReqBuilder*) builderWithPrototype:(BookChapterSourceReq*) prototype {
  return [[BookChapterSourceReq builder] mergeFrom:prototype];
}
- (BookChapterSourceReqBuilder*) builder {
  return [BookChapterSourceReq builder];
}
- (BookChapterSourceReqBuilder*) toBuilder {
  return [BookChapterSourceReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", [NSNumber numberWithInteger:self.bookId]];
  }
  if (self.hasChapterNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chapterNo", [NSNumber numberWithInteger:self.chapterNo]];
  }
  if (self.hasChapterTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chapterTitle", self.chapterTitle];
  }
  if (self.hasSourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sourceId", [NSNumber numberWithInteger:self.sourceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBookId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookId] forKey: @"bookId"];
  }
  if (self.hasChapterNo) {
    [dictionary setObject: [NSNumber numberWithInteger:self.chapterNo] forKey: @"chapterNo"];
  }
  if (self.hasChapterTitle) {
    [dictionary setObject: self.chapterTitle forKey: @"chapterTitle"];
  }
  if (self.hasSourceId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sourceId] forKey: @"sourceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookChapterSourceReq class]]) {
    return NO;
  }
  BookChapterSourceReq *otherMessage = other;
  return
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || self.bookId == otherMessage.bookId) &&
      self.hasChapterNo == otherMessage.hasChapterNo &&
      (!self.hasChapterNo || self.chapterNo == otherMessage.chapterNo) &&
      self.hasChapterTitle == otherMessage.hasChapterTitle &&
      (!self.hasChapterTitle || [self.chapterTitle isEqual:otherMessage.chapterTitle]) &&
      self.hasSourceId == otherMessage.hasSourceId &&
      (!self.hasSourceId || self.sourceId == otherMessage.sourceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookId] hash];
  }
  if (self.hasChapterNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.chapterNo] hash];
  }
  if (self.hasChapterTitle) {
    hashCode = hashCode * 31 + [self.chapterTitle hash];
  }
  if (self.hasSourceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sourceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookChapterSourceReqBuilder()
@property (strong) BookChapterSourceReq* resultBookChapterSourceReq;
@end

@implementation BookChapterSourceReqBuilder
@synthesize resultBookChapterSourceReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookChapterSourceReq = [[BookChapterSourceReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookChapterSourceReq;
}
- (BookChapterSourceReqBuilder*) clear {
  self.resultBookChapterSourceReq = [[BookChapterSourceReq alloc] init];
  return self;
}
- (BookChapterSourceReqBuilder*) clone {
  return [BookChapterSourceReq builderWithPrototype:resultBookChapterSourceReq];
}
- (BookChapterSourceReq*) defaultInstance {
  return [BookChapterSourceReq defaultInstance];
}
- (BookChapterSourceReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookChapterSourceReq*) buildPartial {
  BookChapterSourceReq* returnMe = resultBookChapterSourceReq;
  self.resultBookChapterSourceReq = nil;
  return returnMe;
}
- (BookChapterSourceReqBuilder*) mergeFrom:(BookChapterSourceReq*) other {
  if (other == [BookChapterSourceReq defaultInstance]) {
    return self;
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  if (other.hasChapterNo) {
    [self setChapterNo:other.chapterNo];
  }
  if (other.hasChapterTitle) {
    [self setChapterTitle:other.chapterTitle];
  }
  if (other.hasSourceId) {
    [self setSourceId:other.sourceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookChapterSourceReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookChapterSourceReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBookId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setChapterNo:[input readUInt32]];
        break;
      }
      case 42: {
        [self setChapterTitle:[input readString]];
        break;
      }
      case 56: {
        [self setSourceId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBookId {
  return resultBookChapterSourceReq.hasBookId;
}
- (UInt32) bookId {
  return resultBookChapterSourceReq.bookId;
}
- (BookChapterSourceReqBuilder*) setBookId:(UInt32) value {
  resultBookChapterSourceReq.hasBookId = YES;
  resultBookChapterSourceReq.bookId = value;
  return self;
}
- (BookChapterSourceReqBuilder*) clearBookId {
  resultBookChapterSourceReq.hasBookId = NO;
  resultBookChapterSourceReq.bookId = 0;
  return self;
}
- (BOOL) hasChapterNo {
  return resultBookChapterSourceReq.hasChapterNo;
}
- (UInt32) chapterNo {
  return resultBookChapterSourceReq.chapterNo;
}
- (BookChapterSourceReqBuilder*) setChapterNo:(UInt32) value {
  resultBookChapterSourceReq.hasChapterNo = YES;
  resultBookChapterSourceReq.chapterNo = value;
  return self;
}
- (BookChapterSourceReqBuilder*) clearChapterNo {
  resultBookChapterSourceReq.hasChapterNo = NO;
  resultBookChapterSourceReq.chapterNo = 0;
  return self;
}
- (BOOL) hasChapterTitle {
  return resultBookChapterSourceReq.hasChapterTitle;
}
- (NSString*) chapterTitle {
  return resultBookChapterSourceReq.chapterTitle;
}
- (BookChapterSourceReqBuilder*) setChapterTitle:(NSString*) value {
  resultBookChapterSourceReq.hasChapterTitle = YES;
  resultBookChapterSourceReq.chapterTitle = value;
  return self;
}
- (BookChapterSourceReqBuilder*) clearChapterTitle {
  resultBookChapterSourceReq.hasChapterTitle = NO;
  resultBookChapterSourceReq.chapterTitle = @"";
  return self;
}
- (BOOL) hasSourceId {
  return resultBookChapterSourceReq.hasSourceId;
}
- (UInt32) sourceId {
  return resultBookChapterSourceReq.sourceId;
}
- (BookChapterSourceReqBuilder*) setSourceId:(UInt32) value {
  resultBookChapterSourceReq.hasSourceId = YES;
  resultBookChapterSourceReq.sourceId = value;
  return self;
}
- (BookChapterSourceReqBuilder*) clearSourceId {
  resultBookChapterSourceReq.hasSourceId = NO;
  resultBookChapterSourceReq.sourceId = 0;
  return self;
}
@end

@interface SourceLastChapter ()
@property (strong) Source* source;
@property (strong) Chapter* lastChapter;
@end

@implementation SourceLastChapter

- (BOOL) hasSource {
  return !!hasSource_;
}
- (void) setHasSource:(BOOL) _value_ {
  hasSource_ = !!_value_;
}
@synthesize source;
- (BOOL) hasLastChapter {
  return !!hasLastChapter_;
}
- (void) setHasLastChapter:(BOOL) _value_ {
  hasLastChapter_ = !!_value_;
}
@synthesize lastChapter;
- (instancetype) init {
  if ((self = [super init])) {
    self.source = [Source defaultInstance];
    self.lastChapter = [Chapter defaultInstance];
  }
  return self;
}
static SourceLastChapter* defaultSourceLastChapterInstance = nil;
+ (void) initialize {
  if (self == [SourceLastChapter class]) {
    defaultSourceLastChapterInstance = [[SourceLastChapter alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSourceLastChapterInstance;
}
- (instancetype) defaultInstance {
  return defaultSourceLastChapterInstance;
}
- (BOOL) isInitialized {
  if (self.hasSource) {
    if (!self.source.isInitialized) {
      return NO;
    }
  }
  if (self.hasLastChapter) {
    if (!self.lastChapter.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSource) {
    [output writeMessage:1 value:self.source];
  }
  if (self.hasLastChapter) {
    [output writeMessage:2 value:self.lastChapter];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSource) {
    size_ += computeMessageSize(1, self.source);
  }
  if (self.hasLastChapter) {
    size_ += computeMessageSize(2, self.lastChapter);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SourceLastChapter*) parseFromData:(NSData*) data {
  return (SourceLastChapter*)[[[SourceLastChapter builder] mergeFromData:data] build];
}
+ (SourceLastChapter*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SourceLastChapter*)[[[SourceLastChapter builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SourceLastChapter*) parseFromInputStream:(NSInputStream*) input {
  return (SourceLastChapter*)[[[SourceLastChapter builder] mergeFromInputStream:input] build];
}
+ (SourceLastChapter*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SourceLastChapter*)[[[SourceLastChapter builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SourceLastChapter*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SourceLastChapter*)[[[SourceLastChapter builder] mergeFromCodedInputStream:input] build];
}
+ (SourceLastChapter*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SourceLastChapter*)[[[SourceLastChapter builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SourceLastChapterBuilder*) builder {
  return [[SourceLastChapterBuilder alloc] init];
}
+ (SourceLastChapterBuilder*) builderWithPrototype:(SourceLastChapter*) prototype {
  return [[SourceLastChapter builder] mergeFrom:prototype];
}
- (SourceLastChapterBuilder*) builder {
  return [SourceLastChapter builder];
}
- (SourceLastChapterBuilder*) toBuilder {
  return [SourceLastChapter builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSource) {
    [output appendFormat:@"%@%@ {\n", indent, @"source"];
    [self.source writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLastChapter) {
    [output appendFormat:@"%@%@ {\n", indent, @"lastChapter"];
    [self.lastChapter writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSource) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.source storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"source"];
  }
  if (self.hasLastChapter) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.lastChapter storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"lastChapter"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SourceLastChapter class]]) {
    return NO;
  }
  SourceLastChapter *otherMessage = other;
  return
      self.hasSource == otherMessage.hasSource &&
      (!self.hasSource || [self.source isEqual:otherMessage.source]) &&
      self.hasLastChapter == otherMessage.hasLastChapter &&
      (!self.hasLastChapter || [self.lastChapter isEqual:otherMessage.lastChapter]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSource) {
    hashCode = hashCode * 31 + [self.source hash];
  }
  if (self.hasLastChapter) {
    hashCode = hashCode * 31 + [self.lastChapter hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SourceLastChapterBuilder()
@property (strong) SourceLastChapter* resultSourceLastChapter;
@end

@implementation SourceLastChapterBuilder
@synthesize resultSourceLastChapter;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSourceLastChapter = [[SourceLastChapter alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSourceLastChapter;
}
- (SourceLastChapterBuilder*) clear {
  self.resultSourceLastChapter = [[SourceLastChapter alloc] init];
  return self;
}
- (SourceLastChapterBuilder*) clone {
  return [SourceLastChapter builderWithPrototype:resultSourceLastChapter];
}
- (SourceLastChapter*) defaultInstance {
  return [SourceLastChapter defaultInstance];
}
- (SourceLastChapter*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SourceLastChapter*) buildPartial {
  SourceLastChapter* returnMe = resultSourceLastChapter;
  self.resultSourceLastChapter = nil;
  return returnMe;
}
- (SourceLastChapterBuilder*) mergeFrom:(SourceLastChapter*) other {
  if (other == [SourceLastChapter defaultInstance]) {
    return self;
  }
  if (other.hasSource) {
    [self mergeSource:other.source];
  }
  if (other.hasLastChapter) {
    [self mergeLastChapter:other.lastChapter];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SourceLastChapterBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SourceLastChapterBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SourceBuilder* subBuilder = [Source builder];
        if (self.hasSource) {
          [subBuilder mergeFrom:self.source];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSource:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ChapterBuilder* subBuilder = [Chapter builder];
        if (self.hasLastChapter) {
          [subBuilder mergeFrom:self.lastChapter];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLastChapter:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSource {
  return resultSourceLastChapter.hasSource;
}
- (Source*) source {
  return resultSourceLastChapter.source;
}
- (SourceLastChapterBuilder*) setSource:(Source*) value {
  resultSourceLastChapter.hasSource = YES;
  resultSourceLastChapter.source = value;
  return self;
}
- (SourceLastChapterBuilder*) setSourceBuilder:(SourceBuilder*) builderForValue {
  return [self setSource:[builderForValue build]];
}
- (SourceLastChapterBuilder*) mergeSource:(Source*) value {
  if (resultSourceLastChapter.hasSource &&
      resultSourceLastChapter.source != [Source defaultInstance]) {
    resultSourceLastChapter.source =
      [[[Source builderWithPrototype:resultSourceLastChapter.source] mergeFrom:value] buildPartial];
  } else {
    resultSourceLastChapter.source = value;
  }
  resultSourceLastChapter.hasSource = YES;
  return self;
}
- (SourceLastChapterBuilder*) clearSource {
  resultSourceLastChapter.hasSource = NO;
  resultSourceLastChapter.source = [Source defaultInstance];
  return self;
}
- (BOOL) hasLastChapter {
  return resultSourceLastChapter.hasLastChapter;
}
- (Chapter*) lastChapter {
  return resultSourceLastChapter.lastChapter;
}
- (SourceLastChapterBuilder*) setLastChapter:(Chapter*) value {
  resultSourceLastChapter.hasLastChapter = YES;
  resultSourceLastChapter.lastChapter = value;
  return self;
}
- (SourceLastChapterBuilder*) setLastChapterBuilder:(ChapterBuilder*) builderForValue {
  return [self setLastChapter:[builderForValue build]];
}
- (SourceLastChapterBuilder*) mergeLastChapter:(Chapter*) value {
  if (resultSourceLastChapter.hasLastChapter &&
      resultSourceLastChapter.lastChapter != [Chapter defaultInstance]) {
    resultSourceLastChapter.lastChapter =
      [[[Chapter builderWithPrototype:resultSourceLastChapter.lastChapter] mergeFrom:value] buildPartial];
  } else {
    resultSourceLastChapter.lastChapter = value;
  }
  resultSourceLastChapter.hasLastChapter = YES;
  return self;
}
- (SourceLastChapterBuilder*) clearLastChapter {
  resultSourceLastChapter.hasLastChapter = NO;
  resultSourceLastChapter.lastChapter = [Chapter defaultInstance];
  return self;
}
@end

@interface BookChapterSourceRes ()
@property (strong) Chapter* chapter;
@property (strong) NSMutableArray<SourceLastChapter*> * sourcesArray;
@end

@implementation BookChapterSourceRes

- (BOOL) hasChapter {
  return !!hasChapter_;
}
- (void) setHasChapter:(BOOL) _value_ {
  hasChapter_ = !!_value_;
}
@synthesize chapter;
@synthesize sourcesArray;
@dynamic sources;
- (instancetype) init {
  if ((self = [super init])) {
    self.chapter = [Chapter defaultInstance];
  }
  return self;
}
static BookChapterSourceRes* defaultBookChapterSourceResInstance = nil;
+ (void) initialize {
  if (self == [BookChapterSourceRes class]) {
    defaultBookChapterSourceResInstance = [[BookChapterSourceRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookChapterSourceResInstance;
}
- (instancetype) defaultInstance {
  return defaultBookChapterSourceResInstance;
}
- (NSArray<SourceLastChapter*> *)sources {
  return sourcesArray;
}
- (SourceLastChapter*)sourcesAtIndex:(NSUInteger)index {
  return [sourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasChapter) {
    return NO;
  }
  if (!self.chapter.isInitialized) {
    return NO;
  }
  __block BOOL isInitsources = YES;
   [self.sources enumerateObjectsUsingBlock:^(SourceLastChapter *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitsources = NO;
      *stop = YES;
    }
  }];
  if (!isInitsources) return isInitsources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChapter) {
    [output writeMessage:1 value:self.chapter];
  }
  [self.sourcesArray enumerateObjectsUsingBlock:^(SourceLastChapter *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChapter) {
    size_ += computeMessageSize(1, self.chapter);
  }
  [self.sourcesArray enumerateObjectsUsingBlock:^(SourceLastChapter *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookChapterSourceRes*) parseFromData:(NSData*) data {
  return (BookChapterSourceRes*)[[[BookChapterSourceRes builder] mergeFromData:data] build];
}
+ (BookChapterSourceRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterSourceRes*)[[[BookChapterSourceRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookChapterSourceRes*) parseFromInputStream:(NSInputStream*) input {
  return (BookChapterSourceRes*)[[[BookChapterSourceRes builder] mergeFromInputStream:input] build];
}
+ (BookChapterSourceRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterSourceRes*)[[[BookChapterSourceRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterSourceRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookChapterSourceRes*)[[[BookChapterSourceRes builder] mergeFromCodedInputStream:input] build];
}
+ (BookChapterSourceRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookChapterSourceRes*)[[[BookChapterSourceRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookChapterSourceResBuilder*) builder {
  return [[BookChapterSourceResBuilder alloc] init];
}
+ (BookChapterSourceResBuilder*) builderWithPrototype:(BookChapterSourceRes*) prototype {
  return [[BookChapterSourceRes builder] mergeFrom:prototype];
}
- (BookChapterSourceResBuilder*) builder {
  return [BookChapterSourceRes builder];
}
- (BookChapterSourceResBuilder*) toBuilder {
  return [BookChapterSourceRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChapter) {
    [output appendFormat:@"%@%@ {\n", indent, @"chapter"];
    [self.chapter writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.sourcesArray enumerateObjectsUsingBlock:^(SourceLastChapter *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"sources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasChapter) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.chapter storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"chapter"];
  }
  for (SourceLastChapter* element in self.sourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"sources"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookChapterSourceRes class]]) {
    return NO;
  }
  BookChapterSourceRes *otherMessage = other;
  return
      self.hasChapter == otherMessage.hasChapter &&
      (!self.hasChapter || [self.chapter isEqual:otherMessage.chapter]) &&
      [self.sourcesArray isEqualToArray:otherMessage.sourcesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasChapter) {
    hashCode = hashCode * 31 + [self.chapter hash];
  }
  [self.sourcesArray enumerateObjectsUsingBlock:^(SourceLastChapter *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookChapterSourceResBuilder()
@property (strong) BookChapterSourceRes* resultBookChapterSourceRes;
@end

@implementation BookChapterSourceResBuilder
@synthesize resultBookChapterSourceRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookChapterSourceRes = [[BookChapterSourceRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookChapterSourceRes;
}
- (BookChapterSourceResBuilder*) clear {
  self.resultBookChapterSourceRes = [[BookChapterSourceRes alloc] init];
  return self;
}
- (BookChapterSourceResBuilder*) clone {
  return [BookChapterSourceRes builderWithPrototype:resultBookChapterSourceRes];
}
- (BookChapterSourceRes*) defaultInstance {
  return [BookChapterSourceRes defaultInstance];
}
- (BookChapterSourceRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookChapterSourceRes*) buildPartial {
  BookChapterSourceRes* returnMe = resultBookChapterSourceRes;
  self.resultBookChapterSourceRes = nil;
  return returnMe;
}
- (BookChapterSourceResBuilder*) mergeFrom:(BookChapterSourceRes*) other {
  if (other == [BookChapterSourceRes defaultInstance]) {
    return self;
  }
  if (other.hasChapter) {
    [self mergeChapter:other.chapter];
  }
  if (other.sourcesArray.count > 0) {
    if (resultBookChapterSourceRes.sourcesArray == nil) {
      resultBookChapterSourceRes.sourcesArray = [[NSMutableArray alloc] initWithArray:other.sourcesArray];
    } else {
      [resultBookChapterSourceRes.sourcesArray addObjectsFromArray:other.sourcesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookChapterSourceResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookChapterSourceResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ChapterBuilder* subBuilder = [Chapter builder];
        if (self.hasChapter) {
          [subBuilder mergeFrom:self.chapter];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setChapter:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        SourceLastChapterBuilder* subBuilder = [SourceLastChapter builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSources:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasChapter {
  return resultBookChapterSourceRes.hasChapter;
}
- (Chapter*) chapter {
  return resultBookChapterSourceRes.chapter;
}
- (BookChapterSourceResBuilder*) setChapter:(Chapter*) value {
  resultBookChapterSourceRes.hasChapter = YES;
  resultBookChapterSourceRes.chapter = value;
  return self;
}
- (BookChapterSourceResBuilder*) setChapterBuilder:(ChapterBuilder*) builderForValue {
  return [self setChapter:[builderForValue build]];
}
- (BookChapterSourceResBuilder*) mergeChapter:(Chapter*) value {
  if (resultBookChapterSourceRes.hasChapter &&
      resultBookChapterSourceRes.chapter != [Chapter defaultInstance]) {
    resultBookChapterSourceRes.chapter =
      [[[Chapter builderWithPrototype:resultBookChapterSourceRes.chapter] mergeFrom:value] buildPartial];
  } else {
    resultBookChapterSourceRes.chapter = value;
  }
  resultBookChapterSourceRes.hasChapter = YES;
  return self;
}
- (BookChapterSourceResBuilder*) clearChapter {
  resultBookChapterSourceRes.hasChapter = NO;
  resultBookChapterSourceRes.chapter = [Chapter defaultInstance];
  return self;
}
- (NSMutableArray<SourceLastChapter*> *)sources {
  return resultBookChapterSourceRes.sourcesArray;
}
- (SourceLastChapter*)sourcesAtIndex:(NSUInteger)index {
  return [resultBookChapterSourceRes sourcesAtIndex:index];
}
- (BookChapterSourceResBuilder *)addSources:(SourceLastChapter*)value {
  if (resultBookChapterSourceRes.sourcesArray == nil) {
    resultBookChapterSourceRes.sourcesArray = [[NSMutableArray alloc]init];
  }
  [resultBookChapterSourceRes.sourcesArray addObject:value];
  return self;
}
- (BookChapterSourceResBuilder *)setSourcesArray:(NSArray<SourceLastChapter*> *)array {
  resultBookChapterSourceRes.sourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BookChapterSourceResBuilder *)clearSources {
  resultBookChapterSourceRes.sourcesArray = nil;
  return self;
}
@end

@interface BookRelateReq ()
@property UInt32 bookId;
@end

@implementation BookRelateReq

- (BOOL) hasBookId {
  return !!hasBookId_;
}
- (void) setHasBookId:(BOOL) _value_ {
  hasBookId_ = !!_value_;
}
@synthesize bookId;
- (instancetype) init {
  if ((self = [super init])) {
    self.bookId = 0;
  }
  return self;
}
static BookRelateReq* defaultBookRelateReqInstance = nil;
+ (void) initialize {
  if (self == [BookRelateReq class]) {
    defaultBookRelateReqInstance = [[BookRelateReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookRelateReqInstance;
}
- (instancetype) defaultInstance {
  return defaultBookRelateReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBookId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookId) {
    [output writeUInt32:1 value:self.bookId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBookId) {
    size_ += computeUInt32Size(1, self.bookId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookRelateReq*) parseFromData:(NSData*) data {
  return (BookRelateReq*)[[[BookRelateReq builder] mergeFromData:data] build];
}
+ (BookRelateReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookRelateReq*)[[[BookRelateReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookRelateReq*) parseFromInputStream:(NSInputStream*) input {
  return (BookRelateReq*)[[[BookRelateReq builder] mergeFromInputStream:input] build];
}
+ (BookRelateReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookRelateReq*)[[[BookRelateReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookRelateReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookRelateReq*)[[[BookRelateReq builder] mergeFromCodedInputStream:input] build];
}
+ (BookRelateReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookRelateReq*)[[[BookRelateReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookRelateReqBuilder*) builder {
  return [[BookRelateReqBuilder alloc] init];
}
+ (BookRelateReqBuilder*) builderWithPrototype:(BookRelateReq*) prototype {
  return [[BookRelateReq builder] mergeFrom:prototype];
}
- (BookRelateReqBuilder*) builder {
  return [BookRelateReq builder];
}
- (BookRelateReqBuilder*) toBuilder {
  return [BookRelateReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBookId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bookId", [NSNumber numberWithInteger:self.bookId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBookId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bookId] forKey: @"bookId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookRelateReq class]]) {
    return NO;
  }
  BookRelateReq *otherMessage = other;
  return
      self.hasBookId == otherMessage.hasBookId &&
      (!self.hasBookId || self.bookId == otherMessage.bookId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBookId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bookId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookRelateReqBuilder()
@property (strong) BookRelateReq* resultBookRelateReq;
@end

@implementation BookRelateReqBuilder
@synthesize resultBookRelateReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookRelateReq = [[BookRelateReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookRelateReq;
}
- (BookRelateReqBuilder*) clear {
  self.resultBookRelateReq = [[BookRelateReq alloc] init];
  return self;
}
- (BookRelateReqBuilder*) clone {
  return [BookRelateReq builderWithPrototype:resultBookRelateReq];
}
- (BookRelateReq*) defaultInstance {
  return [BookRelateReq defaultInstance];
}
- (BookRelateReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookRelateReq*) buildPartial {
  BookRelateReq* returnMe = resultBookRelateReq;
  self.resultBookRelateReq = nil;
  return returnMe;
}
- (BookRelateReqBuilder*) mergeFrom:(BookRelateReq*) other {
  if (other == [BookRelateReq defaultInstance]) {
    return self;
  }
  if (other.hasBookId) {
    [self setBookId:other.bookId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookRelateReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookRelateReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBookId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBookId {
  return resultBookRelateReq.hasBookId;
}
- (UInt32) bookId {
  return resultBookRelateReq.bookId;
}
- (BookRelateReqBuilder*) setBookId:(UInt32) value {
  resultBookRelateReq.hasBookId = YES;
  resultBookRelateReq.bookId = value;
  return self;
}
- (BookRelateReqBuilder*) clearBookId {
  resultBookRelateReq.hasBookId = NO;
  resultBookRelateReq.bookId = 0;
  return self;
}
@end

@interface BookRelateRes ()
@property UInt32 haveAdd;
@property (strong) NSMutableArray<Book*> * relateBooksArray;
@end

@implementation BookRelateRes

- (BOOL) hasHaveAdd {
  return !!hasHaveAdd_;
}
- (void) setHasHaveAdd:(BOOL) _value_ {
  hasHaveAdd_ = !!_value_;
}
@synthesize haveAdd;
@synthesize relateBooksArray;
@dynamic relateBooks;
- (instancetype) init {
  if ((self = [super init])) {
    self.haveAdd = 0;
  }
  return self;
}
static BookRelateRes* defaultBookRelateResInstance = nil;
+ (void) initialize {
  if (self == [BookRelateRes class]) {
    defaultBookRelateResInstance = [[BookRelateRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBookRelateResInstance;
}
- (instancetype) defaultInstance {
  return defaultBookRelateResInstance;
}
- (NSArray<Book*> *)relateBooks {
  return relateBooksArray;
}
- (Book*)relateBooksAtIndex:(NSUInteger)index {
  return [relateBooksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitrelateBooks = YES;
   [self.relateBooks enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrelateBooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitrelateBooks) return isInitrelateBooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHaveAdd) {
    [output writeUInt32:1 value:self.haveAdd];
  }
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHaveAdd) {
    size_ += computeUInt32Size(1, self.haveAdd);
  }
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BookRelateRes*) parseFromData:(NSData*) data {
  return (BookRelateRes*)[[[BookRelateRes builder] mergeFromData:data] build];
}
+ (BookRelateRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookRelateRes*)[[[BookRelateRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BookRelateRes*) parseFromInputStream:(NSInputStream*) input {
  return (BookRelateRes*)[[[BookRelateRes builder] mergeFromInputStream:input] build];
}
+ (BookRelateRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookRelateRes*)[[[BookRelateRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookRelateRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BookRelateRes*)[[[BookRelateRes builder] mergeFromCodedInputStream:input] build];
}
+ (BookRelateRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BookRelateRes*)[[[BookRelateRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BookRelateResBuilder*) builder {
  return [[BookRelateResBuilder alloc] init];
}
+ (BookRelateResBuilder*) builderWithPrototype:(BookRelateRes*) prototype {
  return [[BookRelateRes builder] mergeFrom:prototype];
}
- (BookRelateResBuilder*) builder {
  return [BookRelateRes builder];
}
- (BookRelateResBuilder*) toBuilder {
  return [BookRelateRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHaveAdd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"haveAdd", [NSNumber numberWithInteger:self.haveAdd]];
  }
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"relateBooks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHaveAdd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.haveAdd] forKey: @"haveAdd"];
  }
  for (Book* element in self.relateBooksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"relateBooks"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BookRelateRes class]]) {
    return NO;
  }
  BookRelateRes *otherMessage = other;
  return
      self.hasHaveAdd == otherMessage.hasHaveAdd &&
      (!self.hasHaveAdd || self.haveAdd == otherMessage.haveAdd) &&
      [self.relateBooksArray isEqualToArray:otherMessage.relateBooksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHaveAdd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.haveAdd] hash];
  }
  [self.relateBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BookRelateResBuilder()
@property (strong) BookRelateRes* resultBookRelateRes;
@end

@implementation BookRelateResBuilder
@synthesize resultBookRelateRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBookRelateRes = [[BookRelateRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBookRelateRes;
}
- (BookRelateResBuilder*) clear {
  self.resultBookRelateRes = [[BookRelateRes alloc] init];
  return self;
}
- (BookRelateResBuilder*) clone {
  return [BookRelateRes builderWithPrototype:resultBookRelateRes];
}
- (BookRelateRes*) defaultInstance {
  return [BookRelateRes defaultInstance];
}
- (BookRelateRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BookRelateRes*) buildPartial {
  BookRelateRes* returnMe = resultBookRelateRes;
  self.resultBookRelateRes = nil;
  return returnMe;
}
- (BookRelateResBuilder*) mergeFrom:(BookRelateRes*) other {
  if (other == [BookRelateRes defaultInstance]) {
    return self;
  }
  if (other.hasHaveAdd) {
    [self setHaveAdd:other.haveAdd];
  }
  if (other.relateBooksArray.count > 0) {
    if (resultBookRelateRes.relateBooksArray == nil) {
      resultBookRelateRes.relateBooksArray = [[NSMutableArray alloc] initWithArray:other.relateBooksArray];
    } else {
      [resultBookRelateRes.relateBooksArray addObjectsFromArray:other.relateBooksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BookRelateResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BookRelateResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setHaveAdd:[input readUInt32]];
        break;
      }
      case 18: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRelateBooks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasHaveAdd {
  return resultBookRelateRes.hasHaveAdd;
}
- (UInt32) haveAdd {
  return resultBookRelateRes.haveAdd;
}
- (BookRelateResBuilder*) setHaveAdd:(UInt32) value {
  resultBookRelateRes.hasHaveAdd = YES;
  resultBookRelateRes.haveAdd = value;
  return self;
}
- (BookRelateResBuilder*) clearHaveAdd {
  resultBookRelateRes.hasHaveAdd = NO;
  resultBookRelateRes.haveAdd = 0;
  return self;
}
- (NSMutableArray<Book*> *)relateBooks {
  return resultBookRelateRes.relateBooksArray;
}
- (Book*)relateBooksAtIndex:(NSUInteger)index {
  return [resultBookRelateRes relateBooksAtIndex:index];
}
- (BookRelateResBuilder *)addRelateBooks:(Book*)value {
  if (resultBookRelateRes.relateBooksArray == nil) {
    resultBookRelateRes.relateBooksArray = [[NSMutableArray alloc]init];
  }
  [resultBookRelateRes.relateBooksArray addObject:value];
  return self;
}
- (BookRelateResBuilder *)setRelateBooksArray:(NSArray<Book*> *)array {
  resultBookRelateRes.relateBooksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (BookRelateResBuilder *)clearRelateBooks {
  resultBookRelateRes.relateBooksArray = nil;
  return self;
}
@end

@interface TopicHomeReq ()
@property UInt32 type;
@property UInt32 page;
@end

@implementation TopicHomeReq

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.page = 0;
  }
  return self;
}
static TopicHomeReq* defaultTopicHomeReqInstance = nil;
+ (void) initialize {
  if (self == [TopicHomeReq class]) {
    defaultTopicHomeReqInstance = [[TopicHomeReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicHomeReqInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicHomeReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicHomeReq*) parseFromData:(NSData*) data {
  return (TopicHomeReq*)[[[TopicHomeReq builder] mergeFromData:data] build];
}
+ (TopicHomeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicHomeReq*)[[[TopicHomeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicHomeReq*) parseFromInputStream:(NSInputStream*) input {
  return (TopicHomeReq*)[[[TopicHomeReq builder] mergeFromInputStream:input] build];
}
+ (TopicHomeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicHomeReq*)[[[TopicHomeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicHomeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicHomeReq*)[[[TopicHomeReq builder] mergeFromCodedInputStream:input] build];
}
+ (TopicHomeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicHomeReq*)[[[TopicHomeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicHomeReqBuilder*) builder {
  return [[TopicHomeReqBuilder alloc] init];
}
+ (TopicHomeReqBuilder*) builderWithPrototype:(TopicHomeReq*) prototype {
  return [[TopicHomeReq builder] mergeFrom:prototype];
}
- (TopicHomeReqBuilder*) builder {
  return [TopicHomeReq builder];
}
- (TopicHomeReqBuilder*) toBuilder {
  return [TopicHomeReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicHomeReq class]]) {
    return NO;
  }
  TopicHomeReq *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicHomeReqBuilder()
@property (strong) TopicHomeReq* resultTopicHomeReq;
@end

@implementation TopicHomeReqBuilder
@synthesize resultTopicHomeReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicHomeReq = [[TopicHomeReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicHomeReq;
}
- (TopicHomeReqBuilder*) clear {
  self.resultTopicHomeReq = [[TopicHomeReq alloc] init];
  return self;
}
- (TopicHomeReqBuilder*) clone {
  return [TopicHomeReq builderWithPrototype:resultTopicHomeReq];
}
- (TopicHomeReq*) defaultInstance {
  return [TopicHomeReq defaultInstance];
}
- (TopicHomeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicHomeReq*) buildPartial {
  TopicHomeReq* returnMe = resultTopicHomeReq;
  self.resultTopicHomeReq = nil;
  return returnMe;
}
- (TopicHomeReqBuilder*) mergeFrom:(TopicHomeReq*) other {
  if (other == [TopicHomeReq defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicHomeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicHomeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultTopicHomeReq.hasType;
}
- (UInt32) type {
  return resultTopicHomeReq.type;
}
- (TopicHomeReqBuilder*) setType:(UInt32) value {
  resultTopicHomeReq.hasType = YES;
  resultTopicHomeReq.type = value;
  return self;
}
- (TopicHomeReqBuilder*) clearType {
  resultTopicHomeReq.hasType = NO;
  resultTopicHomeReq.type = 0;
  return self;
}
- (BOOL) hasPage {
  return resultTopicHomeReq.hasPage;
}
- (UInt32) page {
  return resultTopicHomeReq.page;
}
- (TopicHomeReqBuilder*) setPage:(UInt32) value {
  resultTopicHomeReq.hasPage = YES;
  resultTopicHomeReq.page = value;
  return self;
}
- (TopicHomeReqBuilder*) clearPage {
  resultTopicHomeReq.hasPage = NO;
  resultTopicHomeReq.page = 0;
  return self;
}
@end

@interface TopicHomeRes ()
@property (strong) NSMutableArray<Book*> * interestBooksArray;
@property (strong) NSMutableArray<Book*> * finishBooksArray;
@property UInt32 psize;
@property UInt32 page;
@end

@implementation TopicHomeRes

@synthesize interestBooksArray;
@dynamic interestBooks;
@synthesize finishBooksArray;
@dynamic finishBooks;
- (BOOL) hasPsize {
  return !!hasPsize_;
}
- (void) setHasPsize:(BOOL) _value_ {
  hasPsize_ = !!_value_;
}
@synthesize psize;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.psize = 0;
    self.page = 0;
  }
  return self;
}
static TopicHomeRes* defaultTopicHomeResInstance = nil;
+ (void) initialize {
  if (self == [TopicHomeRes class]) {
    defaultTopicHomeResInstance = [[TopicHomeRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicHomeResInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicHomeResInstance;
}
- (NSArray<Book*> *)interestBooks {
  return interestBooksArray;
}
- (Book*)interestBooksAtIndex:(NSUInteger)index {
  return [interestBooksArray objectAtIndex:index];
}
- (NSArray<Book*> *)finishBooks {
  return finishBooksArray;
}
- (Book*)finishBooksAtIndex:(NSUInteger)index {
  return [finishBooksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPsize) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  __block BOOL isInitinterestBooks = YES;
   [self.interestBooks enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitinterestBooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitinterestBooks) return isInitinterestBooks;
  __block BOOL isInitfinishBooks = YES;
   [self.finishBooks enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfinishBooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitfinishBooks) return isInitfinishBooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.interestBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.finishBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasPsize) {
    [output writeUInt32:3 value:self.psize];
  }
  if (self.hasPage) {
    [output writeUInt32:5 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.interestBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.finishBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasPsize) {
    size_ += computeUInt32Size(3, self.psize);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(5, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicHomeRes*) parseFromData:(NSData*) data {
  return (TopicHomeRes*)[[[TopicHomeRes builder] mergeFromData:data] build];
}
+ (TopicHomeRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicHomeRes*)[[[TopicHomeRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicHomeRes*) parseFromInputStream:(NSInputStream*) input {
  return (TopicHomeRes*)[[[TopicHomeRes builder] mergeFromInputStream:input] build];
}
+ (TopicHomeRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicHomeRes*)[[[TopicHomeRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicHomeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicHomeRes*)[[[TopicHomeRes builder] mergeFromCodedInputStream:input] build];
}
+ (TopicHomeRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicHomeRes*)[[[TopicHomeRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicHomeResBuilder*) builder {
  return [[TopicHomeResBuilder alloc] init];
}
+ (TopicHomeResBuilder*) builderWithPrototype:(TopicHomeRes*) prototype {
  return [[TopicHomeRes builder] mergeFrom:prototype];
}
- (TopicHomeResBuilder*) builder {
  return [TopicHomeRes builder];
}
- (TopicHomeResBuilder*) toBuilder {
  return [TopicHomeRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.interestBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"interestBooks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.finishBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"finishBooks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPsize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"psize", [NSNumber numberWithInteger:self.psize]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Book* element in self.interestBooksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"interestBooks"];
  }
  for (Book* element in self.finishBooksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"finishBooks"];
  }
  if (self.hasPsize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.psize] forKey: @"psize"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicHomeRes class]]) {
    return NO;
  }
  TopicHomeRes *otherMessage = other;
  return
      [self.interestBooksArray isEqualToArray:otherMessage.interestBooksArray] &&
      [self.finishBooksArray isEqualToArray:otherMessage.finishBooksArray] &&
      self.hasPsize == otherMessage.hasPsize &&
      (!self.hasPsize || self.psize == otherMessage.psize) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.interestBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.finishBooksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPsize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.psize] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicHomeResBuilder()
@property (strong) TopicHomeRes* resultTopicHomeRes;
@end

@implementation TopicHomeResBuilder
@synthesize resultTopicHomeRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicHomeRes = [[TopicHomeRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicHomeRes;
}
- (TopicHomeResBuilder*) clear {
  self.resultTopicHomeRes = [[TopicHomeRes alloc] init];
  return self;
}
- (TopicHomeResBuilder*) clone {
  return [TopicHomeRes builderWithPrototype:resultTopicHomeRes];
}
- (TopicHomeRes*) defaultInstance {
  return [TopicHomeRes defaultInstance];
}
- (TopicHomeRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicHomeRes*) buildPartial {
  TopicHomeRes* returnMe = resultTopicHomeRes;
  self.resultTopicHomeRes = nil;
  return returnMe;
}
- (TopicHomeResBuilder*) mergeFrom:(TopicHomeRes*) other {
  if (other == [TopicHomeRes defaultInstance]) {
    return self;
  }
  if (other.interestBooksArray.count > 0) {
    if (resultTopicHomeRes.interestBooksArray == nil) {
      resultTopicHomeRes.interestBooksArray = [[NSMutableArray alloc] initWithArray:other.interestBooksArray];
    } else {
      [resultTopicHomeRes.interestBooksArray addObjectsFromArray:other.interestBooksArray];
    }
  }
  if (other.finishBooksArray.count > 0) {
    if (resultTopicHomeRes.finishBooksArray == nil) {
      resultTopicHomeRes.finishBooksArray = [[NSMutableArray alloc] initWithArray:other.finishBooksArray];
    } else {
      [resultTopicHomeRes.finishBooksArray addObjectsFromArray:other.finishBooksArray];
    }
  }
  if (other.hasPsize) {
    [self setPsize:other.psize];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicHomeResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicHomeResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInterestBooks:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFinishBooks:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setPsize:[input readUInt32]];
        break;
      }
      case 40: {
        [self setPage:[input readUInt32]];
        break;
      }
    }
  }
}
- (NSMutableArray<Book*> *)interestBooks {
  return resultTopicHomeRes.interestBooksArray;
}
- (Book*)interestBooksAtIndex:(NSUInteger)index {
  return [resultTopicHomeRes interestBooksAtIndex:index];
}
- (TopicHomeResBuilder *)addInterestBooks:(Book*)value {
  if (resultTopicHomeRes.interestBooksArray == nil) {
    resultTopicHomeRes.interestBooksArray = [[NSMutableArray alloc]init];
  }
  [resultTopicHomeRes.interestBooksArray addObject:value];
  return self;
}
- (TopicHomeResBuilder *)setInterestBooksArray:(NSArray<Book*> *)array {
  resultTopicHomeRes.interestBooksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TopicHomeResBuilder *)clearInterestBooks {
  resultTopicHomeRes.interestBooksArray = nil;
  return self;
}
- (NSMutableArray<Book*> *)finishBooks {
  return resultTopicHomeRes.finishBooksArray;
}
- (Book*)finishBooksAtIndex:(NSUInteger)index {
  return [resultTopicHomeRes finishBooksAtIndex:index];
}
- (TopicHomeResBuilder *)addFinishBooks:(Book*)value {
  if (resultTopicHomeRes.finishBooksArray == nil) {
    resultTopicHomeRes.finishBooksArray = [[NSMutableArray alloc]init];
  }
  [resultTopicHomeRes.finishBooksArray addObject:value];
  return self;
}
- (TopicHomeResBuilder *)setFinishBooksArray:(NSArray<Book*> *)array {
  resultTopicHomeRes.finishBooksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TopicHomeResBuilder *)clearFinishBooks {
  resultTopicHomeRes.finishBooksArray = nil;
  return self;
}
- (BOOL) hasPsize {
  return resultTopicHomeRes.hasPsize;
}
- (UInt32) psize {
  return resultTopicHomeRes.psize;
}
- (TopicHomeResBuilder*) setPsize:(UInt32) value {
  resultTopicHomeRes.hasPsize = YES;
  resultTopicHomeRes.psize = value;
  return self;
}
- (TopicHomeResBuilder*) clearPsize {
  resultTopicHomeRes.hasPsize = NO;
  resultTopicHomeRes.psize = 0;
  return self;
}
- (BOOL) hasPage {
  return resultTopicHomeRes.hasPage;
}
- (UInt32) page {
  return resultTopicHomeRes.page;
}
- (TopicHomeResBuilder*) setPage:(UInt32) value {
  resultTopicHomeRes.hasPage = YES;
  resultTopicHomeRes.page = value;
  return self;
}
- (TopicHomeResBuilder*) clearPage {
  resultTopicHomeRes.hasPage = NO;
  resultTopicHomeRes.page = 0;
  return self;
}
@end

@interface TopicChart ()
@property UInt32 id;
@property (strong) NSString* name;
@property (strong) NSString* abstract;
@property (strong) NSString* converUrl;
@property UInt32 booksNum;
@property UInt32 viewNum;
@end

@implementation TopicChart

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasAbstract {
  return !!hasAbstract_;
}
- (void) setHasAbstract:(BOOL) _value_ {
  hasAbstract_ = !!_value_;
}
@synthesize abstract;
- (BOOL) hasConverUrl {
  return !!hasConverUrl_;
}
- (void) setHasConverUrl:(BOOL) _value_ {
  hasConverUrl_ = !!_value_;
}
@synthesize converUrl;
- (BOOL) hasBooksNum {
  return !!hasBooksNum_;
}
- (void) setHasBooksNum:(BOOL) _value_ {
  hasBooksNum_ = !!_value_;
}
@synthesize booksNum;
- (BOOL) hasViewNum {
  return !!hasViewNum_;
}
- (void) setHasViewNum:(BOOL) _value_ {
  hasViewNum_ = !!_value_;
}
@synthesize viewNum;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.abstract = @"";
    self.converUrl = @"";
    self.booksNum = 0;
    self.viewNum = 0;
  }
  return self;
}
static TopicChart* defaultTopicChartInstance = nil;
+ (void) initialize {
  if (self == [TopicChart class]) {
    defaultTopicChartInstance = [[TopicChart alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicChartInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicChartInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeUInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasAbstract) {
    [output writeString:3 value:self.abstract];
  }
  if (self.hasConverUrl) {
    [output writeString:4 value:self.converUrl];
  }
  if (self.hasBooksNum) {
    [output writeUInt32:5 value:self.booksNum];
  }
  if (self.hasViewNum) {
    [output writeUInt32:7 value:self.viewNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeUInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasAbstract) {
    size_ += computeStringSize(3, self.abstract);
  }
  if (self.hasConverUrl) {
    size_ += computeStringSize(4, self.converUrl);
  }
  if (self.hasBooksNum) {
    size_ += computeUInt32Size(5, self.booksNum);
  }
  if (self.hasViewNum) {
    size_ += computeUInt32Size(7, self.viewNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicChart*) parseFromData:(NSData*) data {
  return (TopicChart*)[[[TopicChart builder] mergeFromData:data] build];
}
+ (TopicChart*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChart*)[[[TopicChart builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicChart*) parseFromInputStream:(NSInputStream*) input {
  return (TopicChart*)[[[TopicChart builder] mergeFromInputStream:input] build];
}
+ (TopicChart*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChart*)[[[TopicChart builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChart*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicChart*)[[[TopicChart builder] mergeFromCodedInputStream:input] build];
}
+ (TopicChart*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChart*)[[[TopicChart builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBuilder*) builder {
  return [[TopicChartBuilder alloc] init];
}
+ (TopicChartBuilder*) builderWithPrototype:(TopicChart*) prototype {
  return [[TopicChart builder] mergeFrom:prototype];
}
- (TopicChartBuilder*) builder {
  return [TopicChart builder];
}
- (TopicChartBuilder*) toBuilder {
  return [TopicChart builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInteger:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAbstract) {
    [output appendFormat:@"%@%@: %@\n", indent, @"abstract", self.abstract];
  }
  if (self.hasConverUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"converUrl", self.converUrl];
  }
  if (self.hasBooksNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"booksNum", [NSNumber numberWithInteger:self.booksNum]];
  }
  if (self.hasViewNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewNum", [NSNumber numberWithInteger:self.viewNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasAbstract) {
    [dictionary setObject: self.abstract forKey: @"abstract"];
  }
  if (self.hasConverUrl) {
    [dictionary setObject: self.converUrl forKey: @"converUrl"];
  }
  if (self.hasBooksNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.booksNum] forKey: @"booksNum"];
  }
  if (self.hasViewNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.viewNum] forKey: @"viewNum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicChart class]]) {
    return NO;
  }
  TopicChart *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAbstract == otherMessage.hasAbstract &&
      (!self.hasAbstract || [self.abstract isEqual:otherMessage.abstract]) &&
      self.hasConverUrl == otherMessage.hasConverUrl &&
      (!self.hasConverUrl || [self.converUrl isEqual:otherMessage.converUrl]) &&
      self.hasBooksNum == otherMessage.hasBooksNum &&
      (!self.hasBooksNum || self.booksNum == otherMessage.booksNum) &&
      self.hasViewNum == otherMessage.hasViewNum &&
      (!self.hasViewNum || self.viewNum == otherMessage.viewNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAbstract) {
    hashCode = hashCode * 31 + [self.abstract hash];
  }
  if (self.hasConverUrl) {
    hashCode = hashCode * 31 + [self.converUrl hash];
  }
  if (self.hasBooksNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.booksNum] hash];
  }
  if (self.hasViewNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.viewNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicChartBuilder()
@property (strong) TopicChart* resultTopicChart;
@end

@implementation TopicChartBuilder
@synthesize resultTopicChart;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicChart = [[TopicChart alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicChart;
}
- (TopicChartBuilder*) clear {
  self.resultTopicChart = [[TopicChart alloc] init];
  return self;
}
- (TopicChartBuilder*) clone {
  return [TopicChart builderWithPrototype:resultTopicChart];
}
- (TopicChart*) defaultInstance {
  return [TopicChart defaultInstance];
}
- (TopicChart*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicChart*) buildPartial {
  TopicChart* returnMe = resultTopicChart;
  self.resultTopicChart = nil;
  return returnMe;
}
- (TopicChartBuilder*) mergeFrom:(TopicChart*) other {
  if (other == [TopicChart defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAbstract) {
    [self setAbstract:other.abstract];
  }
  if (other.hasConverUrl) {
    [self setConverUrl:other.converUrl];
  }
  if (other.hasBooksNum) {
    [self setBooksNum:other.booksNum];
  }
  if (other.hasViewNum) {
    [self setViewNum:other.viewNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicChartBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicChartBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setAbstract:[input readString]];
        break;
      }
      case 34: {
        [self setConverUrl:[input readString]];
        break;
      }
      case 40: {
        [self setBooksNum:[input readUInt32]];
        break;
      }
      case 56: {
        [self setViewNum:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultTopicChart.hasId;
}
- (UInt32) id {
  return resultTopicChart.id;
}
- (TopicChartBuilder*) setId:(UInt32) value {
  resultTopicChart.hasId = YES;
  resultTopicChart.id = value;
  return self;
}
- (TopicChartBuilder*) clearId {
  resultTopicChart.hasId = NO;
  resultTopicChart.id = 0;
  return self;
}
- (BOOL) hasName {
  return resultTopicChart.hasName;
}
- (NSString*) name {
  return resultTopicChart.name;
}
- (TopicChartBuilder*) setName:(NSString*) value {
  resultTopicChart.hasName = YES;
  resultTopicChart.name = value;
  return self;
}
- (TopicChartBuilder*) clearName {
  resultTopicChart.hasName = NO;
  resultTopicChart.name = @"";
  return self;
}
- (BOOL) hasAbstract {
  return resultTopicChart.hasAbstract;
}
- (NSString*) abstract {
  return resultTopicChart.abstract;
}
- (TopicChartBuilder*) setAbstract:(NSString*) value {
  resultTopicChart.hasAbstract = YES;
  resultTopicChart.abstract = value;
  return self;
}
- (TopicChartBuilder*) clearAbstract {
  resultTopicChart.hasAbstract = NO;
  resultTopicChart.abstract = @"";
  return self;
}
- (BOOL) hasConverUrl {
  return resultTopicChart.hasConverUrl;
}
- (NSString*) converUrl {
  return resultTopicChart.converUrl;
}
- (TopicChartBuilder*) setConverUrl:(NSString*) value {
  resultTopicChart.hasConverUrl = YES;
  resultTopicChart.converUrl = value;
  return self;
}
- (TopicChartBuilder*) clearConverUrl {
  resultTopicChart.hasConverUrl = NO;
  resultTopicChart.converUrl = @"";
  return self;
}
- (BOOL) hasBooksNum {
  return resultTopicChart.hasBooksNum;
}
- (UInt32) booksNum {
  return resultTopicChart.booksNum;
}
- (TopicChartBuilder*) setBooksNum:(UInt32) value {
  resultTopicChart.hasBooksNum = YES;
  resultTopicChart.booksNum = value;
  return self;
}
- (TopicChartBuilder*) clearBooksNum {
  resultTopicChart.hasBooksNum = NO;
  resultTopicChart.booksNum = 0;
  return self;
}
- (BOOL) hasViewNum {
  return resultTopicChart.hasViewNum;
}
- (UInt32) viewNum {
  return resultTopicChart.viewNum;
}
- (TopicChartBuilder*) setViewNum:(UInt32) value {
  resultTopicChart.hasViewNum = YES;
  resultTopicChart.viewNum = value;
  return self;
}
- (TopicChartBuilder*) clearViewNum {
  resultTopicChart.hasViewNum = NO;
  resultTopicChart.viewNum = 0;
  return self;
}
@end

@interface TopicChartReq ()
@property UInt32 type;
@end

@implementation TopicChartReq

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
  }
  return self;
}
static TopicChartReq* defaultTopicChartReqInstance = nil;
+ (void) initialize {
  if (self == [TopicChartReq class]) {
    defaultTopicChartReqInstance = [[TopicChartReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicChartReqInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicChartReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicChartReq*) parseFromData:(NSData*) data {
  return (TopicChartReq*)[[[TopicChartReq builder] mergeFromData:data] build];
}
+ (TopicChartReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartReq*)[[[TopicChartReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicChartReq*) parseFromInputStream:(NSInputStream*) input {
  return (TopicChartReq*)[[[TopicChartReq builder] mergeFromInputStream:input] build];
}
+ (TopicChartReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartReq*)[[[TopicChartReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicChartReq*)[[[TopicChartReq builder] mergeFromCodedInputStream:input] build];
}
+ (TopicChartReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartReq*)[[[TopicChartReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartReqBuilder*) builder {
  return [[TopicChartReqBuilder alloc] init];
}
+ (TopicChartReqBuilder*) builderWithPrototype:(TopicChartReq*) prototype {
  return [[TopicChartReq builder] mergeFrom:prototype];
}
- (TopicChartReqBuilder*) builder {
  return [TopicChartReq builder];
}
- (TopicChartReqBuilder*) toBuilder {
  return [TopicChartReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicChartReq class]]) {
    return NO;
  }
  TopicChartReq *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicChartReqBuilder()
@property (strong) TopicChartReq* resultTopicChartReq;
@end

@implementation TopicChartReqBuilder
@synthesize resultTopicChartReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicChartReq = [[TopicChartReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicChartReq;
}
- (TopicChartReqBuilder*) clear {
  self.resultTopicChartReq = [[TopicChartReq alloc] init];
  return self;
}
- (TopicChartReqBuilder*) clone {
  return [TopicChartReq builderWithPrototype:resultTopicChartReq];
}
- (TopicChartReq*) defaultInstance {
  return [TopicChartReq defaultInstance];
}
- (TopicChartReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicChartReq*) buildPartial {
  TopicChartReq* returnMe = resultTopicChartReq;
  self.resultTopicChartReq = nil;
  return returnMe;
}
- (TopicChartReqBuilder*) mergeFrom:(TopicChartReq*) other {
  if (other == [TopicChartReq defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicChartReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicChartReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultTopicChartReq.hasType;
}
- (UInt32) type {
  return resultTopicChartReq.type;
}
- (TopicChartReqBuilder*) setType:(UInt32) value {
  resultTopicChartReq.hasType = YES;
  resultTopicChartReq.type = value;
  return self;
}
- (TopicChartReqBuilder*) clearType {
  resultTopicChartReq.hasType = NO;
  resultTopicChartReq.type = 0;
  return self;
}
@end

@interface TopicChartRes ()
@property (strong) NSMutableArray<TopicChart*> * tcsArray;
@end

@implementation TopicChartRes

@synthesize tcsArray;
@dynamic tcs;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TopicChartRes* defaultTopicChartResInstance = nil;
+ (void) initialize {
  if (self == [TopicChartRes class]) {
    defaultTopicChartResInstance = [[TopicChartRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicChartResInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicChartResInstance;
}
- (NSArray<TopicChart*> *)tcs {
  return tcsArray;
}
- (TopicChart*)tcsAtIndex:(NSUInteger)index {
  return [tcsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInittcs = YES;
   [self.tcs enumerateObjectsUsingBlock:^(TopicChart *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInittcs = NO;
      *stop = YES;
    }
  }];
  if (!isInittcs) return isInittcs;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.tcsArray enumerateObjectsUsingBlock:^(TopicChart *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.tcsArray enumerateObjectsUsingBlock:^(TopicChart *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicChartRes*) parseFromData:(NSData*) data {
  return (TopicChartRes*)[[[TopicChartRes builder] mergeFromData:data] build];
}
+ (TopicChartRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartRes*)[[[TopicChartRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicChartRes*) parseFromInputStream:(NSInputStream*) input {
  return (TopicChartRes*)[[[TopicChartRes builder] mergeFromInputStream:input] build];
}
+ (TopicChartRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartRes*)[[[TopicChartRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicChartRes*)[[[TopicChartRes builder] mergeFromCodedInputStream:input] build];
}
+ (TopicChartRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartRes*)[[[TopicChartRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartResBuilder*) builder {
  return [[TopicChartResBuilder alloc] init];
}
+ (TopicChartResBuilder*) builderWithPrototype:(TopicChartRes*) prototype {
  return [[TopicChartRes builder] mergeFrom:prototype];
}
- (TopicChartResBuilder*) builder {
  return [TopicChartRes builder];
}
- (TopicChartResBuilder*) toBuilder {
  return [TopicChartRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.tcsArray enumerateObjectsUsingBlock:^(TopicChart *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tcs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TopicChart* element in self.tcsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"tcs"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicChartRes class]]) {
    return NO;
  }
  TopicChartRes *otherMessage = other;
  return
      [self.tcsArray isEqualToArray:otherMessage.tcsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.tcsArray enumerateObjectsUsingBlock:^(TopicChart *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicChartResBuilder()
@property (strong) TopicChartRes* resultTopicChartRes;
@end

@implementation TopicChartResBuilder
@synthesize resultTopicChartRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicChartRes = [[TopicChartRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicChartRes;
}
- (TopicChartResBuilder*) clear {
  self.resultTopicChartRes = [[TopicChartRes alloc] init];
  return self;
}
- (TopicChartResBuilder*) clone {
  return [TopicChartRes builderWithPrototype:resultTopicChartRes];
}
- (TopicChartRes*) defaultInstance {
  return [TopicChartRes defaultInstance];
}
- (TopicChartRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicChartRes*) buildPartial {
  TopicChartRes* returnMe = resultTopicChartRes;
  self.resultTopicChartRes = nil;
  return returnMe;
}
- (TopicChartResBuilder*) mergeFrom:(TopicChartRes*) other {
  if (other == [TopicChartRes defaultInstance]) {
    return self;
  }
  if (other.tcsArray.count > 0) {
    if (resultTopicChartRes.tcsArray == nil) {
      resultTopicChartRes.tcsArray = [[NSMutableArray alloc] initWithArray:other.tcsArray];
    } else {
      [resultTopicChartRes.tcsArray addObjectsFromArray:other.tcsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicChartResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicChartResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TopicChartBuilder* subBuilder = [TopicChart builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTcs:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray<TopicChart*> *)tcs {
  return resultTopicChartRes.tcsArray;
}
- (TopicChart*)tcsAtIndex:(NSUInteger)index {
  return [resultTopicChartRes tcsAtIndex:index];
}
- (TopicChartResBuilder *)addTcs:(TopicChart*)value {
  if (resultTopicChartRes.tcsArray == nil) {
    resultTopicChartRes.tcsArray = [[NSMutableArray alloc]init];
  }
  [resultTopicChartRes.tcsArray addObject:value];
  return self;
}
- (TopicChartResBuilder *)setTcsArray:(NSArray<TopicChart*> *)array {
  resultTopicChartRes.tcsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TopicChartResBuilder *)clearTcs {
  resultTopicChartRes.tcsArray = nil;
  return self;
}
@end

@interface TopicChartBookReq ()
@property UInt32 tcid;
@property UInt32 page;
@end

@implementation TopicChartBookReq

- (BOOL) hasTcid {
  return !!hasTcid_;
}
- (void) setHasTcid:(BOOL) _value_ {
  hasTcid_ = !!_value_;
}
@synthesize tcid;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.tcid = 0;
    self.page = 0;
  }
  return self;
}
static TopicChartBookReq* defaultTopicChartBookReqInstance = nil;
+ (void) initialize {
  if (self == [TopicChartBookReq class]) {
    defaultTopicChartBookReqInstance = [[TopicChartBookReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicChartBookReqInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicChartBookReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTcid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTcid) {
    [output writeUInt32:1 value:self.tcid];
  }
  if (self.hasPage) {
    [output writeUInt32:2 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTcid) {
    size_ += computeUInt32Size(1, self.tcid);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(2, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicChartBookReq*) parseFromData:(NSData*) data {
  return (TopicChartBookReq*)[[[TopicChartBookReq builder] mergeFromData:data] build];
}
+ (TopicChartBookReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartBookReq*)[[[TopicChartBookReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBookReq*) parseFromInputStream:(NSInputStream*) input {
  return (TopicChartBookReq*)[[[TopicChartBookReq builder] mergeFromInputStream:input] build];
}
+ (TopicChartBookReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartBookReq*)[[[TopicChartBookReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBookReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicChartBookReq*)[[[TopicChartBookReq builder] mergeFromCodedInputStream:input] build];
}
+ (TopicChartBookReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartBookReq*)[[[TopicChartBookReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBookReqBuilder*) builder {
  return [[TopicChartBookReqBuilder alloc] init];
}
+ (TopicChartBookReqBuilder*) builderWithPrototype:(TopicChartBookReq*) prototype {
  return [[TopicChartBookReq builder] mergeFrom:prototype];
}
- (TopicChartBookReqBuilder*) builder {
  return [TopicChartBookReq builder];
}
- (TopicChartBookReqBuilder*) toBuilder {
  return [TopicChartBookReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTcid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tcid", [NSNumber numberWithInteger:self.tcid]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTcid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.tcid] forKey: @"tcid"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicChartBookReq class]]) {
    return NO;
  }
  TopicChartBookReq *otherMessage = other;
  return
      self.hasTcid == otherMessage.hasTcid &&
      (!self.hasTcid || self.tcid == otherMessage.tcid) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTcid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.tcid] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicChartBookReqBuilder()
@property (strong) TopicChartBookReq* resultTopicChartBookReq;
@end

@implementation TopicChartBookReqBuilder
@synthesize resultTopicChartBookReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicChartBookReq = [[TopicChartBookReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicChartBookReq;
}
- (TopicChartBookReqBuilder*) clear {
  self.resultTopicChartBookReq = [[TopicChartBookReq alloc] init];
  return self;
}
- (TopicChartBookReqBuilder*) clone {
  return [TopicChartBookReq builderWithPrototype:resultTopicChartBookReq];
}
- (TopicChartBookReq*) defaultInstance {
  return [TopicChartBookReq defaultInstance];
}
- (TopicChartBookReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicChartBookReq*) buildPartial {
  TopicChartBookReq* returnMe = resultTopicChartBookReq;
  self.resultTopicChartBookReq = nil;
  return returnMe;
}
- (TopicChartBookReqBuilder*) mergeFrom:(TopicChartBookReq*) other {
  if (other == [TopicChartBookReq defaultInstance]) {
    return self;
  }
  if (other.hasTcid) {
    [self setTcid:other.tcid];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicChartBookReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicChartBookReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTcid:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPage:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTcid {
  return resultTopicChartBookReq.hasTcid;
}
- (UInt32) tcid {
  return resultTopicChartBookReq.tcid;
}
- (TopicChartBookReqBuilder*) setTcid:(UInt32) value {
  resultTopicChartBookReq.hasTcid = YES;
  resultTopicChartBookReq.tcid = value;
  return self;
}
- (TopicChartBookReqBuilder*) clearTcid {
  resultTopicChartBookReq.hasTcid = NO;
  resultTopicChartBookReq.tcid = 0;
  return self;
}
- (BOOL) hasPage {
  return resultTopicChartBookReq.hasPage;
}
- (UInt32) page {
  return resultTopicChartBookReq.page;
}
- (TopicChartBookReqBuilder*) setPage:(UInt32) value {
  resultTopicChartBookReq.hasPage = YES;
  resultTopicChartBookReq.page = value;
  return self;
}
- (TopicChartBookReqBuilder*) clearPage {
  resultTopicChartBookReq.hasPage = NO;
  resultTopicChartBookReq.page = 0;
  return self;
}
@end

@interface TopicChartBookRes ()
@property (strong) NSMutableArray<Book*> * booksArray;
@property UInt32 psize;
@property UInt32 page;
@end

@implementation TopicChartBookRes

@synthesize booksArray;
@dynamic books;
- (BOOL) hasPsize {
  return !!hasPsize_;
}
- (void) setHasPsize:(BOOL) _value_ {
  hasPsize_ = !!_value_;
}
@synthesize psize;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.psize = 0;
    self.page = 0;
  }
  return self;
}
static TopicChartBookRes* defaultTopicChartBookResInstance = nil;
+ (void) initialize {
  if (self == [TopicChartBookRes class]) {
    defaultTopicChartBookResInstance = [[TopicChartBookRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTopicChartBookResInstance;
}
- (instancetype) defaultInstance {
  return defaultTopicChartBookResInstance;
}
- (NSArray<Book*> *)books {
  return booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [booksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPsize) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  __block BOOL isInitbooks = YES;
   [self.books enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbooks = NO;
      *stop = YES;
    }
  }];
  if (!isInitbooks) return isInitbooks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasPsize) {
    [output writeUInt32:3 value:self.psize];
  }
  if (self.hasPage) {
    [output writeUInt32:5 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasPsize) {
    size_ += computeUInt32Size(3, self.psize);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(5, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TopicChartBookRes*) parseFromData:(NSData*) data {
  return (TopicChartBookRes*)[[[TopicChartBookRes builder] mergeFromData:data] build];
}
+ (TopicChartBookRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartBookRes*)[[[TopicChartBookRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBookRes*) parseFromInputStream:(NSInputStream*) input {
  return (TopicChartBookRes*)[[[TopicChartBookRes builder] mergeFromInputStream:input] build];
}
+ (TopicChartBookRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartBookRes*)[[[TopicChartBookRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBookRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TopicChartBookRes*)[[[TopicChartBookRes builder] mergeFromCodedInputStream:input] build];
}
+ (TopicChartBookRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TopicChartBookRes*)[[[TopicChartBookRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TopicChartBookResBuilder*) builder {
  return [[TopicChartBookResBuilder alloc] init];
}
+ (TopicChartBookResBuilder*) builderWithPrototype:(TopicChartBookRes*) prototype {
  return [[TopicChartBookRes builder] mergeFrom:prototype];
}
- (TopicChartBookResBuilder*) builder {
  return [TopicChartBookRes builder];
}
- (TopicChartBookResBuilder*) toBuilder {
  return [TopicChartBookRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"books"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPsize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"psize", [NSNumber numberWithInteger:self.psize]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Book* element in self.booksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"books"];
  }
  if (self.hasPsize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.psize] forKey: @"psize"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TopicChartBookRes class]]) {
    return NO;
  }
  TopicChartBookRes *otherMessage = other;
  return
      [self.booksArray isEqualToArray:otherMessage.booksArray] &&
      self.hasPsize == otherMessage.hasPsize &&
      (!self.hasPsize || self.psize == otherMessage.psize) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.booksArray enumerateObjectsUsingBlock:^(Book *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPsize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.psize] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TopicChartBookResBuilder()
@property (strong) TopicChartBookRes* resultTopicChartBookRes;
@end

@implementation TopicChartBookResBuilder
@synthesize resultTopicChartBookRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTopicChartBookRes = [[TopicChartBookRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTopicChartBookRes;
}
- (TopicChartBookResBuilder*) clear {
  self.resultTopicChartBookRes = [[TopicChartBookRes alloc] init];
  return self;
}
- (TopicChartBookResBuilder*) clone {
  return [TopicChartBookRes builderWithPrototype:resultTopicChartBookRes];
}
- (TopicChartBookRes*) defaultInstance {
  return [TopicChartBookRes defaultInstance];
}
- (TopicChartBookRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TopicChartBookRes*) buildPartial {
  TopicChartBookRes* returnMe = resultTopicChartBookRes;
  self.resultTopicChartBookRes = nil;
  return returnMe;
}
- (TopicChartBookResBuilder*) mergeFrom:(TopicChartBookRes*) other {
  if (other == [TopicChartBookRes defaultInstance]) {
    return self;
  }
  if (other.booksArray.count > 0) {
    if (resultTopicChartBookRes.booksArray == nil) {
      resultTopicChartBookRes.booksArray = [[NSMutableArray alloc] initWithArray:other.booksArray];
    } else {
      [resultTopicChartBookRes.booksArray addObjectsFromArray:other.booksArray];
    }
  }
  if (other.hasPsize) {
    [self setPsize:other.psize];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TopicChartBookResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TopicChartBookResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BookBuilder* subBuilder = [Book builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBooks:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setPsize:[input readUInt32]];
        break;
      }
      case 40: {
        [self setPage:[input readUInt32]];
        break;
      }
    }
  }
}
- (NSMutableArray<Book*> *)books {
  return resultTopicChartBookRes.booksArray;
}
- (Book*)booksAtIndex:(NSUInteger)index {
  return [resultTopicChartBookRes booksAtIndex:index];
}
- (TopicChartBookResBuilder *)addBooks:(Book*)value {
  if (resultTopicChartBookRes.booksArray == nil) {
    resultTopicChartBookRes.booksArray = [[NSMutableArray alloc]init];
  }
  [resultTopicChartBookRes.booksArray addObject:value];
  return self;
}
- (TopicChartBookResBuilder *)setBooksArray:(NSArray<Book*> *)array {
  resultTopicChartBookRes.booksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TopicChartBookResBuilder *)clearBooks {
  resultTopicChartBookRes.booksArray = nil;
  return self;
}
- (BOOL) hasPsize {
  return resultTopicChartBookRes.hasPsize;
}
- (UInt32) psize {
  return resultTopicChartBookRes.psize;
}
- (TopicChartBookResBuilder*) setPsize:(UInt32) value {
  resultTopicChartBookRes.hasPsize = YES;
  resultTopicChartBookRes.psize = value;
  return self;
}
- (TopicChartBookResBuilder*) clearPsize {
  resultTopicChartBookRes.hasPsize = NO;
  resultTopicChartBookRes.psize = 0;
  return self;
}
- (BOOL) hasPage {
  return resultTopicChartBookRes.hasPage;
}
- (UInt32) page {
  return resultTopicChartBookRes.page;
}
- (TopicChartBookResBuilder*) setPage:(UInt32) value {
  resultTopicChartBookRes.hasPage = YES;
  resultTopicChartBookRes.page = value;
  return self;
}
- (TopicChartBookResBuilder*) clearPage {
  resultTopicChartBookRes.hasPage = NO;
  resultTopicChartBookRes.page = 0;
  return self;
}
@end

@interface VerifyCodeReq ()
@property (strong) NSString* phoneNum;
@property SmsType smsType;
@end

@implementation VerifyCodeReq

- (BOOL) hasPhoneNum {
  return !!hasPhoneNum_;
}
- (void) setHasPhoneNum:(BOOL) _value_ {
  hasPhoneNum_ = !!_value_;
}
@synthesize phoneNum;
- (BOOL) hasSmsType {
  return !!hasSmsType_;
}
- (void) setHasSmsType:(BOOL) _value_ {
  hasSmsType_ = !!_value_;
}
@synthesize smsType;
- (instancetype) init {
  if ((self = [super init])) {
    self.phoneNum = @"";
    self.smsType = SmsTypeSmsReg;
  }
  return self;
}
static VerifyCodeReq* defaultVerifyCodeReqInstance = nil;
+ (void) initialize {
  if (self == [VerifyCodeReq class]) {
    defaultVerifyCodeReqInstance = [[VerifyCodeReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultVerifyCodeReqInstance;
}
- (instancetype) defaultInstance {
  return defaultVerifyCodeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPhoneNum) {
    return NO;
  }
  if (!self.hasSmsType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneNum) {
    [output writeString:1 value:self.phoneNum];
  }
  if (self.hasSmsType) {
    [output writeEnum:2 value:self.smsType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPhoneNum) {
    size_ += computeStringSize(1, self.phoneNum);
  }
  if (self.hasSmsType) {
    size_ += computeEnumSize(2, self.smsType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VerifyCodeReq*) parseFromData:(NSData*) data {
  return (VerifyCodeReq*)[[[VerifyCodeReq builder] mergeFromData:data] build];
}
+ (VerifyCodeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyCodeReq*)[[[VerifyCodeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (VerifyCodeReq*) parseFromInputStream:(NSInputStream*) input {
  return (VerifyCodeReq*)[[[VerifyCodeReq builder] mergeFromInputStream:input] build];
}
+ (VerifyCodeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyCodeReq*)[[[VerifyCodeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VerifyCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (VerifyCodeReq*)[[[VerifyCodeReq builder] mergeFromCodedInputStream:input] build];
}
+ (VerifyCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyCodeReq*)[[[VerifyCodeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VerifyCodeReqBuilder*) builder {
  return [[VerifyCodeReqBuilder alloc] init];
}
+ (VerifyCodeReqBuilder*) builderWithPrototype:(VerifyCodeReq*) prototype {
  return [[VerifyCodeReq builder] mergeFrom:prototype];
}
- (VerifyCodeReqBuilder*) builder {
  return [VerifyCodeReq builder];
}
- (VerifyCodeReqBuilder*) toBuilder {
  return [VerifyCodeReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPhoneNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneNum", self.phoneNum];
  }
  if (self.hasSmsType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"smsType", NSStringFromSmsType(self.smsType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPhoneNum) {
    [dictionary setObject: self.phoneNum forKey: @"phoneNum"];
  }
  if (self.hasSmsType) {
    [dictionary setObject: @(self.smsType) forKey: @"smsType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[VerifyCodeReq class]]) {
    return NO;
  }
  VerifyCodeReq *otherMessage = other;
  return
      self.hasPhoneNum == otherMessage.hasPhoneNum &&
      (!self.hasPhoneNum || [self.phoneNum isEqual:otherMessage.phoneNum]) &&
      self.hasSmsType == otherMessage.hasSmsType &&
      (!self.hasSmsType || self.smsType == otherMessage.smsType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPhoneNum) {
    hashCode = hashCode * 31 + [self.phoneNum hash];
  }
  if (self.hasSmsType) {
    hashCode = hashCode * 31 + self.smsType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface VerifyCodeReqBuilder()
@property (strong) VerifyCodeReq* resultVerifyCodeReq;
@end

@implementation VerifyCodeReqBuilder
@synthesize resultVerifyCodeReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultVerifyCodeReq = [[VerifyCodeReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultVerifyCodeReq;
}
- (VerifyCodeReqBuilder*) clear {
  self.resultVerifyCodeReq = [[VerifyCodeReq alloc] init];
  return self;
}
- (VerifyCodeReqBuilder*) clone {
  return [VerifyCodeReq builderWithPrototype:resultVerifyCodeReq];
}
- (VerifyCodeReq*) defaultInstance {
  return [VerifyCodeReq defaultInstance];
}
- (VerifyCodeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (VerifyCodeReq*) buildPartial {
  VerifyCodeReq* returnMe = resultVerifyCodeReq;
  self.resultVerifyCodeReq = nil;
  return returnMe;
}
- (VerifyCodeReqBuilder*) mergeFrom:(VerifyCodeReq*) other {
  if (other == [VerifyCodeReq defaultInstance]) {
    return self;
  }
  if (other.hasPhoneNum) {
    [self setPhoneNum:other.phoneNum];
  }
  if (other.hasSmsType) {
    [self setSmsType:other.smsType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (VerifyCodeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (VerifyCodeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneNum:[input readString]];
        break;
      }
      case 16: {
        SmsType value = (SmsType)[input readEnum];
        if (SmsTypeIsValidValue(value)) {
          [self setSmsType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasPhoneNum {
  return resultVerifyCodeReq.hasPhoneNum;
}
- (NSString*) phoneNum {
  return resultVerifyCodeReq.phoneNum;
}
- (VerifyCodeReqBuilder*) setPhoneNum:(NSString*) value {
  resultVerifyCodeReq.hasPhoneNum = YES;
  resultVerifyCodeReq.phoneNum = value;
  return self;
}
- (VerifyCodeReqBuilder*) clearPhoneNum {
  resultVerifyCodeReq.hasPhoneNum = NO;
  resultVerifyCodeReq.phoneNum = @"";
  return self;
}
- (BOOL) hasSmsType {
  return resultVerifyCodeReq.hasSmsType;
}
- (SmsType) smsType {
  return resultVerifyCodeReq.smsType;
}
- (VerifyCodeReqBuilder*) setSmsType:(SmsType) value {
  resultVerifyCodeReq.hasSmsType = YES;
  resultVerifyCodeReq.smsType = value;
  return self;
}
- (VerifyCodeReqBuilder*) clearSmsType {
  resultVerifyCodeReq.hasSmsType = NO;
  resultVerifyCodeReq.smsType = SmsTypeSmsReg;
  return self;
}
@end

@interface CheckVerifyCodeReq ()
@property (strong) NSString* phoneNum;
@property (strong) NSString* vcode;
@property SmsType smsType;
@end

@implementation CheckVerifyCodeReq

- (BOOL) hasPhoneNum {
  return !!hasPhoneNum_;
}
- (void) setHasPhoneNum:(BOOL) _value_ {
  hasPhoneNum_ = !!_value_;
}
@synthesize phoneNum;
- (BOOL) hasVcode {
  return !!hasVcode_;
}
- (void) setHasVcode:(BOOL) _value_ {
  hasVcode_ = !!_value_;
}
@synthesize vcode;
- (BOOL) hasSmsType {
  return !!hasSmsType_;
}
- (void) setHasSmsType:(BOOL) _value_ {
  hasSmsType_ = !!_value_;
}
@synthesize smsType;
- (instancetype) init {
  if ((self = [super init])) {
    self.phoneNum = @"";
    self.vcode = @"";
    self.smsType = SmsTypeSmsReg;
  }
  return self;
}
static CheckVerifyCodeReq* defaultCheckVerifyCodeReqInstance = nil;
+ (void) initialize {
  if (self == [CheckVerifyCodeReq class]) {
    defaultCheckVerifyCodeReqInstance = [[CheckVerifyCodeReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCheckVerifyCodeReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCheckVerifyCodeReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPhoneNum) {
    return NO;
  }
  if (!self.hasVcode) {
    return NO;
  }
  if (!self.hasSmsType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneNum) {
    [output writeString:1 value:self.phoneNum];
  }
  if (self.hasVcode) {
    [output writeString:2 value:self.vcode];
  }
  if (self.hasSmsType) {
    [output writeEnum:3 value:self.smsType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPhoneNum) {
    size_ += computeStringSize(1, self.phoneNum);
  }
  if (self.hasVcode) {
    size_ += computeStringSize(2, self.vcode);
  }
  if (self.hasSmsType) {
    size_ += computeEnumSize(3, self.smsType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CheckVerifyCodeReq*) parseFromData:(NSData*) data {
  return (CheckVerifyCodeReq*)[[[CheckVerifyCodeReq builder] mergeFromData:data] build];
}
+ (CheckVerifyCodeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckVerifyCodeReq*)[[[CheckVerifyCodeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CheckVerifyCodeReq*) parseFromInputStream:(NSInputStream*) input {
  return (CheckVerifyCodeReq*)[[[CheckVerifyCodeReq builder] mergeFromInputStream:input] build];
}
+ (CheckVerifyCodeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckVerifyCodeReq*)[[[CheckVerifyCodeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CheckVerifyCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CheckVerifyCodeReq*)[[[CheckVerifyCodeReq builder] mergeFromCodedInputStream:input] build];
}
+ (CheckVerifyCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CheckVerifyCodeReq*)[[[CheckVerifyCodeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CheckVerifyCodeReqBuilder*) builder {
  return [[CheckVerifyCodeReqBuilder alloc] init];
}
+ (CheckVerifyCodeReqBuilder*) builderWithPrototype:(CheckVerifyCodeReq*) prototype {
  return [[CheckVerifyCodeReq builder] mergeFrom:prototype];
}
- (CheckVerifyCodeReqBuilder*) builder {
  return [CheckVerifyCodeReq builder];
}
- (CheckVerifyCodeReqBuilder*) toBuilder {
  return [CheckVerifyCodeReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPhoneNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneNum", self.phoneNum];
  }
  if (self.hasVcode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vcode", self.vcode];
  }
  if (self.hasSmsType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"smsType", NSStringFromSmsType(self.smsType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPhoneNum) {
    [dictionary setObject: self.phoneNum forKey: @"phoneNum"];
  }
  if (self.hasVcode) {
    [dictionary setObject: self.vcode forKey: @"vcode"];
  }
  if (self.hasSmsType) {
    [dictionary setObject: @(self.smsType) forKey: @"smsType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CheckVerifyCodeReq class]]) {
    return NO;
  }
  CheckVerifyCodeReq *otherMessage = other;
  return
      self.hasPhoneNum == otherMessage.hasPhoneNum &&
      (!self.hasPhoneNum || [self.phoneNum isEqual:otherMessage.phoneNum]) &&
      self.hasVcode == otherMessage.hasVcode &&
      (!self.hasVcode || [self.vcode isEqual:otherMessage.vcode]) &&
      self.hasSmsType == otherMessage.hasSmsType &&
      (!self.hasSmsType || self.smsType == otherMessage.smsType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPhoneNum) {
    hashCode = hashCode * 31 + [self.phoneNum hash];
  }
  if (self.hasVcode) {
    hashCode = hashCode * 31 + [self.vcode hash];
  }
  if (self.hasSmsType) {
    hashCode = hashCode * 31 + self.smsType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CheckVerifyCodeReqBuilder()
@property (strong) CheckVerifyCodeReq* resultCheckVerifyCodeReq;
@end

@implementation CheckVerifyCodeReqBuilder
@synthesize resultCheckVerifyCodeReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCheckVerifyCodeReq = [[CheckVerifyCodeReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCheckVerifyCodeReq;
}
- (CheckVerifyCodeReqBuilder*) clear {
  self.resultCheckVerifyCodeReq = [[CheckVerifyCodeReq alloc] init];
  return self;
}
- (CheckVerifyCodeReqBuilder*) clone {
  return [CheckVerifyCodeReq builderWithPrototype:resultCheckVerifyCodeReq];
}
- (CheckVerifyCodeReq*) defaultInstance {
  return [CheckVerifyCodeReq defaultInstance];
}
- (CheckVerifyCodeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CheckVerifyCodeReq*) buildPartial {
  CheckVerifyCodeReq* returnMe = resultCheckVerifyCodeReq;
  self.resultCheckVerifyCodeReq = nil;
  return returnMe;
}
- (CheckVerifyCodeReqBuilder*) mergeFrom:(CheckVerifyCodeReq*) other {
  if (other == [CheckVerifyCodeReq defaultInstance]) {
    return self;
  }
  if (other.hasPhoneNum) {
    [self setPhoneNum:other.phoneNum];
  }
  if (other.hasVcode) {
    [self setVcode:other.vcode];
  }
  if (other.hasSmsType) {
    [self setSmsType:other.smsType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CheckVerifyCodeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CheckVerifyCodeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneNum:[input readString]];
        break;
      }
      case 18: {
        [self setVcode:[input readString]];
        break;
      }
      case 24: {
        SmsType value = (SmsType)[input readEnum];
        if (SmsTypeIsValidValue(value)) {
          [self setSmsType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasPhoneNum {
  return resultCheckVerifyCodeReq.hasPhoneNum;
}
- (NSString*) phoneNum {
  return resultCheckVerifyCodeReq.phoneNum;
}
- (CheckVerifyCodeReqBuilder*) setPhoneNum:(NSString*) value {
  resultCheckVerifyCodeReq.hasPhoneNum = YES;
  resultCheckVerifyCodeReq.phoneNum = value;
  return self;
}
- (CheckVerifyCodeReqBuilder*) clearPhoneNum {
  resultCheckVerifyCodeReq.hasPhoneNum = NO;
  resultCheckVerifyCodeReq.phoneNum = @"";
  return self;
}
- (BOOL) hasVcode {
  return resultCheckVerifyCodeReq.hasVcode;
}
- (NSString*) vcode {
  return resultCheckVerifyCodeReq.vcode;
}
- (CheckVerifyCodeReqBuilder*) setVcode:(NSString*) value {
  resultCheckVerifyCodeReq.hasVcode = YES;
  resultCheckVerifyCodeReq.vcode = value;
  return self;
}
- (CheckVerifyCodeReqBuilder*) clearVcode {
  resultCheckVerifyCodeReq.hasVcode = NO;
  resultCheckVerifyCodeReq.vcode = @"";
  return self;
}
- (BOOL) hasSmsType {
  return resultCheckVerifyCodeReq.hasSmsType;
}
- (SmsType) smsType {
  return resultCheckVerifyCodeReq.smsType;
}
- (CheckVerifyCodeReqBuilder*) setSmsType:(SmsType) value {
  resultCheckVerifyCodeReq.hasSmsType = YES;
  resultCheckVerifyCodeReq.smsType = value;
  return self;
}
- (CheckVerifyCodeReqBuilder*) clearSmsType {
  resultCheckVerifyCodeReq.hasSmsType = NO;
  resultCheckVerifyCodeReq.smsType = SmsTypeSmsReg;
  return self;
}
@end

@interface Province ()
@property UInt32 id;
@property (strong) NSString* name;
@end

@implementation Province

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
  }
  return self;
}
static Province* defaultProvinceInstance = nil;
+ (void) initialize {
  if (self == [Province class]) {
    defaultProvinceInstance = [[Province alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProvinceInstance;
}
- (instancetype) defaultInstance {
  return defaultProvinceInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeUInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeUInt32Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Province*) parseFromData:(NSData*) data {
  return (Province*)[[[Province builder] mergeFromData:data] build];
}
+ (Province*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Province*)[[[Province builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Province*) parseFromInputStream:(NSInputStream*) input {
  return (Province*)[[[Province builder] mergeFromInputStream:input] build];
}
+ (Province*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Province*)[[[Province builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Province*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Province*)[[[Province builder] mergeFromCodedInputStream:input] build];
}
+ (Province*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Province*)[[[Province builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceBuilder*) builder {
  return [[ProvinceBuilder alloc] init];
}
+ (ProvinceBuilder*) builderWithPrototype:(Province*) prototype {
  return [[Province builder] mergeFrom:prototype];
}
- (ProvinceBuilder*) builder {
  return [Province builder];
}
- (ProvinceBuilder*) toBuilder {
  return [Province builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInteger:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Province class]]) {
    return NO;
  }
  Province *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProvinceBuilder()
@property (strong) Province* resultProvince;
@end

@implementation ProvinceBuilder
@synthesize resultProvince;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultProvince = [[Province alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultProvince;
}
- (ProvinceBuilder*) clear {
  self.resultProvince = [[Province alloc] init];
  return self;
}
- (ProvinceBuilder*) clone {
  return [Province builderWithPrototype:resultProvince];
}
- (Province*) defaultInstance {
  return [Province defaultInstance];
}
- (Province*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Province*) buildPartial {
  Province* returnMe = resultProvince;
  self.resultProvince = nil;
  return returnMe;
}
- (ProvinceBuilder*) mergeFrom:(Province*) other {
  if (other == [Province defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProvinceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProvinceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultProvince.hasId;
}
- (UInt32) id {
  return resultProvince.id;
}
- (ProvinceBuilder*) setId:(UInt32) value {
  resultProvince.hasId = YES;
  resultProvince.id = value;
  return self;
}
- (ProvinceBuilder*) clearId {
  resultProvince.hasId = NO;
  resultProvince.id = 0;
  return self;
}
- (BOOL) hasName {
  return resultProvince.hasName;
}
- (NSString*) name {
  return resultProvince.name;
}
- (ProvinceBuilder*) setName:(NSString*) value {
  resultProvince.hasName = YES;
  resultProvince.name = value;
  return self;
}
- (ProvinceBuilder*) clearName {
  resultProvince.hasName = NO;
  resultProvince.name = @"";
  return self;
}
@end

@interface City ()
@property UInt32 provinceId;
@property UInt32 id;
@property (strong) NSString* name;
@end

@implementation City

- (BOOL) hasProvinceId {
  return !!hasProvinceId_;
}
- (void) setHasProvinceId:(BOOL) _value_ {
  hasProvinceId_ = !!_value_;
}
@synthesize provinceId;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.provinceId = 0;
    self.id = 0;
    self.name = @"";
  }
  return self;
}
static City* defaultCityInstance = nil;
+ (void) initialize {
  if (self == [City class]) {
    defaultCityInstance = [[City alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCityInstance;
}
- (instancetype) defaultInstance {
  return defaultCityInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProvinceId) {
    return NO;
  }
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProvinceId) {
    [output writeUInt32:1 value:self.provinceId];
  }
  if (self.hasId) {
    [output writeUInt32:3 value:self.id];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProvinceId) {
    size_ += computeUInt32Size(1, self.provinceId);
  }
  if (self.hasId) {
    size_ += computeUInt32Size(3, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (City*) parseFromData:(NSData*) data {
  return (City*)[[[City builder] mergeFromData:data] build];
}
+ (City*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (City*)[[[City builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (City*) parseFromInputStream:(NSInputStream*) input {
  return (City*)[[[City builder] mergeFromInputStream:input] build];
}
+ (City*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (City*)[[[City builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (City*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (City*)[[[City builder] mergeFromCodedInputStream:input] build];
}
+ (City*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (City*)[[[City builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CityBuilder*) builder {
  return [[CityBuilder alloc] init];
}
+ (CityBuilder*) builderWithPrototype:(City*) prototype {
  return [[City builder] mergeFrom:prototype];
}
- (CityBuilder*) builder {
  return [City builder];
}
- (CityBuilder*) toBuilder {
  return [City builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProvinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceId", [NSNumber numberWithInteger:self.provinceId]];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInteger:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProvinceId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.provinceId] forKey: @"provinceId"];
  }
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[City class]]) {
    return NO;
  }
  City *otherMessage = other;
  return
      self.hasProvinceId == otherMessage.hasProvinceId &&
      (!self.hasProvinceId || self.provinceId == otherMessage.provinceId) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProvinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.provinceId] hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CityBuilder()
@property (strong) City* resultCity;
@end

@implementation CityBuilder
@synthesize resultCity;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCity = [[City alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCity;
}
- (CityBuilder*) clear {
  self.resultCity = [[City alloc] init];
  return self;
}
- (CityBuilder*) clone {
  return [City builderWithPrototype:resultCity];
}
- (City*) defaultInstance {
  return [City defaultInstance];
}
- (City*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (City*) buildPartial {
  City* returnMe = resultCity;
  self.resultCity = nil;
  return returnMe;
}
- (CityBuilder*) mergeFrom:(City*) other {
  if (other == [City defaultInstance]) {
    return self;
  }
  if (other.hasProvinceId) {
    [self setProvinceId:other.provinceId];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProvinceId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setId:[input readUInt32]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasProvinceId {
  return resultCity.hasProvinceId;
}
- (UInt32) provinceId {
  return resultCity.provinceId;
}
- (CityBuilder*) setProvinceId:(UInt32) value {
  resultCity.hasProvinceId = YES;
  resultCity.provinceId = value;
  return self;
}
- (CityBuilder*) clearProvinceId {
  resultCity.hasProvinceId = NO;
  resultCity.provinceId = 0;
  return self;
}
- (BOOL) hasId {
  return resultCity.hasId;
}
- (UInt32) id {
  return resultCity.id;
}
- (CityBuilder*) setId:(UInt32) value {
  resultCity.hasId = YES;
  resultCity.id = value;
  return self;
}
- (CityBuilder*) clearId {
  resultCity.hasId = NO;
  resultCity.id = 0;
  return self;
}
- (BOOL) hasName {
  return resultCity.hasName;
}
- (NSString*) name {
  return resultCity.name;
}
- (CityBuilder*) setName:(NSString*) value {
  resultCity.hasName = YES;
  resultCity.name = value;
  return self;
}
- (CityBuilder*) clearName {
  resultCity.hasName = NO;
  resultCity.name = @"";
  return self;
}
@end

@interface ProvinceCityReq ()
@property UInt32 provinceId;
@end

@implementation ProvinceCityReq

- (BOOL) hasProvinceId {
  return !!hasProvinceId_;
}
- (void) setHasProvinceId:(BOOL) _value_ {
  hasProvinceId_ = !!_value_;
}
@synthesize provinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.provinceId = 0;
  }
  return self;
}
static ProvinceCityReq* defaultProvinceCityReqInstance = nil;
+ (void) initialize {
  if (self == [ProvinceCityReq class]) {
    defaultProvinceCityReqInstance = [[ProvinceCityReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProvinceCityReqInstance;
}
- (instancetype) defaultInstance {
  return defaultProvinceCityReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProvinceId) {
    [output writeUInt32:1 value:self.provinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProvinceId) {
    size_ += computeUInt32Size(1, self.provinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProvinceCityReq*) parseFromData:(NSData*) data {
  return (ProvinceCityReq*)[[[ProvinceCityReq builder] mergeFromData:data] build];
}
+ (ProvinceCityReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceCityReq*)[[[ProvinceCityReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProvinceCityReq*) parseFromInputStream:(NSInputStream*) input {
  return (ProvinceCityReq*)[[[ProvinceCityReq builder] mergeFromInputStream:input] build];
}
+ (ProvinceCityReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceCityReq*)[[[ProvinceCityReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceCityReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProvinceCityReq*)[[[ProvinceCityReq builder] mergeFromCodedInputStream:input] build];
}
+ (ProvinceCityReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceCityReq*)[[[ProvinceCityReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceCityReqBuilder*) builder {
  return [[ProvinceCityReqBuilder alloc] init];
}
+ (ProvinceCityReqBuilder*) builderWithPrototype:(ProvinceCityReq*) prototype {
  return [[ProvinceCityReq builder] mergeFrom:prototype];
}
- (ProvinceCityReqBuilder*) builder {
  return [ProvinceCityReq builder];
}
- (ProvinceCityReqBuilder*) toBuilder {
  return [ProvinceCityReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProvinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provinceId", [NSNumber numberWithInteger:self.provinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProvinceId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.provinceId] forKey: @"provinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProvinceCityReq class]]) {
    return NO;
  }
  ProvinceCityReq *otherMessage = other;
  return
      self.hasProvinceId == otherMessage.hasProvinceId &&
      (!self.hasProvinceId || self.provinceId == otherMessage.provinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProvinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.provinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProvinceCityReqBuilder()
@property (strong) ProvinceCityReq* resultProvinceCityReq;
@end

@implementation ProvinceCityReqBuilder
@synthesize resultProvinceCityReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultProvinceCityReq = [[ProvinceCityReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultProvinceCityReq;
}
- (ProvinceCityReqBuilder*) clear {
  self.resultProvinceCityReq = [[ProvinceCityReq alloc] init];
  return self;
}
- (ProvinceCityReqBuilder*) clone {
  return [ProvinceCityReq builderWithPrototype:resultProvinceCityReq];
}
- (ProvinceCityReq*) defaultInstance {
  return [ProvinceCityReq defaultInstance];
}
- (ProvinceCityReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProvinceCityReq*) buildPartial {
  ProvinceCityReq* returnMe = resultProvinceCityReq;
  self.resultProvinceCityReq = nil;
  return returnMe;
}
- (ProvinceCityReqBuilder*) mergeFrom:(ProvinceCityReq*) other {
  if (other == [ProvinceCityReq defaultInstance]) {
    return self;
  }
  if (other.hasProvinceId) {
    [self setProvinceId:other.provinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProvinceCityReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProvinceCityReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProvinceId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasProvinceId {
  return resultProvinceCityReq.hasProvinceId;
}
- (UInt32) provinceId {
  return resultProvinceCityReq.provinceId;
}
- (ProvinceCityReqBuilder*) setProvinceId:(UInt32) value {
  resultProvinceCityReq.hasProvinceId = YES;
  resultProvinceCityReq.provinceId = value;
  return self;
}
- (ProvinceCityReqBuilder*) clearProvinceId {
  resultProvinceCityReq.hasProvinceId = NO;
  resultProvinceCityReq.provinceId = 0;
  return self;
}
@end

@interface ProvinceCityRes ()
@property (strong) NSMutableArray<Province*> * provincesArray;
@property (strong) NSMutableArray<City*> * citysArray;
@end

@implementation ProvinceCityRes

@synthesize provincesArray;
@dynamic provinces;
@synthesize citysArray;
@dynamic citys;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static ProvinceCityRes* defaultProvinceCityResInstance = nil;
+ (void) initialize {
  if (self == [ProvinceCityRes class]) {
    defaultProvinceCityResInstance = [[ProvinceCityRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProvinceCityResInstance;
}
- (instancetype) defaultInstance {
  return defaultProvinceCityResInstance;
}
- (NSArray<Province*> *)provinces {
  return provincesArray;
}
- (Province*)provincesAtIndex:(NSUInteger)index {
  return [provincesArray objectAtIndex:index];
}
- (NSArray<City*> *)citys {
  return citysArray;
}
- (City*)citysAtIndex:(NSUInteger)index {
  return [citysArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitprovinces = YES;
   [self.provinces enumerateObjectsUsingBlock:^(Province *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitprovinces = NO;
      *stop = YES;
    }
  }];
  if (!isInitprovinces) return isInitprovinces;
  __block BOOL isInitcitys = YES;
   [self.citys enumerateObjectsUsingBlock:^(City *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcitys = NO;
      *stop = YES;
    }
  }];
  if (!isInitcitys) return isInitcitys;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.provincesArray enumerateObjectsUsingBlock:^(Province *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.citysArray enumerateObjectsUsingBlock:^(City *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.provincesArray enumerateObjectsUsingBlock:^(Province *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.citysArray enumerateObjectsUsingBlock:^(City *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProvinceCityRes*) parseFromData:(NSData*) data {
  return (ProvinceCityRes*)[[[ProvinceCityRes builder] mergeFromData:data] build];
}
+ (ProvinceCityRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceCityRes*)[[[ProvinceCityRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProvinceCityRes*) parseFromInputStream:(NSInputStream*) input {
  return (ProvinceCityRes*)[[[ProvinceCityRes builder] mergeFromInputStream:input] build];
}
+ (ProvinceCityRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceCityRes*)[[[ProvinceCityRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceCityRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProvinceCityRes*)[[[ProvinceCityRes builder] mergeFromCodedInputStream:input] build];
}
+ (ProvinceCityRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProvinceCityRes*)[[[ProvinceCityRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProvinceCityResBuilder*) builder {
  return [[ProvinceCityResBuilder alloc] init];
}
+ (ProvinceCityResBuilder*) builderWithPrototype:(ProvinceCityRes*) prototype {
  return [[ProvinceCityRes builder] mergeFrom:prototype];
}
- (ProvinceCityResBuilder*) builder {
  return [ProvinceCityRes builder];
}
- (ProvinceCityResBuilder*) toBuilder {
  return [ProvinceCityRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.provincesArray enumerateObjectsUsingBlock:^(Province *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"provinces"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.citysArray enumerateObjectsUsingBlock:^(City *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"citys"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Province* element in self.provincesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"provinces"];
  }
  for (City* element in self.citysArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"citys"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProvinceCityRes class]]) {
    return NO;
  }
  ProvinceCityRes *otherMessage = other;
  return
      [self.provincesArray isEqualToArray:otherMessage.provincesArray] &&
      [self.citysArray isEqualToArray:otherMessage.citysArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.provincesArray enumerateObjectsUsingBlock:^(Province *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.citysArray enumerateObjectsUsingBlock:^(City *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProvinceCityResBuilder()
@property (strong) ProvinceCityRes* resultProvinceCityRes;
@end

@implementation ProvinceCityResBuilder
@synthesize resultProvinceCityRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultProvinceCityRes = [[ProvinceCityRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultProvinceCityRes;
}
- (ProvinceCityResBuilder*) clear {
  self.resultProvinceCityRes = [[ProvinceCityRes alloc] init];
  return self;
}
- (ProvinceCityResBuilder*) clone {
  return [ProvinceCityRes builderWithPrototype:resultProvinceCityRes];
}
- (ProvinceCityRes*) defaultInstance {
  return [ProvinceCityRes defaultInstance];
}
- (ProvinceCityRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProvinceCityRes*) buildPartial {
  ProvinceCityRes* returnMe = resultProvinceCityRes;
  self.resultProvinceCityRes = nil;
  return returnMe;
}
- (ProvinceCityResBuilder*) mergeFrom:(ProvinceCityRes*) other {
  if (other == [ProvinceCityRes defaultInstance]) {
    return self;
  }
  if (other.provincesArray.count > 0) {
    if (resultProvinceCityRes.provincesArray == nil) {
      resultProvinceCityRes.provincesArray = [[NSMutableArray alloc] initWithArray:other.provincesArray];
    } else {
      [resultProvinceCityRes.provincesArray addObjectsFromArray:other.provincesArray];
    }
  }
  if (other.citysArray.count > 0) {
    if (resultProvinceCityRes.citysArray == nil) {
      resultProvinceCityRes.citysArray = [[NSMutableArray alloc] initWithArray:other.citysArray];
    } else {
      [resultProvinceCityRes.citysArray addObjectsFromArray:other.citysArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProvinceCityResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProvinceCityResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ProvinceBuilder* subBuilder = [Province builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProvinces:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        CityBuilder* subBuilder = [City builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCitys:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray<Province*> *)provinces {
  return resultProvinceCityRes.provincesArray;
}
- (Province*)provincesAtIndex:(NSUInteger)index {
  return [resultProvinceCityRes provincesAtIndex:index];
}
- (ProvinceCityResBuilder *)addProvinces:(Province*)value {
  if (resultProvinceCityRes.provincesArray == nil) {
    resultProvinceCityRes.provincesArray = [[NSMutableArray alloc]init];
  }
  [resultProvinceCityRes.provincesArray addObject:value];
  return self;
}
- (ProvinceCityResBuilder *)setProvincesArray:(NSArray<Province*> *)array {
  resultProvinceCityRes.provincesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (ProvinceCityResBuilder *)clearProvinces {
  resultProvinceCityRes.provincesArray = nil;
  return self;
}
- (NSMutableArray<City*> *)citys {
  return resultProvinceCityRes.citysArray;
}
- (City*)citysAtIndex:(NSUInteger)index {
  return [resultProvinceCityRes citysAtIndex:index];
}
- (ProvinceCityResBuilder *)addCitys:(City*)value {
  if (resultProvinceCityRes.citysArray == nil) {
    resultProvinceCityRes.citysArray = [[NSMutableArray alloc]init];
  }
  [resultProvinceCityRes.citysArray addObject:value];
  return self;
}
- (ProvinceCityResBuilder *)setCitysArray:(NSArray<City*> *)array {
  resultProvinceCityRes.citysArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (ProvinceCityResBuilder *)clearCitys {
  resultProvinceCityRes.citysArray = nil;
  return self;
}
@end

@interface FeedbackReq ()
@property UInt32 type;
@property (strong) NSString* words;
@property (strong) NSString* phoneNum;
@property (strong) NSString* email;
@end

@implementation FeedbackReq

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasWords {
  return !!hasWords_;
}
- (void) setHasWords:(BOOL) _value_ {
  hasWords_ = !!_value_;
}
@synthesize words;
- (BOOL) hasPhoneNum {
  return !!hasPhoneNum_;
}
- (void) setHasPhoneNum:(BOOL) _value_ {
  hasPhoneNum_ = !!_value_;
}
@synthesize phoneNum;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) _value_ {
  hasEmail_ = !!_value_;
}
@synthesize email;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.words = @"";
    self.phoneNum = @"";
    self.email = @"";
  }
  return self;
}
static FeedbackReq* defaultFeedbackReqInstance = nil;
+ (void) initialize {
  if (self == [FeedbackReq class]) {
    defaultFeedbackReqInstance = [[FeedbackReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultFeedbackReqInstance;
}
- (instancetype) defaultInstance {
  return defaultFeedbackReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasWords) {
    return NO;
  }
  if (!self.hasPhoneNum) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasWords) {
    [output writeString:2 value:self.words];
  }
  if (self.hasPhoneNum) {
    [output writeString:3 value:self.phoneNum];
  }
  if (self.hasEmail) {
    [output writeString:4 value:self.email];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  if (self.hasWords) {
    size_ += computeStringSize(2, self.words);
  }
  if (self.hasPhoneNum) {
    size_ += computeStringSize(3, self.phoneNum);
  }
  if (self.hasEmail) {
    size_ += computeStringSize(4, self.email);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (FeedbackReq*) parseFromData:(NSData*) data {
  return (FeedbackReq*)[[[FeedbackReq builder] mergeFromData:data] build];
}
+ (FeedbackReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FeedbackReq*)[[[FeedbackReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FeedbackReq*) parseFromInputStream:(NSInputStream*) input {
  return (FeedbackReq*)[[[FeedbackReq builder] mergeFromInputStream:input] build];
}
+ (FeedbackReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FeedbackReq*)[[[FeedbackReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FeedbackReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FeedbackReq*)[[[FeedbackReq builder] mergeFromCodedInputStream:input] build];
}
+ (FeedbackReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FeedbackReq*)[[[FeedbackReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FeedbackReqBuilder*) builder {
  return [[FeedbackReqBuilder alloc] init];
}
+ (FeedbackReqBuilder*) builderWithPrototype:(FeedbackReq*) prototype {
  return [[FeedbackReq builder] mergeFrom:prototype];
}
- (FeedbackReqBuilder*) builder {
  return [FeedbackReq builder];
}
- (FeedbackReqBuilder*) toBuilder {
  return [FeedbackReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasWords) {
    [output appendFormat:@"%@%@: %@\n", indent, @"words", self.words];
  }
  if (self.hasPhoneNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneNum", self.phoneNum];
  }
  if (self.hasEmail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"email", self.email];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasWords) {
    [dictionary setObject: self.words forKey: @"words"];
  }
  if (self.hasPhoneNum) {
    [dictionary setObject: self.phoneNum forKey: @"phoneNum"];
  }
  if (self.hasEmail) {
    [dictionary setObject: self.email forKey: @"email"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FeedbackReq class]]) {
    return NO;
  }
  FeedbackReq *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasWords == otherMessage.hasWords &&
      (!self.hasWords || [self.words isEqual:otherMessage.words]) &&
      self.hasPhoneNum == otherMessage.hasPhoneNum &&
      (!self.hasPhoneNum || [self.phoneNum isEqual:otherMessage.phoneNum]) &&
      self.hasEmail == otherMessage.hasEmail &&
      (!self.hasEmail || [self.email isEqual:otherMessage.email]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasWords) {
    hashCode = hashCode * 31 + [self.words hash];
  }
  if (self.hasPhoneNum) {
    hashCode = hashCode * 31 + [self.phoneNum hash];
  }
  if (self.hasEmail) {
    hashCode = hashCode * 31 + [self.email hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FeedbackReqBuilder()
@property (strong) FeedbackReq* resultFeedbackReq;
@end

@implementation FeedbackReqBuilder
@synthesize resultFeedbackReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFeedbackReq = [[FeedbackReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFeedbackReq;
}
- (FeedbackReqBuilder*) clear {
  self.resultFeedbackReq = [[FeedbackReq alloc] init];
  return self;
}
- (FeedbackReqBuilder*) clone {
  return [FeedbackReq builderWithPrototype:resultFeedbackReq];
}
- (FeedbackReq*) defaultInstance {
  return [FeedbackReq defaultInstance];
}
- (FeedbackReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FeedbackReq*) buildPartial {
  FeedbackReq* returnMe = resultFeedbackReq;
  self.resultFeedbackReq = nil;
  return returnMe;
}
- (FeedbackReqBuilder*) mergeFrom:(FeedbackReq*) other {
  if (other == [FeedbackReq defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasWords) {
    [self setWords:other.words];
  }
  if (other.hasPhoneNum) {
    [self setPhoneNum:other.phoneNum];
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FeedbackReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FeedbackReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 18: {
        [self setWords:[input readString]];
        break;
      }
      case 26: {
        [self setPhoneNum:[input readString]];
        break;
      }
      case 34: {
        [self setEmail:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultFeedbackReq.hasType;
}
- (UInt32) type {
  return resultFeedbackReq.type;
}
- (FeedbackReqBuilder*) setType:(UInt32) value {
  resultFeedbackReq.hasType = YES;
  resultFeedbackReq.type = value;
  return self;
}
- (FeedbackReqBuilder*) clearType {
  resultFeedbackReq.hasType = NO;
  resultFeedbackReq.type = 0;
  return self;
}
- (BOOL) hasWords {
  return resultFeedbackReq.hasWords;
}
- (NSString*) words {
  return resultFeedbackReq.words;
}
- (FeedbackReqBuilder*) setWords:(NSString*) value {
  resultFeedbackReq.hasWords = YES;
  resultFeedbackReq.words = value;
  return self;
}
- (FeedbackReqBuilder*) clearWords {
  resultFeedbackReq.hasWords = NO;
  resultFeedbackReq.words = @"";
  return self;
}
- (BOOL) hasPhoneNum {
  return resultFeedbackReq.hasPhoneNum;
}
- (NSString*) phoneNum {
  return resultFeedbackReq.phoneNum;
}
- (FeedbackReqBuilder*) setPhoneNum:(NSString*) value {
  resultFeedbackReq.hasPhoneNum = YES;
  resultFeedbackReq.phoneNum = value;
  return self;
}
- (FeedbackReqBuilder*) clearPhoneNum {
  resultFeedbackReq.hasPhoneNum = NO;
  resultFeedbackReq.phoneNum = @"";
  return self;
}
- (BOOL) hasEmail {
  return resultFeedbackReq.hasEmail;
}
- (NSString*) email {
  return resultFeedbackReq.email;
}
- (FeedbackReqBuilder*) setEmail:(NSString*) value {
  resultFeedbackReq.hasEmail = YES;
  resultFeedbackReq.email = value;
  return self;
}
- (FeedbackReqBuilder*) clearEmail {
  resultFeedbackReq.hasEmail = NO;
  resultFeedbackReq.email = @"";
  return self;
}
@end

@interface PhoneNumRegAndResetPwdReq ()
@property UInt32 reqType;
@property (strong) NSString* phoneNum;
@property (strong) NSString* vcode;
@property (strong) NSString* md5Pwd;
@end

@implementation PhoneNumRegAndResetPwdReq

- (BOOL) hasReqType {
  return !!hasReqType_;
}
- (void) setHasReqType:(BOOL) _value_ {
  hasReqType_ = !!_value_;
}
@synthesize reqType;
- (BOOL) hasPhoneNum {
  return !!hasPhoneNum_;
}
- (void) setHasPhoneNum:(BOOL) _value_ {
  hasPhoneNum_ = !!_value_;
}
@synthesize phoneNum;
- (BOOL) hasVcode {
  return !!hasVcode_;
}
- (void) setHasVcode:(BOOL) _value_ {
  hasVcode_ = !!_value_;
}
@synthesize vcode;
- (BOOL) hasMd5Pwd {
  return !!hasMd5Pwd_;
}
- (void) setHasMd5Pwd:(BOOL) _value_ {
  hasMd5Pwd_ = !!_value_;
}
@synthesize md5Pwd;
- (instancetype) init {
  if ((self = [super init])) {
    self.reqType = 0;
    self.phoneNum = @"";
    self.vcode = @"";
    self.md5Pwd = @"";
  }
  return self;
}
static PhoneNumRegAndResetPwdReq* defaultPhoneNumRegAndResetPwdReqInstance = nil;
+ (void) initialize {
  if (self == [PhoneNumRegAndResetPwdReq class]) {
    defaultPhoneNumRegAndResetPwdReqInstance = [[PhoneNumRegAndResetPwdReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPhoneNumRegAndResetPwdReqInstance;
}
- (instancetype) defaultInstance {
  return defaultPhoneNumRegAndResetPwdReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasReqType) {
    return NO;
  }
  if (!self.hasPhoneNum) {
    return NO;
  }
  if (!self.hasVcode) {
    return NO;
  }
  if (!self.hasMd5Pwd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReqType) {
    [output writeUInt32:1 value:self.reqType];
  }
  if (self.hasPhoneNum) {
    [output writeString:2 value:self.phoneNum];
  }
  if (self.hasVcode) {
    [output writeString:3 value:self.vcode];
  }
  if (self.hasMd5Pwd) {
    [output writeString:4 value:self.md5Pwd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReqType) {
    size_ += computeUInt32Size(1, self.reqType);
  }
  if (self.hasPhoneNum) {
    size_ += computeStringSize(2, self.phoneNum);
  }
  if (self.hasVcode) {
    size_ += computeStringSize(3, self.vcode);
  }
  if (self.hasMd5Pwd) {
    size_ += computeStringSize(4, self.md5Pwd);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PhoneNumRegAndResetPwdReq*) parseFromData:(NSData*) data {
  return (PhoneNumRegAndResetPwdReq*)[[[PhoneNumRegAndResetPwdReq builder] mergeFromData:data] build];
}
+ (PhoneNumRegAndResetPwdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PhoneNumRegAndResetPwdReq*)[[[PhoneNumRegAndResetPwdReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PhoneNumRegAndResetPwdReq*) parseFromInputStream:(NSInputStream*) input {
  return (PhoneNumRegAndResetPwdReq*)[[[PhoneNumRegAndResetPwdReq builder] mergeFromInputStream:input] build];
}
+ (PhoneNumRegAndResetPwdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PhoneNumRegAndResetPwdReq*)[[[PhoneNumRegAndResetPwdReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PhoneNumRegAndResetPwdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PhoneNumRegAndResetPwdReq*)[[[PhoneNumRegAndResetPwdReq builder] mergeFromCodedInputStream:input] build];
}
+ (PhoneNumRegAndResetPwdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PhoneNumRegAndResetPwdReq*)[[[PhoneNumRegAndResetPwdReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PhoneNumRegAndResetPwdReqBuilder*) builder {
  return [[PhoneNumRegAndResetPwdReqBuilder alloc] init];
}
+ (PhoneNumRegAndResetPwdReqBuilder*) builderWithPrototype:(PhoneNumRegAndResetPwdReq*) prototype {
  return [[PhoneNumRegAndResetPwdReq builder] mergeFrom:prototype];
}
- (PhoneNumRegAndResetPwdReqBuilder*) builder {
  return [PhoneNumRegAndResetPwdReq builder];
}
- (PhoneNumRegAndResetPwdReqBuilder*) toBuilder {
  return [PhoneNumRegAndResetPwdReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReqType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reqType", [NSNumber numberWithInteger:self.reqType]];
  }
  if (self.hasPhoneNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phoneNum", self.phoneNum];
  }
  if (self.hasVcode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vcode", self.vcode];
  }
  if (self.hasMd5Pwd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"md5Pwd", self.md5Pwd];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReqType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.reqType] forKey: @"reqType"];
  }
  if (self.hasPhoneNum) {
    [dictionary setObject: self.phoneNum forKey: @"phoneNum"];
  }
  if (self.hasVcode) {
    [dictionary setObject: self.vcode forKey: @"vcode"];
  }
  if (self.hasMd5Pwd) {
    [dictionary setObject: self.md5Pwd forKey: @"md5Pwd"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PhoneNumRegAndResetPwdReq class]]) {
    return NO;
  }
  PhoneNumRegAndResetPwdReq *otherMessage = other;
  return
      self.hasReqType == otherMessage.hasReqType &&
      (!self.hasReqType || self.reqType == otherMessage.reqType) &&
      self.hasPhoneNum == otherMessage.hasPhoneNum &&
      (!self.hasPhoneNum || [self.phoneNum isEqual:otherMessage.phoneNum]) &&
      self.hasVcode == otherMessage.hasVcode &&
      (!self.hasVcode || [self.vcode isEqual:otherMessage.vcode]) &&
      self.hasMd5Pwd == otherMessage.hasMd5Pwd &&
      (!self.hasMd5Pwd || [self.md5Pwd isEqual:otherMessage.md5Pwd]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReqType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reqType] hash];
  }
  if (self.hasPhoneNum) {
    hashCode = hashCode * 31 + [self.phoneNum hash];
  }
  if (self.hasVcode) {
    hashCode = hashCode * 31 + [self.vcode hash];
  }
  if (self.hasMd5Pwd) {
    hashCode = hashCode * 31 + [self.md5Pwd hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PhoneNumRegAndResetPwdReqBuilder()
@property (strong) PhoneNumRegAndResetPwdReq* resultPhoneNumRegAndResetPwdReq;
@end

@implementation PhoneNumRegAndResetPwdReqBuilder
@synthesize resultPhoneNumRegAndResetPwdReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPhoneNumRegAndResetPwdReq = [[PhoneNumRegAndResetPwdReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPhoneNumRegAndResetPwdReq;
}
- (PhoneNumRegAndResetPwdReqBuilder*) clear {
  self.resultPhoneNumRegAndResetPwdReq = [[PhoneNumRegAndResetPwdReq alloc] init];
  return self;
}
- (PhoneNumRegAndResetPwdReqBuilder*) clone {
  return [PhoneNumRegAndResetPwdReq builderWithPrototype:resultPhoneNumRegAndResetPwdReq];
}
- (PhoneNumRegAndResetPwdReq*) defaultInstance {
  return [PhoneNumRegAndResetPwdReq defaultInstance];
}
- (PhoneNumRegAndResetPwdReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PhoneNumRegAndResetPwdReq*) buildPartial {
  PhoneNumRegAndResetPwdReq* returnMe = resultPhoneNumRegAndResetPwdReq;
  self.resultPhoneNumRegAndResetPwdReq = nil;
  return returnMe;
}
- (PhoneNumRegAndResetPwdReqBuilder*) mergeFrom:(PhoneNumRegAndResetPwdReq*) other {
  if (other == [PhoneNumRegAndResetPwdReq defaultInstance]) {
    return self;
  }
  if (other.hasReqType) {
    [self setReqType:other.reqType];
  }
  if (other.hasPhoneNum) {
    [self setPhoneNum:other.phoneNum];
  }
  if (other.hasVcode) {
    [self setVcode:other.vcode];
  }
  if (other.hasMd5Pwd) {
    [self setMd5Pwd:other.md5Pwd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PhoneNumRegAndResetPwdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PhoneNumRegAndResetPwdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setReqType:[input readUInt32]];
        break;
      }
      case 18: {
        [self setPhoneNum:[input readString]];
        break;
      }
      case 26: {
        [self setVcode:[input readString]];
        break;
      }
      case 34: {
        [self setMd5Pwd:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasReqType {
  return resultPhoneNumRegAndResetPwdReq.hasReqType;
}
- (UInt32) reqType {
  return resultPhoneNumRegAndResetPwdReq.reqType;
}
- (PhoneNumRegAndResetPwdReqBuilder*) setReqType:(UInt32) value {
  resultPhoneNumRegAndResetPwdReq.hasReqType = YES;
  resultPhoneNumRegAndResetPwdReq.reqType = value;
  return self;
}
- (PhoneNumRegAndResetPwdReqBuilder*) clearReqType {
  resultPhoneNumRegAndResetPwdReq.hasReqType = NO;
  resultPhoneNumRegAndResetPwdReq.reqType = 0;
  return self;
}
- (BOOL) hasPhoneNum {
  return resultPhoneNumRegAndResetPwdReq.hasPhoneNum;
}
- (NSString*) phoneNum {
  return resultPhoneNumRegAndResetPwdReq.phoneNum;
}
- (PhoneNumRegAndResetPwdReqBuilder*) setPhoneNum:(NSString*) value {
  resultPhoneNumRegAndResetPwdReq.hasPhoneNum = YES;
  resultPhoneNumRegAndResetPwdReq.phoneNum = value;
  return self;
}
- (PhoneNumRegAndResetPwdReqBuilder*) clearPhoneNum {
  resultPhoneNumRegAndResetPwdReq.hasPhoneNum = NO;
  resultPhoneNumRegAndResetPwdReq.phoneNum = @"";
  return self;
}
- (BOOL) hasVcode {
  return resultPhoneNumRegAndResetPwdReq.hasVcode;
}
- (NSString*) vcode {
  return resultPhoneNumRegAndResetPwdReq.vcode;
}
- (PhoneNumRegAndResetPwdReqBuilder*) setVcode:(NSString*) value {
  resultPhoneNumRegAndResetPwdReq.hasVcode = YES;
  resultPhoneNumRegAndResetPwdReq.vcode = value;
  return self;
}
- (PhoneNumRegAndResetPwdReqBuilder*) clearVcode {
  resultPhoneNumRegAndResetPwdReq.hasVcode = NO;
  resultPhoneNumRegAndResetPwdReq.vcode = @"";
  return self;
}
- (BOOL) hasMd5Pwd {
  return resultPhoneNumRegAndResetPwdReq.hasMd5Pwd;
}
- (NSString*) md5Pwd {
  return resultPhoneNumRegAndResetPwdReq.md5Pwd;
}
- (PhoneNumRegAndResetPwdReqBuilder*) setMd5Pwd:(NSString*) value {
  resultPhoneNumRegAndResetPwdReq.hasMd5Pwd = YES;
  resultPhoneNumRegAndResetPwdReq.md5Pwd = value;
  return self;
}
- (PhoneNumRegAndResetPwdReqBuilder*) clearMd5Pwd {
  resultPhoneNumRegAndResetPwdReq.hasMd5Pwd = NO;
  resultPhoneNumRegAndResetPwdReq.md5Pwd = @"";
  return self;
}
@end

@interface PhoneNumRegAndResetPwdRes ()
@property (strong) LoginedRegUser* loginedUser;
@end

@implementation PhoneNumRegAndResetPwdRes

- (BOOL) hasLoginedUser {
  return !!hasLoginedUser_;
}
- (void) setHasLoginedUser:(BOOL) _value_ {
  hasLoginedUser_ = !!_value_;
}
@synthesize loginedUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.loginedUser = [LoginedRegUser defaultInstance];
  }
  return self;
}
static PhoneNumRegAndResetPwdRes* defaultPhoneNumRegAndResetPwdResInstance = nil;
+ (void) initialize {
  if (self == [PhoneNumRegAndResetPwdRes class]) {
    defaultPhoneNumRegAndResetPwdResInstance = [[PhoneNumRegAndResetPwdRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPhoneNumRegAndResetPwdResInstance;
}
- (instancetype) defaultInstance {
  return defaultPhoneNumRegAndResetPwdResInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLoginedUser) {
    [output writeMessage:1 value:self.loginedUser];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLoginedUser) {
    size_ += computeMessageSize(1, self.loginedUser);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PhoneNumRegAndResetPwdRes*) parseFromData:(NSData*) data {
  return (PhoneNumRegAndResetPwdRes*)[[[PhoneNumRegAndResetPwdRes builder] mergeFromData:data] build];
}
+ (PhoneNumRegAndResetPwdRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PhoneNumRegAndResetPwdRes*)[[[PhoneNumRegAndResetPwdRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PhoneNumRegAndResetPwdRes*) parseFromInputStream:(NSInputStream*) input {
  return (PhoneNumRegAndResetPwdRes*)[[[PhoneNumRegAndResetPwdRes builder] mergeFromInputStream:input] build];
}
+ (PhoneNumRegAndResetPwdRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PhoneNumRegAndResetPwdRes*)[[[PhoneNumRegAndResetPwdRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PhoneNumRegAndResetPwdRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PhoneNumRegAndResetPwdRes*)[[[PhoneNumRegAndResetPwdRes builder] mergeFromCodedInputStream:input] build];
}
+ (PhoneNumRegAndResetPwdRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PhoneNumRegAndResetPwdRes*)[[[PhoneNumRegAndResetPwdRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PhoneNumRegAndResetPwdResBuilder*) builder {
  return [[PhoneNumRegAndResetPwdResBuilder alloc] init];
}
+ (PhoneNumRegAndResetPwdResBuilder*) builderWithPrototype:(PhoneNumRegAndResetPwdRes*) prototype {
  return [[PhoneNumRegAndResetPwdRes builder] mergeFrom:prototype];
}
- (PhoneNumRegAndResetPwdResBuilder*) builder {
  return [PhoneNumRegAndResetPwdRes builder];
}
- (PhoneNumRegAndResetPwdResBuilder*) toBuilder {
  return [PhoneNumRegAndResetPwdRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLoginedUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"loginedUser"];
    [self.loginedUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasLoginedUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.loginedUser storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"loginedUser"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PhoneNumRegAndResetPwdRes class]]) {
    return NO;
  }
  PhoneNumRegAndResetPwdRes *otherMessage = other;
  return
      self.hasLoginedUser == otherMessage.hasLoginedUser &&
      (!self.hasLoginedUser || [self.loginedUser isEqual:otherMessage.loginedUser]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLoginedUser) {
    hashCode = hashCode * 31 + [self.loginedUser hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PhoneNumRegAndResetPwdResBuilder()
@property (strong) PhoneNumRegAndResetPwdRes* resultPhoneNumRegAndResetPwdRes;
@end

@implementation PhoneNumRegAndResetPwdResBuilder
@synthesize resultPhoneNumRegAndResetPwdRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPhoneNumRegAndResetPwdRes = [[PhoneNumRegAndResetPwdRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPhoneNumRegAndResetPwdRes;
}
- (PhoneNumRegAndResetPwdResBuilder*) clear {
  self.resultPhoneNumRegAndResetPwdRes = [[PhoneNumRegAndResetPwdRes alloc] init];
  return self;
}
- (PhoneNumRegAndResetPwdResBuilder*) clone {
  return [PhoneNumRegAndResetPwdRes builderWithPrototype:resultPhoneNumRegAndResetPwdRes];
}
- (PhoneNumRegAndResetPwdRes*) defaultInstance {
  return [PhoneNumRegAndResetPwdRes defaultInstance];
}
- (PhoneNumRegAndResetPwdRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PhoneNumRegAndResetPwdRes*) buildPartial {
  PhoneNumRegAndResetPwdRes* returnMe = resultPhoneNumRegAndResetPwdRes;
  self.resultPhoneNumRegAndResetPwdRes = nil;
  return returnMe;
}
- (PhoneNumRegAndResetPwdResBuilder*) mergeFrom:(PhoneNumRegAndResetPwdRes*) other {
  if (other == [PhoneNumRegAndResetPwdRes defaultInstance]) {
    return self;
  }
  if (other.hasLoginedUser) {
    [self mergeLoginedUser:other.loginedUser];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PhoneNumRegAndResetPwdResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PhoneNumRegAndResetPwdResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LoginedRegUserBuilder* subBuilder = [LoginedRegUser builder];
        if (self.hasLoginedUser) {
          [subBuilder mergeFrom:self.loginedUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginedUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasLoginedUser {
  return resultPhoneNumRegAndResetPwdRes.hasLoginedUser;
}
- (LoginedRegUser*) loginedUser {
  return resultPhoneNumRegAndResetPwdRes.loginedUser;
}
- (PhoneNumRegAndResetPwdResBuilder*) setLoginedUser:(LoginedRegUser*) value {
  resultPhoneNumRegAndResetPwdRes.hasLoginedUser = YES;
  resultPhoneNumRegAndResetPwdRes.loginedUser = value;
  return self;
}
- (PhoneNumRegAndResetPwdResBuilder*) setLoginedUserBuilder:(LoginedRegUserBuilder*) builderForValue {
  return [self setLoginedUser:[builderForValue build]];
}
- (PhoneNumRegAndResetPwdResBuilder*) mergeLoginedUser:(LoginedRegUser*) value {
  if (resultPhoneNumRegAndResetPwdRes.hasLoginedUser &&
      resultPhoneNumRegAndResetPwdRes.loginedUser != [LoginedRegUser defaultInstance]) {
    resultPhoneNumRegAndResetPwdRes.loginedUser =
      [[[LoginedRegUser builderWithPrototype:resultPhoneNumRegAndResetPwdRes.loginedUser] mergeFrom:value] buildPartial];
  } else {
    resultPhoneNumRegAndResetPwdRes.loginedUser = value;
  }
  resultPhoneNumRegAndResetPwdRes.hasLoginedUser = YES;
  return self;
}
- (PhoneNumRegAndResetPwdResBuilder*) clearLoginedUser {
  resultPhoneNumRegAndResetPwdRes.hasLoginedUser = NO;
  resultPhoneNumRegAndResetPwdRes.loginedUser = [LoginedRegUser defaultInstance];
  return self;
}
@end

@interface ResetPwdReq ()
@property (strong) NSString* oldMd5Pwd;
@property (strong) NS_RETURNS_NOT_RETAINED NSString* newMd5Pwd;
@end

@implementation ResetPwdReq

- (BOOL) hasOldMd5Pwd {
  return !!hasOldMd5Pwd_;
}
- (void) setHasOldMd5Pwd:(BOOL) _value_ {
  hasOldMd5Pwd_ = !!_value_;
}
@synthesize oldMd5Pwd;
- (BOOL) hasNewMd5Pwd {
  return !!hasNewMd5Pwd_;
}
- (void) setHasNewMd5Pwd:(BOOL) _value_ {
  hasNewMd5Pwd_ = !!_value_;
}
@synthesize newMd5Pwd;
- (instancetype) init {
  if ((self = [super init])) {
    self.oldMd5Pwd = @"";
    self.newMd5Pwd = @"";
  }
  return self;
}
static ResetPwdReq* defaultResetPwdReqInstance = nil;
+ (void) initialize {
  if (self == [ResetPwdReq class]) {
    defaultResetPwdReqInstance = [[ResetPwdReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultResetPwdReqInstance;
}
- (instancetype) defaultInstance {
  return defaultResetPwdReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOldMd5Pwd) {
    return NO;
  }
  if (!self.hasNewMd5Pwd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOldMd5Pwd) {
    [output writeString:1 value:self.oldMd5Pwd];
  }
  if (self.hasNewMd5Pwd) {
    [output writeString:3 value:self.newMd5Pwd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOldMd5Pwd) {
    size_ += computeStringSize(1, self.oldMd5Pwd);
  }
  if (self.hasNewMd5Pwd) {
    size_ += computeStringSize(3, self.newMd5Pwd);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResetPwdReq*) parseFromData:(NSData*) data {
  return (ResetPwdReq*)[[[ResetPwdReq builder] mergeFromData:data] build];
}
+ (ResetPwdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPwdReq*)[[[ResetPwdReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResetPwdReq*) parseFromInputStream:(NSInputStream*) input {
  return (ResetPwdReq*)[[[ResetPwdReq builder] mergeFromInputStream:input] build];
}
+ (ResetPwdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPwdReq*)[[[ResetPwdReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResetPwdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResetPwdReq*)[[[ResetPwdReq builder] mergeFromCodedInputStream:input] build];
}
+ (ResetPwdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPwdReq*)[[[ResetPwdReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResetPwdReqBuilder*) builder {
  return [[ResetPwdReqBuilder alloc] init];
}
+ (ResetPwdReqBuilder*) builderWithPrototype:(ResetPwdReq*) prototype {
  return [[ResetPwdReq builder] mergeFrom:prototype];
}
- (ResetPwdReqBuilder*) builder {
  return [ResetPwdReq builder];
}
- (ResetPwdReqBuilder*) toBuilder {
  return [ResetPwdReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOldMd5Pwd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oldMd5Pwd", self.oldMd5Pwd];
  }
  if (self.hasNewMd5Pwd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"newMd5Pwd", self.newMd5Pwd];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOldMd5Pwd) {
    [dictionary setObject: self.oldMd5Pwd forKey: @"oldMd5Pwd"];
  }
  if (self.hasNewMd5Pwd) {
    [dictionary setObject: self.newMd5Pwd forKey: @"newMd5Pwd"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResetPwdReq class]]) {
    return NO;
  }
  ResetPwdReq *otherMessage = other;
  return
      self.hasOldMd5Pwd == otherMessage.hasOldMd5Pwd &&
      (!self.hasOldMd5Pwd || [self.oldMd5Pwd isEqual:otherMessage.oldMd5Pwd]) &&
      self.hasNewMd5Pwd == otherMessage.hasNewMd5Pwd &&
      (!self.hasNewMd5Pwd || [self.newMd5Pwd isEqual:otherMessage.newMd5Pwd]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOldMd5Pwd) {
    hashCode = hashCode * 31 + [self.oldMd5Pwd hash];
  }
  if (self.hasNewMd5Pwd) {
    hashCode = hashCode * 31 + [self.newMd5Pwd hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResetPwdReqBuilder()
@property (strong) ResetPwdReq* resultResetPwdReq;
@end

@implementation ResetPwdReqBuilder
@synthesize resultResetPwdReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResetPwdReq = [[ResetPwdReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResetPwdReq;
}
- (ResetPwdReqBuilder*) clear {
  self.resultResetPwdReq = [[ResetPwdReq alloc] init];
  return self;
}
- (ResetPwdReqBuilder*) clone {
  return [ResetPwdReq builderWithPrototype:resultResetPwdReq];
}
- (ResetPwdReq*) defaultInstance {
  return [ResetPwdReq defaultInstance];
}
- (ResetPwdReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResetPwdReq*) buildPartial {
  ResetPwdReq* returnMe = resultResetPwdReq;
  self.resultResetPwdReq = nil;
  return returnMe;
}
- (ResetPwdReqBuilder*) mergeFrom:(ResetPwdReq*) other {
  if (other == [ResetPwdReq defaultInstance]) {
    return self;
  }
  if (other.hasOldMd5Pwd) {
    [self setOldMd5Pwd:other.oldMd5Pwd];
  }
  if (other.hasNewMd5Pwd) {
    [self setNewMd5Pwd:other.newMd5Pwd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResetPwdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResetPwdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setOldMd5Pwd:[input readString]];
        break;
      }
      case 26: {
        [self setNewMd5Pwd:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasOldMd5Pwd {
  return resultResetPwdReq.hasOldMd5Pwd;
}
- (NSString*) oldMd5Pwd {
  return resultResetPwdReq.oldMd5Pwd;
}
- (ResetPwdReqBuilder*) setOldMd5Pwd:(NSString*) value {
  resultResetPwdReq.hasOldMd5Pwd = YES;
  resultResetPwdReq.oldMd5Pwd = value;
  return self;
}
- (ResetPwdReqBuilder*) clearOldMd5Pwd {
  resultResetPwdReq.hasOldMd5Pwd = NO;
  resultResetPwdReq.oldMd5Pwd = @"";
  return self;
}
- (BOOL) hasNewMd5Pwd {
  return resultResetPwdReq.hasNewMd5Pwd;
}
- (NSString*) newMd5Pwd {
  return resultResetPwdReq.newMd5Pwd;
}
- (ResetPwdReqBuilder*) setNewMd5Pwd:(NSString*) value {
  resultResetPwdReq.hasNewMd5Pwd = YES;
  resultResetPwdReq.newMd5Pwd = value;
  return self;
}
- (ResetPwdReqBuilder*) clearNewMd5Pwd {
  resultResetPwdReq.hasNewMd5Pwd = NO;
  resultResetPwdReq.newMd5Pwd = @"";
  return self;
}
@end

@interface RegUserLoginReq ()
@property (strong) NSString* u;
@property (strong) NSString* md5Pwd;
@end

@implementation RegUserLoginReq

- (BOOL) hasU {
  return !!hasU_;
}
- (void) setHasU:(BOOL) _value_ {
  hasU_ = !!_value_;
}
@synthesize u;
- (BOOL) hasMd5Pwd {
  return !!hasMd5Pwd_;
}
- (void) setHasMd5Pwd:(BOOL) _value_ {
  hasMd5Pwd_ = !!_value_;
}
@synthesize md5Pwd;
- (instancetype) init {
  if ((self = [super init])) {
    self.u = @"";
    self.md5Pwd = @"";
  }
  return self;
}
static RegUserLoginReq* defaultRegUserLoginReqInstance = nil;
+ (void) initialize {
  if (self == [RegUserLoginReq class]) {
    defaultRegUserLoginReqInstance = [[RegUserLoginReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRegUserLoginReqInstance;
}
- (instancetype) defaultInstance {
  return defaultRegUserLoginReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasU) {
    return NO;
  }
  if (!self.hasMd5Pwd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasU) {
    [output writeString:1 value:self.u];
  }
  if (self.hasMd5Pwd) {
    [output writeString:3 value:self.md5Pwd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasU) {
    size_ += computeStringSize(1, self.u);
  }
  if (self.hasMd5Pwd) {
    size_ += computeStringSize(3, self.md5Pwd);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RegUserLoginReq*) parseFromData:(NSData*) data {
  return (RegUserLoginReq*)[[[RegUserLoginReq builder] mergeFromData:data] build];
}
+ (RegUserLoginReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUserLoginReq*)[[[RegUserLoginReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RegUserLoginReq*) parseFromInputStream:(NSInputStream*) input {
  return (RegUserLoginReq*)[[[RegUserLoginReq builder] mergeFromInputStream:input] build];
}
+ (RegUserLoginReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUserLoginReq*)[[[RegUserLoginReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegUserLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RegUserLoginReq*)[[[RegUserLoginReq builder] mergeFromCodedInputStream:input] build];
}
+ (RegUserLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUserLoginReq*)[[[RegUserLoginReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegUserLoginReqBuilder*) builder {
  return [[RegUserLoginReqBuilder alloc] init];
}
+ (RegUserLoginReqBuilder*) builderWithPrototype:(RegUserLoginReq*) prototype {
  return [[RegUserLoginReq builder] mergeFrom:prototype];
}
- (RegUserLoginReqBuilder*) builder {
  return [RegUserLoginReq builder];
}
- (RegUserLoginReqBuilder*) toBuilder {
  return [RegUserLoginReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasU) {
    [output appendFormat:@"%@%@: %@\n", indent, @"u", self.u];
  }
  if (self.hasMd5Pwd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"md5Pwd", self.md5Pwd];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasU) {
    [dictionary setObject: self.u forKey: @"u"];
  }
  if (self.hasMd5Pwd) {
    [dictionary setObject: self.md5Pwd forKey: @"md5Pwd"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RegUserLoginReq class]]) {
    return NO;
  }
  RegUserLoginReq *otherMessage = other;
  return
      self.hasU == otherMessage.hasU &&
      (!self.hasU || [self.u isEqual:otherMessage.u]) &&
      self.hasMd5Pwd == otherMessage.hasMd5Pwd &&
      (!self.hasMd5Pwd || [self.md5Pwd isEqual:otherMessage.md5Pwd]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasU) {
    hashCode = hashCode * 31 + [self.u hash];
  }
  if (self.hasMd5Pwd) {
    hashCode = hashCode * 31 + [self.md5Pwd hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RegUserLoginReqBuilder()
@property (strong) RegUserLoginReq* resultRegUserLoginReq;
@end

@implementation RegUserLoginReqBuilder
@synthesize resultRegUserLoginReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRegUserLoginReq = [[RegUserLoginReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRegUserLoginReq;
}
- (RegUserLoginReqBuilder*) clear {
  self.resultRegUserLoginReq = [[RegUserLoginReq alloc] init];
  return self;
}
- (RegUserLoginReqBuilder*) clone {
  return [RegUserLoginReq builderWithPrototype:resultRegUserLoginReq];
}
- (RegUserLoginReq*) defaultInstance {
  return [RegUserLoginReq defaultInstance];
}
- (RegUserLoginReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RegUserLoginReq*) buildPartial {
  RegUserLoginReq* returnMe = resultRegUserLoginReq;
  self.resultRegUserLoginReq = nil;
  return returnMe;
}
- (RegUserLoginReqBuilder*) mergeFrom:(RegUserLoginReq*) other {
  if (other == [RegUserLoginReq defaultInstance]) {
    return self;
  }
  if (other.hasU) {
    [self setU:other.u];
  }
  if (other.hasMd5Pwd) {
    [self setMd5Pwd:other.md5Pwd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RegUserLoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RegUserLoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setU:[input readString]];
        break;
      }
      case 26: {
        [self setMd5Pwd:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasU {
  return resultRegUserLoginReq.hasU;
}
- (NSString*) u {
  return resultRegUserLoginReq.u;
}
- (RegUserLoginReqBuilder*) setU:(NSString*) value {
  resultRegUserLoginReq.hasU = YES;
  resultRegUserLoginReq.u = value;
  return self;
}
- (RegUserLoginReqBuilder*) clearU {
  resultRegUserLoginReq.hasU = NO;
  resultRegUserLoginReq.u = @"";
  return self;
}
- (BOOL) hasMd5Pwd {
  return resultRegUserLoginReq.hasMd5Pwd;
}
- (NSString*) md5Pwd {
  return resultRegUserLoginReq.md5Pwd;
}
- (RegUserLoginReqBuilder*) setMd5Pwd:(NSString*) value {
  resultRegUserLoginReq.hasMd5Pwd = YES;
  resultRegUserLoginReq.md5Pwd = value;
  return self;
}
- (RegUserLoginReqBuilder*) clearMd5Pwd {
  resultRegUserLoginReq.hasMd5Pwd = NO;
  resultRegUserLoginReq.md5Pwd = @"";
  return self;
}
@end

@interface RegUserLoginRes ()
@property (strong) LoginedRegUser* loginedUser;
@end

@implementation RegUserLoginRes

- (BOOL) hasLoginedUser {
  return !!hasLoginedUser_;
}
- (void) setHasLoginedUser:(BOOL) _value_ {
  hasLoginedUser_ = !!_value_;
}
@synthesize loginedUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.loginedUser = [LoginedRegUser defaultInstance];
  }
  return self;
}
static RegUserLoginRes* defaultRegUserLoginResInstance = nil;
+ (void) initialize {
  if (self == [RegUserLoginRes class]) {
    defaultRegUserLoginResInstance = [[RegUserLoginRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRegUserLoginResInstance;
}
- (instancetype) defaultInstance {
  return defaultRegUserLoginResInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLoginedUser) {
    [output writeMessage:1 value:self.loginedUser];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLoginedUser) {
    size_ += computeMessageSize(1, self.loginedUser);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RegUserLoginRes*) parseFromData:(NSData*) data {
  return (RegUserLoginRes*)[[[RegUserLoginRes builder] mergeFromData:data] build];
}
+ (RegUserLoginRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUserLoginRes*)[[[RegUserLoginRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RegUserLoginRes*) parseFromInputStream:(NSInputStream*) input {
  return (RegUserLoginRes*)[[[RegUserLoginRes builder] mergeFromInputStream:input] build];
}
+ (RegUserLoginRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUserLoginRes*)[[[RegUserLoginRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegUserLoginRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RegUserLoginRes*)[[[RegUserLoginRes builder] mergeFromCodedInputStream:input] build];
}
+ (RegUserLoginRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegUserLoginRes*)[[[RegUserLoginRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegUserLoginResBuilder*) builder {
  return [[RegUserLoginResBuilder alloc] init];
}
+ (RegUserLoginResBuilder*) builderWithPrototype:(RegUserLoginRes*) prototype {
  return [[RegUserLoginRes builder] mergeFrom:prototype];
}
- (RegUserLoginResBuilder*) builder {
  return [RegUserLoginRes builder];
}
- (RegUserLoginResBuilder*) toBuilder {
  return [RegUserLoginRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLoginedUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"loginedUser"];
    [self.loginedUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasLoginedUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.loginedUser storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"loginedUser"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RegUserLoginRes class]]) {
    return NO;
  }
  RegUserLoginRes *otherMessage = other;
  return
      self.hasLoginedUser == otherMessage.hasLoginedUser &&
      (!self.hasLoginedUser || [self.loginedUser isEqual:otherMessage.loginedUser]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLoginedUser) {
    hashCode = hashCode * 31 + [self.loginedUser hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RegUserLoginResBuilder()
@property (strong) RegUserLoginRes* resultRegUserLoginRes;
@end

@implementation RegUserLoginResBuilder
@synthesize resultRegUserLoginRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRegUserLoginRes = [[RegUserLoginRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRegUserLoginRes;
}
- (RegUserLoginResBuilder*) clear {
  self.resultRegUserLoginRes = [[RegUserLoginRes alloc] init];
  return self;
}
- (RegUserLoginResBuilder*) clone {
  return [RegUserLoginRes builderWithPrototype:resultRegUserLoginRes];
}
- (RegUserLoginRes*) defaultInstance {
  return [RegUserLoginRes defaultInstance];
}
- (RegUserLoginRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RegUserLoginRes*) buildPartial {
  RegUserLoginRes* returnMe = resultRegUserLoginRes;
  self.resultRegUserLoginRes = nil;
  return returnMe;
}
- (RegUserLoginResBuilder*) mergeFrom:(RegUserLoginRes*) other {
  if (other == [RegUserLoginRes defaultInstance]) {
    return self;
  }
  if (other.hasLoginedUser) {
    [self mergeLoginedUser:other.loginedUser];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RegUserLoginResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RegUserLoginResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LoginedRegUserBuilder* subBuilder = [LoginedRegUser builder];
        if (self.hasLoginedUser) {
          [subBuilder mergeFrom:self.loginedUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginedUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasLoginedUser {
  return resultRegUserLoginRes.hasLoginedUser;
}
- (LoginedRegUser*) loginedUser {
  return resultRegUserLoginRes.loginedUser;
}
- (RegUserLoginResBuilder*) setLoginedUser:(LoginedRegUser*) value {
  resultRegUserLoginRes.hasLoginedUser = YES;
  resultRegUserLoginRes.loginedUser = value;
  return self;
}
- (RegUserLoginResBuilder*) setLoginedUserBuilder:(LoginedRegUserBuilder*) builderForValue {
  return [self setLoginedUser:[builderForValue build]];
}
- (RegUserLoginResBuilder*) mergeLoginedUser:(LoginedRegUser*) value {
  if (resultRegUserLoginRes.hasLoginedUser &&
      resultRegUserLoginRes.loginedUser != [LoginedRegUser defaultInstance]) {
    resultRegUserLoginRes.loginedUser =
      [[[LoginedRegUser builderWithPrototype:resultRegUserLoginRes.loginedUser] mergeFrom:value] buildPartial];
  } else {
    resultRegUserLoginRes.loginedUser = value;
  }
  resultRegUserLoginRes.hasLoginedUser = YES;
  return self;
}
- (RegUserLoginResBuilder*) clearLoginedUser {
  resultRegUserLoginRes.hasLoginedUser = NO;
  resultRegUserLoginRes.loginedUser = [LoginedRegUser defaultInstance];
  return self;
}
@end

@interface ReadLogReq ()
@property UInt32 chapterId;
@property UInt32 ioffset;
@end

@implementation ReadLogReq

- (BOOL) hasChapterId {
  return !!hasChapterId_;
}
- (void) setHasChapterId:(BOOL) _value_ {
  hasChapterId_ = !!_value_;
}
@synthesize chapterId;
- (BOOL) hasIoffset {
  return !!hasIoffset_;
}
- (void) setHasIoffset:(BOOL) _value_ {
  hasIoffset_ = !!_value_;
}
@synthesize ioffset;
- (instancetype) init {
  if ((self = [super init])) {
    self.chapterId = 0;
    self.ioffset = 0;
  }
  return self;
}
static ReadLogReq* defaultReadLogReqInstance = nil;
+ (void) initialize {
  if (self == [ReadLogReq class]) {
    defaultReadLogReqInstance = [[ReadLogReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultReadLogReqInstance;
}
- (instancetype) defaultInstance {
  return defaultReadLogReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasChapterId) {
    return NO;
  }
  if (!self.hasIoffset) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChapterId) {
    [output writeUInt32:1 value:self.chapterId];
  }
  if (self.hasIoffset) {
    [output writeUInt32:3 value:self.ioffset];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChapterId) {
    size_ += computeUInt32Size(1, self.chapterId);
  }
  if (self.hasIoffset) {
    size_ += computeUInt32Size(3, self.ioffset);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReadLogReq*) parseFromData:(NSData*) data {
  return (ReadLogReq*)[[[ReadLogReq builder] mergeFromData:data] build];
}
+ (ReadLogReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReadLogReq*)[[[ReadLogReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReadLogReq*) parseFromInputStream:(NSInputStream*) input {
  return (ReadLogReq*)[[[ReadLogReq builder] mergeFromInputStream:input] build];
}
+ (ReadLogReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReadLogReq*)[[[ReadLogReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReadLogReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReadLogReq*)[[[ReadLogReq builder] mergeFromCodedInputStream:input] build];
}
+ (ReadLogReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReadLogReq*)[[[ReadLogReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReadLogReqBuilder*) builder {
  return [[ReadLogReqBuilder alloc] init];
}
+ (ReadLogReqBuilder*) builderWithPrototype:(ReadLogReq*) prototype {
  return [[ReadLogReq builder] mergeFrom:prototype];
}
- (ReadLogReqBuilder*) builder {
  return [ReadLogReq builder];
}
- (ReadLogReqBuilder*) toBuilder {
  return [ReadLogReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChapterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"chapterId", [NSNumber numberWithInteger:self.chapterId]];
  }
  if (self.hasIoffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ioffset", [NSNumber numberWithInteger:self.ioffset]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasChapterId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.chapterId] forKey: @"chapterId"];
  }
  if (self.hasIoffset) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ioffset] forKey: @"ioffset"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReadLogReq class]]) {
    return NO;
  }
  ReadLogReq *otherMessage = other;
  return
      self.hasChapterId == otherMessage.hasChapterId &&
      (!self.hasChapterId || self.chapterId == otherMessage.chapterId) &&
      self.hasIoffset == otherMessage.hasIoffset &&
      (!self.hasIoffset || self.ioffset == otherMessage.ioffset) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasChapterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.chapterId] hash];
  }
  if (self.hasIoffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ioffset] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReadLogReqBuilder()
@property (strong) ReadLogReq* resultReadLogReq;
@end

@implementation ReadLogReqBuilder
@synthesize resultReadLogReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadLogReq = [[ReadLogReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadLogReq;
}
- (ReadLogReqBuilder*) clear {
  self.resultReadLogReq = [[ReadLogReq alloc] init];
  return self;
}
- (ReadLogReqBuilder*) clone {
  return [ReadLogReq builderWithPrototype:resultReadLogReq];
}
- (ReadLogReq*) defaultInstance {
  return [ReadLogReq defaultInstance];
}
- (ReadLogReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReadLogReq*) buildPartial {
  ReadLogReq* returnMe = resultReadLogReq;
  self.resultReadLogReq = nil;
  return returnMe;
}
- (ReadLogReqBuilder*) mergeFrom:(ReadLogReq*) other {
  if (other == [ReadLogReq defaultInstance]) {
    return self;
  }
  if (other.hasChapterId) {
    [self setChapterId:other.chapterId];
  }
  if (other.hasIoffset) {
    [self setIoffset:other.ioffset];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReadLogReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReadLogReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setChapterId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setIoffset:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasChapterId {
  return resultReadLogReq.hasChapterId;
}
- (UInt32) chapterId {
  return resultReadLogReq.chapterId;
}
- (ReadLogReqBuilder*) setChapterId:(UInt32) value {
  resultReadLogReq.hasChapterId = YES;
  resultReadLogReq.chapterId = value;
  return self;
}
- (ReadLogReqBuilder*) clearChapterId {
  resultReadLogReq.hasChapterId = NO;
  resultReadLogReq.chapterId = 0;
  return self;
}
- (BOOL) hasIoffset {
  return resultReadLogReq.hasIoffset;
}
- (UInt32) ioffset {
  return resultReadLogReq.ioffset;
}
- (ReadLogReqBuilder*) setIoffset:(UInt32) value {
  resultReadLogReq.hasIoffset = YES;
  resultReadLogReq.ioffset = value;
  return self;
}
- (ReadLogReqBuilder*) clearIoffset {
  resultReadLogReq.hasIoffset = NO;
  resultReadLogReq.ioffset = 0;
  return self;
}
@end

@interface UpdateRes ()
@property UInt32 up;
@property (strong) NSString* verName;
@property UInt32 upT;
@property (strong) NSString* url;
@end

@implementation UpdateRes

- (BOOL) hasUp {
  return !!hasUp_;
}
- (void) setHasUp:(BOOL) _value_ {
  hasUp_ = !!_value_;
}
@synthesize up;
- (BOOL) hasVerName {
  return !!hasVerName_;
}
- (void) setHasVerName:(BOOL) _value_ {
  hasVerName_ = !!_value_;
}
@synthesize verName;
- (BOOL) hasUpT {
  return !!hasUpT_;
}
- (void) setHasUpT:(BOOL) _value_ {
  hasUpT_ = !!_value_;
}
@synthesize upT;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (instancetype) init {
  if ((self = [super init])) {
    self.up = 0;
    self.verName = @"";
    self.upT = 0;
    self.url = @"";
  }
  return self;
}
static UpdateRes* defaultUpdateResInstance = nil;
+ (void) initialize {
  if (self == [UpdateRes class]) {
    defaultUpdateResInstance = [[UpdateRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultUpdateResInstance;
}
- (instancetype) defaultInstance {
  return defaultUpdateResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUp) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUp) {
    [output writeUInt32:1 value:self.up];
  }
  if (self.hasVerName) {
    [output writeString:3 value:self.verName];
  }
  if (self.hasUpT) {
    [output writeUInt32:5 value:self.upT];
  }
  if (self.hasUrl) {
    [output writeString:7 value:self.url];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUp) {
    size_ += computeUInt32Size(1, self.up);
  }
  if (self.hasVerName) {
    size_ += computeStringSize(3, self.verName);
  }
  if (self.hasUpT) {
    size_ += computeUInt32Size(5, self.upT);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(7, self.url);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UpdateRes*) parseFromData:(NSData*) data {
  return (UpdateRes*)[[[UpdateRes builder] mergeFromData:data] build];
}
+ (UpdateRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateRes*)[[[UpdateRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateRes*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateRes*)[[[UpdateRes builder] mergeFromInputStream:input] build];
}
+ (UpdateRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateRes*)[[[UpdateRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateRes*)[[[UpdateRes builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateRes*)[[[UpdateRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateResBuilder*) builder {
  return [[UpdateResBuilder alloc] init];
}
+ (UpdateResBuilder*) builderWithPrototype:(UpdateRes*) prototype {
  return [[UpdateRes builder] mergeFrom:prototype];
}
- (UpdateResBuilder*) builder {
  return [UpdateRes builder];
}
- (UpdateResBuilder*) toBuilder {
  return [UpdateRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"up", [NSNumber numberWithInteger:self.up]];
  }
  if (self.hasVerName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"verName", self.verName];
  }
  if (self.hasUpT) {
    [output appendFormat:@"%@%@: %@\n", indent, @"upT", [NSNumber numberWithInteger:self.upT]];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUp) {
    [dictionary setObject: [NSNumber numberWithInteger:self.up] forKey: @"up"];
  }
  if (self.hasVerName) {
    [dictionary setObject: self.verName forKey: @"verName"];
  }
  if (self.hasUpT) {
    [dictionary setObject: [NSNumber numberWithInteger:self.upT] forKey: @"upT"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UpdateRes class]]) {
    return NO;
  }
  UpdateRes *otherMessage = other;
  return
      self.hasUp == otherMessage.hasUp &&
      (!self.hasUp || self.up == otherMessage.up) &&
      self.hasVerName == otherMessage.hasVerName &&
      (!self.hasVerName || [self.verName isEqual:otherMessage.verName]) &&
      self.hasUpT == otherMessage.hasUpT &&
      (!self.hasUpT || self.upT == otherMessage.upT) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.up] hash];
  }
  if (self.hasVerName) {
    hashCode = hashCode * 31 + [self.verName hash];
  }
  if (self.hasUpT) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.upT] hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UpdateResBuilder()
@property (strong) UpdateRes* resultUpdateRes;
@end

@implementation UpdateResBuilder
@synthesize resultUpdateRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateRes = [[UpdateRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateRes;
}
- (UpdateResBuilder*) clear {
  self.resultUpdateRes = [[UpdateRes alloc] init];
  return self;
}
- (UpdateResBuilder*) clone {
  return [UpdateRes builderWithPrototype:resultUpdateRes];
}
- (UpdateRes*) defaultInstance {
  return [UpdateRes defaultInstance];
}
- (UpdateRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateRes*) buildPartial {
  UpdateRes* returnMe = resultUpdateRes;
  self.resultUpdateRes = nil;
  return returnMe;
}
- (UpdateResBuilder*) mergeFrom:(UpdateRes*) other {
  if (other == [UpdateRes defaultInstance]) {
    return self;
  }
  if (other.hasUp) {
    [self setUp:other.up];
  }
  if (other.hasVerName) {
    [self setVerName:other.verName];
  }
  if (other.hasUpT) {
    [self setUpT:other.upT];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUp:[input readUInt32]];
        break;
      }
      case 26: {
        [self setVerName:[input readString]];
        break;
      }
      case 40: {
        [self setUpT:[input readUInt32]];
        break;
      }
      case 58: {
        [self setUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUp {
  return resultUpdateRes.hasUp;
}
- (UInt32) up {
  return resultUpdateRes.up;
}
- (UpdateResBuilder*) setUp:(UInt32) value {
  resultUpdateRes.hasUp = YES;
  resultUpdateRes.up = value;
  return self;
}
- (UpdateResBuilder*) clearUp {
  resultUpdateRes.hasUp = NO;
  resultUpdateRes.up = 0;
  return self;
}
- (BOOL) hasVerName {
  return resultUpdateRes.hasVerName;
}
- (NSString*) verName {
  return resultUpdateRes.verName;
}
- (UpdateResBuilder*) setVerName:(NSString*) value {
  resultUpdateRes.hasVerName = YES;
  resultUpdateRes.verName = value;
  return self;
}
- (UpdateResBuilder*) clearVerName {
  resultUpdateRes.hasVerName = NO;
  resultUpdateRes.verName = @"";
  return self;
}
- (BOOL) hasUpT {
  return resultUpdateRes.hasUpT;
}
- (UInt32) upT {
  return resultUpdateRes.upT;
}
- (UpdateResBuilder*) setUpT:(UInt32) value {
  resultUpdateRes.hasUpT = YES;
  resultUpdateRes.upT = value;
  return self;
}
- (UpdateResBuilder*) clearUpT {
  resultUpdateRes.hasUpT = NO;
  resultUpdateRes.upT = 0;
  return self;
}
- (BOOL) hasUrl {
  return resultUpdateRes.hasUrl;
}
- (NSString*) url {
  return resultUpdateRes.url;
}
- (UpdateResBuilder*) setUrl:(NSString*) value {
  resultUpdateRes.hasUrl = YES;
  resultUpdateRes.url = value;
  return self;
}
- (UpdateResBuilder*) clearUrl {
  resultUpdateRes.hasUrl = NO;
  resultUpdateRes.url = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
